{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/bson/index.js","webpack:///./node_modules/bson/lib/bson/binary.js","webpack:///./node_modules/bson/lib/bson/bson.js","webpack:///./node_modules/bson/lib/bson/code.js","webpack:///./node_modules/bson/lib/bson/db_ref.js","webpack:///./node_modules/bson/lib/bson/decimal128.js","webpack:///./node_modules/bson/lib/bson/double.js","webpack:///./node_modules/bson/lib/bson/float_parser.js","webpack:///./node_modules/bson/lib/bson/int_32.js","webpack:///./node_modules/bson/lib/bson/long.js","webpack:///./node_modules/bson/lib/bson/map.js","webpack:///./node_modules/bson/lib/bson/max_key.js","webpack:///./node_modules/bson/lib/bson/min_key.js","webpack:///./node_modules/bson/lib/bson/objectid.js","webpack:///./node_modules/bson/lib/bson/parser/calculate_size.js","webpack:///./node_modules/bson/lib/bson/parser/deserializer.js","webpack:///./node_modules/bson/lib/bson/parser/serializer.js","webpack:///./node_modules/bson/lib/bson/regexp.js","webpack:///./node_modules/bson/lib/bson/symbol.js","webpack:///./node_modules/bson/lib/bson/timestamp.js","webpack:///./node_modules/mongodb-core/index.js","webpack:///./node_modules/mongodb-core/lib/auth/defaultAuthProviders.js","webpack:///./node_modules/mongodb-core/lib/auth/gssapi.js","webpack:///./node_modules/mongodb-core/lib/auth/mongocr.js","webpack:///./node_modules/mongodb-core/lib/auth/plain.js","webpack:///./node_modules/mongodb-core/lib/auth/scram.js","webpack:///./node_modules/mongodb-core/lib/auth/sspi.js","webpack:///./node_modules/mongodb-core/lib/auth/x509.js","webpack:///./node_modules/mongodb-core/lib/connection/apm.js","webpack:///./node_modules/mongodb-core/lib/connection/command_result.js","webpack:///./node_modules/mongodb-core/lib/connection/commands.js","webpack:///./node_modules/mongodb-core/lib/connection/connection.js","webpack:///./node_modules/mongodb-core/lib/connection/logger.js","webpack:///./node_modules/mongodb-core/lib/connection/pool.js","webpack:///./node_modules/mongodb-core/lib/connection/utils.js","webpack:///./node_modules/mongodb-core/lib/cursor.js","webpack:///./node_modules/mongodb-core/lib/error.js","webpack:///./node_modules/mongodb-core/lib/sessions.js","webpack:///./node_modules/mongodb-core/lib/topologies/mongos.js","webpack:///./node_modules/mongodb-core/lib/topologies/read_preference.js","webpack:///./node_modules/mongodb-core/lib/topologies/replset.js","webpack:///./node_modules/mongodb-core/lib/topologies/replset_state.js","webpack:///./node_modules/mongodb-core/lib/topologies/server.js","webpack:///./node_modules/mongodb-core/lib/topologies/shared.js","webpack:///./node_modules/mongodb-core/lib/uri_parser.js","webpack:///./node_modules/mongodb-core/lib/utils.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/compression.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/shared.js","webpack:///./node_modules/mongodb/index.js","webpack:///./node_modules/mongodb/lib/admin.js","webpack:///./node_modules/mongodb/lib/aggregation_cursor.js","webpack:///./node_modules/mongodb/lib/apm.js","webpack:///./node_modules/mongodb/lib/authenticate.js","webpack:///./node_modules/mongodb/lib/bulk/common.js","webpack:///./node_modules/mongodb/lib/bulk/ordered.js","webpack:///./node_modules/mongodb/lib/bulk/unordered.js","webpack:///./node_modules/mongodb/lib/change_stream.js","webpack:///./node_modules/mongodb/lib/collection.js","webpack:///./node_modules/mongodb/lib/command_cursor.js","webpack:///./node_modules/mongodb/lib/cursor.js","webpack:///./node_modules/mongodb/lib/db.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/download.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/index.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/upload.js","webpack:///./node_modules/mongodb/lib/gridfs/chunk.js","webpack:///./node_modules/mongodb/lib/gridfs/grid_store.js","webpack:///./node_modules/mongodb/lib/mongo_client.js","webpack:///./node_modules/mongodb/lib/topologies/mongos.js","webpack:///./node_modules/mongodb/lib/topologies/replset.js","webpack:///./node_modules/mongodb/lib/topologies/server.js","webpack:///./node_modules/mongodb/lib/topologies/topology_base.js","webpack:///./node_modules/mongodb/lib/url_parser.js","webpack:///./node_modules/mongodb/lib/utils.js","webpack:///./node_modules/require_optional sync","webpack:///./node_modules/require_optional/index.js","webpack:///./node_modules/resolve-from/index.js","webpack:///./node_modules/saslprep/index.js","webpack:///./node_modules/saslprep/lib/code-points.js","webpack:///./node_modules/saslprep/lib/util.js","webpack:///./node_modules/semver/semver.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/index.js","webpack:///external \"buffer\"","webpack:///external \"crypto\"","webpack:///external \"dns\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"module\"","webpack:///external \"net\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"process\"","webpack:///external \"querystring\"","webpack:///external \"stream\"","webpack:///external \"tls\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"zlib\""],"names":["BSON","require","Binary","Code","DBRef","Decimal128","Double","Int32","Long","Map","MaxKey","MinKey","ObjectId","BSONRegExp","Symbol","Timestamp","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","Math","pow","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","ObjectID","module","exports","global","Buffer","buffer","subType","_bsontype","Number","sub_type","position","BSON_BINARY_SUBTYPE_DEFAULT","Uint8Array","Object","prototype","toString","call","writeStringToArray","Error","length","BUFFER_SIZE","ArrayBuffer","Array","put","byte_value","decoded_byte","charCodeAt","isBuffer","copy","i","write","string","offset","read","slice","value","asRaw","newBuffer","convertArraytoUtf8BinaryString","toJSON","format","data","byteArray","startIndex","endIndex","result","String","fromCharCode","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","deserialize","serializer","calculateObjectSize","MAXSIZE","serialize","object","options","checkKeys","serializeFunctions","ignoreUndefined","minInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","index","deserializeStream","numberOfDocuments","documents","docStartIndex","size","BSON_DATA_NUMBER","BSON_DATA_STRING","BSON_DATA_OBJECT","BSON_DATA_ARRAY","BSON_DATA_BINARY","BSON_DATA_OID","BSON_DATA_BOOLEAN","BSON_DATA_DATE","BSON_DATA_NULL","BSON_DATA_REGEXP","BSON_DATA_CODE","BSON_DATA_SYMBOL","BSON_DATA_CODE_W_SCOPE","BSON_DATA_INT","BSON_DATA_TIMESTAMP","BSON_DATA_LONG","BSON_DATA_MIN_KEY","BSON_DATA_MAX_KEY","BSON_BINARY_SUBTYPE_FUNCTION","BSON_BINARY_SUBTYPE_BYTE_ARRAY","BSON_BINARY_SUBTYPE_UUID","BSON_BINARY_SUBTYPE_MD5","BSON_BINARY_SUBTYPE_USER_DEFINED","code","scope","namespace","oid","db","$ref","$id","$db","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","EXPONENT_BIAS","MAX_DIGITS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","isNaN","parseInt","divideu128","DIVISOR","fromNumber","_rem","parts","quotient","rem","shiftLeft","add","div","low_","modulo","multiply64x2","left","right","high","low","leftHigh","shiftRightUnsigned","leftLow","getLowBits","rightHigh","rightLow","productHigh","multiply","productMid","productMid2","productLow","lessThan","uhleft","high_","uhright","ulleft","ulright","bytes","fromString","isNegative","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","digits","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","biasedExponent","trim","stringMatch","match","infMatch","nanMatch","undefined","substr","digitsString","join","endOfString","roundDigit","roundBit","dIdx","significand","dec","and","equals","or","COMBINATION_MASK","EXPONENT_MASK","COMBINATION_INFINITY","COMBINATION_NAN","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","is_zero","significand_msb","significand128","j","k","ZERO","push","least_digits","floor","radix_position","max","$numberDecimal","valueOf","readIEEE754","endian","mLen","nBytes","e","m","bBE","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","writeIEEE754","c","rt","abs","log","LN2","toInt","toNumber","TWO_PWR_32_DBL_","getLowBitsUnsigned","opt_radix","radix","isZero","MIN_VALUE","radixLong","subtract","negate","radixToPower","remDiv","intval","getHighBits","getNumBitsAbs","val","bit","isOdd","other","notEquals","compare","lessThanOrEqual","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","ONE","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","fromBits","TWO_PWR_24_","NEG_ONE","halfThis","shiftRight","approx","res","log2","ceil","delta","approxRes","approxRem","xor","numBits","fromInt","cachedObj","INT_CACHE_","obj","isFinite","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","str","charAt","substring","indexOf","min","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","array","_keys","_values","entry","key","v","clear","delete","splice","entries","self","next","done","forEach","callback","get","has","keys","set","values","defineProperty","enumerable","MACHINE_ID","random","checkForHexRegExp","RegExp","from","hasBufferType","err","id","generate","cacheHexString","__id","valid","isValid","createFromHexString","toHexString","hexTable","hexString","JSON","stringify","_Buffer","convertToHex","get_inc","getInc","time","Date","now","pid","process","inc","inspect","otherId","toLowerCase","getTimestamp","timestamp","setTime","createPk","createFromTime","decodeLookup","n","test","isDate","totalLength","isArray","calculateElement","toBSON","name","byteLength","ordered_values","source","ignoreCase","multiline","pattern","deserializeObject","evalFunctions","cacheFunctions","cacheFunctionsCrc32","crc32","fieldsAsRaw","raw","bsonRegExp","promoteBuffers","promoteLongs","promoteValues","arrayIndex","elementType","stringSize","readDoubleLE","_index","objectSize","arrayOptions","stopIndex","BSON_DATA_UNDEFINED","long","JS_INT_MAX_LONG","JS_INT_MIN_LONG","BSON_DATA_DECIMAL128","decimal128","toObject","binarySize","totalBinarySize","_buffer","regExpOptions","optionsArray","functionString","hash","isolateEvalWithHash","functionCache","isolateEval","totalSize","scopeObject","BSON_DATA_DBPOINTER","oidBuffer","split","shift","collection","eval","bind","regexp","isRegExp","serializeString","numberOfWrittenBytes","serializeNumber","longVal","serializeNull","serializeBoolean","serializeDate","dateInMilis","getTime","serializeRegExp","serializeBSONRegExp","sort","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","depth","path","serializeInto","pop","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","type","iterator","radixTimestamp","require_optional","BSONNative","MongoError","MongoNetworkError","Connection","Server","ReplSet","Mongos","Logger","Cursor","ReadPreference","Sessions","Query","defaultAuthProviders","MongoCR","X509","Plain","GSSAPI","ScramSHA1","ScramSHA256","parseConnectionString","SSPI","bson","mongocr","x509","plain","gssapi","sspi","f","AuthSession","username","password","equal","session","Kerberos","MongoAuthProcess","processes","authStore","auth","server","connections","gssapiServiceName","count","numberOfValidConnections","errorObject","execute","connection","GSSAPIInitialize","r","addAuthSession","_execute","_connection","nextTick","authdb","mongo_auth_process","host","port","init","transition","payload","MongoDBGSSAPIFirstStep","command","saslStart","mechanism","autoAuthorize","numberToSkip","numberToReturn","doc","MongoDBGSSAPISecondStep","saslContinue","conversationId","MongoDBGSSAPIThirdStep","found","logout","dbName","filter","x","reauthenticate","crypto","executeMongoCR","getnonce","nonce","md5","createHash","update","hash_password","digest","authenticate","user","retrieveBSON","saslprep","ScramSHA","cryptoMethod","parsePayload","dict","valueParts","passwordDigest","a","b","H","method","text","HMAC","createHmac","_hiCache","_hiCacheCount","_hiCachePurge","hiLengthMap","sha256","sha1","HI","salt","iterations","saltedData","pbkdf2Sync","processedPassword","saslprepFn","console","warn","executeScram","replace","randomBytes","firstBare","concat","cmd","handleError","finish","_count","_numberOfValidConnections","handleEnd","_err","_r","rnonce","withoutProof","saltedPassword","error","clientKey","storedKey","authMessage","clientSignature","clientProof","clientFinal","SSIPAuthenticate","KillCursor","GetMore","SENSITIVE_COMMANDS","Set","extractCommandName","calculateDurationInMs","hrtime","started","ns","databaseName","collectionName","generateConnectionId","pool","maybeRedact","commandName","LEGACY_FIND_QUERY_MAP","$query","$orderby","$hint","$comment","$maxScan","$max","$min","$returnKey","$showDiskLoc","$maxTimeMS","$snapshot","LEGACY_FIND_OPTIONS_MAP","returnFieldsSelector","OP_QUERY_KEYS","extractCommand","getMore","cursorId","batchSize","killCursors","cursors","cursorIds","query","find","pre32Limit","limit","$explain","explain","extractReply","reply","ok","cursor","message","nextBatch","cursorsUnknown","firstBatch","CommandStartedEvent","commandObj","assign","requestId","connectionId","CommandSucceededEvent","duration","CommandFailedEvent","failure","CommandResult","_requestId","opcodes","OPTS_TAILABLE_CURSOR","OPTS_SLAVE","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","returnFieldSelector","getRequestId","maxBsonSize","tailable","slaveOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","OP_QUERY","opts","OP_GETMORE","OP_KILL_CURSORS","Response","msgHeader","msgBody","parsed","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","startingFrom","numberReturned","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","parse","documentsReturnedIn","bsonSize","_options","document","inherits","EventEmitter","net","tls","debugOptions","parseHeader","decompress","OP_COMPRESSED","MESSAGE_HEADER_SIZE","_id","debugFields","connectionAccountingSpy","connectionAccounting","messageHandler","logger","tag","maxBsonMessageSize","isDebug","debug","family","keepAlive","keepAliveInitialDelay","noDelay","connectionTimeout","socketTimeout","round","destroyed","domainSocket","singleBufferSerializtion","serializationFunction","ca","crl","cert","passphrase","ciphers","ecdhCurve","ssl","rejectUnauthorized","checkServerIdentity","responseOptions","flushing","queue","writeStream","hashedName","workItems","setSocketTimeout","setTimeout","resetSocketTimeout","enableConnectionAccounting","spy","disableConnectionAccounting","deleteConnection","addConnection","errorHandler","listeners","emit","timeoutHandler","closeHandler","hadError","emitMessageHandler","compressorID","decompressedMsgBody","dataHandler","bytesRead","sizeOfMessage","remainingBytesToRead","emitBuffer","stubBuffer","trace","bin","parseState","newData","newStubBuffer","legalSslSocketOptions","merge","options1","options2","makeSSLConnection","sslOptions","socket","servername","connect","authorizationError","setKeepAlive","setNoDelay","makeUnsecureConnection","connection_options","createConnection","once","doConnect","_errorHandler","on","removeAllListeners","unref","destroy","end","isConnected","writable","classFilters","filteredClasses","level","currentLogger","className","loggerLevel","dateTime","msg","state","date","meta","isWarn","info","isInfo","isError","reset","setCurrentLogger","setLevel","_level","compress","compressorIDs","uncompressibleCommands","resolveClusterTime","apm","DISCONNECTED","CONNECTING","CONNECTED","DESTROYING","DESTROYED","hasSessionSupport","topology","ismaster","maxWireVersion","Pool","minSize","passPhrase","reconnect","reconnectInterval","reconnectTries","domainsEnabled","retriesLeft","reconnectId","availableConnections","inUseConnections","connectingConnections","executing","authProviders","reconnectConnection","authenticating","loggingout","nonAuthenticatedConnections","authenticatingTimestamp","numberOfConsecutiveTimeouts","connectionIndex","stateTransition","newState","legalTransitions","disconnected","connecting","connected","destroying","legalStates","cb","provider","apply","authenticateAgainstProvider","providers","connectionFailureHandler","event","_connectionFailHandled","removeConnection","workItem","socketCount","attemptReconnect","totalConnections","_createConnection","_connectionFailureHandler","_connectHandler","handlers","moveConnectionBetween","to","authenticateStragglers","connectionCount","handleOperationCallback","immediateRelease","$clusterTime","clusterTime","operationTime","supports","causalConsistency","advanceOperationTime","fullResult","allConnections","isDestroyed","isDisconnected","args","arguments","inTopology","authenticateLiveConnections","connectionsCount","waitForLogout","events","force","clearTimeout","checkStatus","flushMonitoringOperations","serializeCommands","commands","thisCommand","originalCommandBuffer","agreedCompressor","hasUncompressibleCommands","concatenatedOriginalCommandBuffer","messageToBeCompressed","originalCommandOpCode","compressedMessage","writeInt32LE","compressionDetails","writeUInt8","noResponse","domain","oldCb","operation","monitoring","sessionOptions","hasEnded","lsid","serverSession","lastUse","monitorCommands","$err","serializedCommands","unshift","some","hasOwnProperty","remove","tempErrorHandler","tempConnectHandler","driver","waitForAuth","foundValidConnection","writeSuccessful","setProperty","prop","flag","getProperty","propName","fieldName","func","getSingleProperty","fObj","tObj","finaloptions","native","optionalBSON","noSnappyWarning","retrieveSnappy","snappy","uncompress","compressSync","uncompressSync","topologyOptions","disconnectHandler","cursorState","cursorIndex","dead","killed","notified","skip","currentLimit","transforms","lastCursorId","setCursorBatchSize","cursorBatchSize","setCursorLimit","cursorLimit","setCursorSkip","cursorSkip","_endSession","owner","endSession","handleCallback","_find","queryCallback","virtual","queryOptions","_getmore","wireProtocolHandler","clone","isDead","isKilled","isNotified","bufferedCount","readBufferedDocuments","number","unreadDocumentsLength","elements","kill","killCursor","rewind","isConnectionDead","_setCursorNotifiedImpl","isCursorDeadButNotkilled","setCursorNotified","isCursorDeadAndKilled","isCursorKilled","setCursorDeadAndNotified","nextFunction","_type","addObjectAndMethod","getServer","collation","util","tmp","stack","errmsg","captureStackTrace","constructor","create","MongoParseError","uuidV4","assertAlive","ClientSession","sessionPool","clientOptions","ServerSessionPool","acquire","initialClusterTime","explicit","transactionOptions","autoStartTransaction","defaultTransactionOptions","inTransaction","abortTransaction","release","txnNumber","operationCount","stmtId","endTransaction","Promise","resolve","reject","RETRYABLE_ERROR_CODES","isRetryableError","resetTransactionState","clientSession","startTransaction","writeConcern","w","commandHandler","transactionError","_reply","ServerSession","sessionTimeoutMinutes","idleTimeMinutes","sessions","endSessions","map","logicalSessionTimeoutMinutes","hasTimedOut","BasicCursor","errors","diff","cloneOptions","createClientInfo","SessionMixins","isRetryableWritesSupported","relayEvents","UNREFERENCED","unreferenced","seedlist","cursorFactory","haInterval","connectOptions","localThresholdMS","clientInfo","authenticationContexts","connectingProxies","connectedProxies","disconnectedProxies","haTimeoutId","topologyDescription","topologyType","servers","emitSDAMEvent","description","parent","serverDescriptionChangedCallback","removeListener","topologyId","connectProxies","handleEvent","moveServerFrom","emitTopologyDescriptionChanged","address","handleInitialConnectEvent","_this","applyAuthenticationContexts","lastIsMaster","hosts","removeProxyFrom","topologyMonitor","firstConnect","timeoutInterval","pickProxy","lowerBoundLatency","lastIsMasterMS","proxy","reconnectProxies","proxies","_handleEvent","_self","_server","authContexts","applyAuth","authContext","customAuthContext","pingServer","start","latencyMS","durationMS","executeWriteOperation","op","ops","retryWrites","willRetryWrite","incrementTransactionNumber","insert","clonedOptions","FinalCursor","allArgs","currentContextIndex","argsWithoutCallback","finalArguments","arbiterOnly","logoutServer","getConnection","getDescription","diffResult","previousDescription","newDescription","mode","tags","maxStalenessSeconds","PRIMARY","PRIMARY_PREFERRED","SECONDARY","SECONDARY_PREFERRED","NEAREST","VALID_MODES","needSlaveOk","readPreference","primary","primaryPreferred","secondary","secondaryPreferred","nearest","ReplSetState","Timeout","Interval","acceptableLatency","replicaSetState","setName","heartbeatFrequencyMS","connectingServers","minHeartbeatFrequencyMS","types","t","initialConnectState","fullsetup","all","intervalIds","rexecuteOperations","hasPrimaryAndSecondary","hasPrimary","executePrimary","hasSecondary","executeSecondary","connectNewServers","monitorServer","me","hrTime","lastUpdateTime","lastWrite","lastWriteDate","updateServerMaxStaleness","__host","_process","_haInterval","intervalId","stop","isRunning","secondaryOnlyConnectionAllowed","unknownServers","executeReconnect","monitoringFrequencey","intervalTime","addServerToList","list","shouldTriggerConnect","isConnecting","readPreferenceSecondary","connectServers","allServers","secondaries","pickServer","getServers","ensureTransactionAutostart","retrying","handler","newArgs","operationId","incrementStatementId","preference","context","TopologyType","Single","ReplicaSetNoPrimary","ReplicaSetWithPrimary","Sharded","Unknown","ServerType","Standalone","PossiblePrimary","RSPrimary","RSSecondary","RSArbiter","RSOther","RSGhost","arbiters","passives","ghosts","maxElectionId","maxSetVersion","replicasetDescription","hasPrimaryOrSecondary","ignoreArbiters","serverName","electionId","setVersion","removeType","removeFrom","isArbiter","inList","hidden","passive","isreplicaset","ismasterElectionId","compareObjectIds","ismasterSetVersion","normalizedHosts","locationIndex","currentElectionId","currentSetVersion","currentSetName","ismasterSetName","addToList","staleness","updateSecondariesMaxStaleness","allservers","pickNearest","pickNearestMaxStalenessSeconds","filterByTags","filteredServers","tagsArray","serverTag","maxStalenessMS","lowest","id1","id2","y","len","desc","TwoSixWireProtocolSupport","ThreeTwoWireProtocolSupport","sdam","createCompressionInfo","getSaslSupportedMechs","authArray","authMechanism","authSource","toUpperCase","saslSupportedMechs","getDefaultAuthMechanism","extractIsMasterError","serverAccounting","monitoringInterval","compression","compressors","monitoringProcessId","initialConnect","settings","enableServerAccounting","disableServerAccounting","isSupportedServer","response","configureWireProtocolHandler","monitoringProcess","eventHandler","client","serverError","latestSupportedVersion","zlibCompressionLevel","emitServerDescriptionChanged","getTopologyType","basicWriteValidations","basicReadValidations","wireProtocolCommand","writeOptions","emitClose","emitDestroy","os","driverVersion","version","nodejsversion","endianness","platform","architecture","arch","appname","application","compressor","getPreviousDescription","serverDescription","getPreviousTopologyDescription","changedIsMaster","currentIsmaster","currentType","newType","inquireServerState","isMasterLatencyMS","inquireServerStateTimeout","fn","timer","setInterval","clearInterval","_called","previous","current","prevServer","currServer","RETRYABLE_WIRE_VERSION","listener","emitter","eventName","URL","qs","dns","HOSTS_RX","matchesParentDomain","srvAddress","parentDomain","regex","srv","endsWith","parseSrvConnectionString","uri","hostname","domainLength","pathname","PROTOCOL_MONGODB_SRV","resolveSrv","addresses","base","connectionStrings","connectionString","connectionStringOptions","defaultDb","search","resolveTxt","record","includes","parseQueryStringItemValue","idx","reduce","pair","numericValue","parseFloat","parseQueryString","parsedQueryString","wtimeout","wtimeoutms","PROTOCOL_MONGODB","SUPPORTED_PROTOCOLS","cap","protocol","dbAndQuery","parsedOptions","unescape","authorityParts","authParts","hostParsingError","parsedHost","getReadPreference","WireProtocol","executeWrite","opsField","p","ordered","writeCommand","bypassDocumentValidation","setupClassicFind","setupCommand","findCmd","hint","snapshot","returnKey","maxScan","showDiskLoc","comment","maxTimeMS","readConcern","fields","finalCmd","$readPreference","legacyWireProtocol","decorateWithTransactionsData","isRetryableWrite","autocommit","afterClusterTime","commandns","killcursorCmd","killCursorCallback","getMoreCmd","maxAwaitTimeMS","executeFindCommand","sortValue","sortObject","sortDirection","singleBatch","showRecordId","awaitdata","Snappy","zlib","dataToBeCompressed","zlibOptions","deflate","compressedData","inflate","OP_REPLY","OP_UPDATE","OP_INSERT","OP_DELETE","core","Instrumentation","Admin","MongoClient","Db","Collection","GridStore","Chunk","GridFSBucket","CoreServer","CoreConnection","instrument","instrumentation","toError","shallowClone","executeOperation","applyWriteConcern","promiseLibrary","executeDbAdminCommand","buildInfo","buildinfo","serverInfo","serverStatus","ping","addUser","removeUser","validateCollection","validate","listDatabases","nameOnly","replSetGetStatus","Readable","CoreCursor","AggregationCursor","INIT","streamOptions","objectMode","CLOSED","drvier","geoNear","pipeline","$geoNear","group","$group","$limit","$match","minWireVersion","out","destination","$out","project","$project","lookup","$lookup","redact","$redact","$skip","$sort","unwind","field","$unwind","toArray","OPEN","$MongoClient","$prototypeConnect","_callback","UNKNOWN_ERROR","INVALID_BSON_ERROR","WRITE_CONCERN_ERROR","MULTIPLE_ERROR","INSERT","UPDATE","REMOVE","defineReadOnlyProperty","Batch","batchType","originalZeroIndex","currentIndex","originalIndexes","operations","sizeBytes","LegacyOp","BulkWriteResult","bulkResult","nInserted","nUpserted","nMatched","nModified","nRemoved","getInsertedIds","insertedIds","getUpsertedIds","upserted","getUpsertedIdAt","getRawResponse","hasWriteErrors","writeErrors","getWriteErrorCount","getWriteErrorAt","getWriteErrors","getLastOp","lastOp","getWriteConcernError","writeConcernErrors","WriteConcernError","isOk","WriteError","getOperation","mergeBatchResults","batch","writeError","opTime","lastOpTS","lastOpT","ts","opTimeTS","opTimeT","writeConcernError","BulkWriteError","errMessage","common","utils","FindOperatorsOrdered","updateDocument","upsert","currentOp","q","selector","u","multi","addToOperationsList","updateOne","replaceOne","deleteOne","removeOne","docType","maxBatchSizeBytes","currentBatch","currentBatchSize","maxWriteBatchSize","currentBatchSizeBytes","batches","OrderedBulkOperation","executed","isMasterDoc","maxBsonObjectSize","forceServerObjectId","updateMany","replacement","arrayFilters","removeMany","deleteMany","insertOne","insertMany","executeCommands","resultHandler","mergeResult","writeResult","finalOptions","_writeConcern","executedError","emptyBatchError","initializeOrderedBulkOp","Bulk","FindOperatorsUnordered","currentInsertBatch","currentUpdateBatch","currentRemoveBatch","UnorderedBulkOperation","executeBatch","executeBatches","numberOfCommandsToExecute","initializeUnorderedBulkOp","cursorOptionNames","ChangeStream","database","serverConfig","createChangeStreamCursor","listenerCount","change","processNewChange","resumeToken","resumeAfter","changeStreamCursor","buildChangeStreamAggregationCommand","changeStreamStageOptions","fullDocument","cursorOptions","optionName","changeStreamPipeline","$changeStream","aggregate","hasNext","isClosed","then","catch","close","pipe","pipeDestinations","unpipe","pause","resume","stream","attemptingResume","closeErr","cursorStream","pipeDestination","noResumeTokenError","checkCollectionName","isObject","normalizeHintField","decorateCommand","formattedOrderClause","CommandCursor","unordered","mergeKeys","pkFactory","internalHint","collectionHint","fsync","DEPRECATED_FIND_OPTIONS","object_size","newOptions","optKey","timeout","findCommand","deprecatedOption","decorateWithReadConcern","decorateWithCollation","insertDocuments","insertedCount","insertedId","mapInserManyResults","docs","finalResult","prepareDocs","bulkWrite","resultMutator","bulk","writeCon","capabilities","commandsTakeCollation","matchedCount","modifiedCount","deletedCount","upsertedCount","upsertedIds","inserted","keepGoing","checkForAtomicOperators","updateDocuments","upsertedId","unmap","single","removeDocuments","save","findOne","item","rename","newName","renameCollection","toCollection","dropTarget","admin","drop","dropCollection","listCollections","collections","isCapped","capped","createIndex","fieldOrSpec","createIndexes","indexSpecs","indexes","dropIndex","indexName","dropIndexes","dropAllIndexes","reIndex","listIndexes","hasListIndexesCommand","setReadPreference","ensureIndex","indexExists","indexInformation","distinct","queryOption","optionsOption","full","stats","commandObject","collStats","findOneAndDelete","findAndModify","findOneAndReplace","returnOriginal","findOneAndUpdate","queryObject","new","findAndRemove","allowDiskUse","ignoreReadConcern","commandsTakeWriteConcern","watch","parallelCollectionScan","numCursors","skipSessions","rawId","geoHaystackSearch","geoSearch","near","groupFunction","condition","initial","finalize","reduceFunction","$reduce","cond","$keyf","retval","groupfn","results","processScope","new_scope","mapReduce","mapCommandHash","mapreduce","exclusionList","inline","timeMillis","counts","timing","TypeError","methodsToInherit","deprecate","numberOfRetries","tailableRetryInterval","currentNumberOfRetries","currentDoc","addCursorFlag","_next","_initImplicitSession","startSession","didCloseCursor","nextObject","setCursorOption","addQueryModifier","maxTimeMs","keyOrList","direction","order","loop","each","_each","skipKillCursors","internalCallback","items","fetchDocs","applySkipLimit","delimiter","coreTopology","completeClose","transform","oldTransform","_read","firstDot","GET_MORE","parseIndexOptions","filterOptions","mergeOptionsAndWriteConcern","illegalCommandFields","legalOptionNames","dbCache","children","bufferMaxEntries","parentDb","nativeParser","native_parser","noListener","validateDatabaseName","createListener","convertReadPreference","executeCommand","collectionKeys","strict","createCollection","autoIndexId","dbStats","listCollectionsTranforms","matching","hasListCollectionsCommand","$and","SYSTEM_NAMESPACE_COLLECTION","evaluate","parameters","finalCode","finalParameters","$eval","fromCollection","new_collection","dropDatabase","createIndexUsingCreateIndexes","createCreateIndexCommand","SYSTEM_INDEX_COLLECTION","index_name","addChild","_executeAuthCreateUserCommand","digestPassword","customData","roles","commandOptions","createUser","userPassword","pwd","SYSTEM_USER_COLLECTION","$set","_executeAuthRemoveUserCommand","dropUser","setProfilingLevel","profile","profilingInfo","profilingLevel","was","processResults","indexParameters","fieldHash","finalUnique","keysToOmit","removeKeys","invalidChars","SYSTEM_PROFILE_COLLECTION","SYSTEM_COMMAND_COLLECTION","SYSTEM_JS_COLLECTION","GridFSBucketReadStream","chunks","files","expected","expectedEnd","file","waitForFile","doRead","throwIfInitialized","abort","__handleError","bytesRemaining","expectedN","expectedLength","chunkSize","buf","sliceStart","sliceEnd","bytesToSkip","bytesToTrim","findOneOptions","identifier","filename","handleStartOption","files_id","$gte","handleEndOption","Emitter","GridFSBucketWriteStream","DEFAULT_GRIDFS_BUCKET_OPTIONS","bucketName","chunkSizeBytes","setMaxListeners","_chunksCollection","_filesCollection","checkedIndexes","calledOpenUploadStream","openUploadStream","openUploadStreamWithId","openDownloadStream","_delete","openDownloadStreamByName","uploadDate","revision","_rename","_drop","ERROR_NAMESPACE_NOT_FOUND","bucket","bufToStore","pos","streamEnd","outstandingRequests","errored","aborted","checkIndexes","Writable","chunk","encoding","waitForIndexes","doWrite","checkAborted","writeRemnant","createChunkDoc","filesId","checkChunksIndex","background","unique","hasChunksIndex","indexOptions","getWriteOptions","checkDone","filesDoc","createFilesDoc","contentType","aliases","metadata","hasFileIndex","ret","inputBuf","inputBufRemaining","spaceRemaining","numToCopy","inputBufPos","remnant","mongoObject","mongoObjectFinal","objectId","chunkNumber","internalPosition","readSlice","readInto","eof","getc","chunkCollection","buildMongoObject","fileId","DEFAULT_CHUNK_SIZE","fs","Duplex","REFERENCE_BY_FILENAME","REFERENCE_BY_ID","referenceBy","isOpen","root","DEFAULT_ROOT_COLLECTION","_getWriteConcern","internalChunkSize","internalMd5","currentChunk","open","chunkIndexOptions","_open","nthChunk","puts","finalString","GridStoreStream","_writeNormal","readable","_q","writeFile","fd","fstat","writeChunk","unlink","deleteChunks","readlines","separator","finalLength","tell","seek","seekLocation","seekLocationFinal","IO_SEEK_SET","finalPosition","targetPosition","IO_SEEK_CUR","IO_SEEK_END","newChunkNumber","seekChunk","DEFAULT_CONTENT_TYPE","txtId","lastChunkNumber","writeBuffer","finalClose","previousChunkNumber","leftOverDataSize","firstChunkData","leftOverData","chunksToWrite","newChunk","numberOfChunksToWrite","md5Command","filemd5","finalChunk","exist","fileIdObject","rootCollection","exists","rootCollectionFinal","byId","readStatic","gridStore","readlinesStatic","finalSeperator","names","unlinkStatic","tc","_setWriteConcernHash","journal","safe","gs","endCalled","totalBytesToRead","seekPosition","_pipe","legacyParse","validOptionNames","validOptionsLowerCaseToCamelCase","transformUrlOptions","_object","camelCaseName","maxpoolsize","poolSize","readconcernlevel","legacyTransformUrlOptions","mergeOptions","createUnifiedOptions","ignoreOptionNames","legacyOptionNames","validOptions","_validOptions","validateOptions","url","connectOp","returnNonCachedInstance","mongoClient","withSession","cleanupHandler","ReferenceError","throw","target","flatten","childOptions","noMerge","translateOptions","read_preference","readPreferenceTags","read_preference_tags","socketTimeoutMS","connectTimeoutMS","serverObj","domain_socket","collectEvents","collectedEvents","object1","object2","clearAllEvents","replayEvents","assignTopology","createServer","addListeners","createMongos","createReplicaset","v1","v2","connectHandler","success","connectCallback","parseFn","useNewUrlParser","_finalOptions","db_options","replicaSet","rs_name","TopologyBase","CMongos","Store","MAX_JS_INT","storeOptions","store","auto_reconnect","autoReconnect","emitError","socketOptions","sCapabilities","connectErrorHandler","reconnectHandler","relay","CReplSet","replsetRelay","relayHa","forceClosed","CServer","connectHandlers","reconnectFailedHandler","flush","destroyHandler","translateReadPreference","storedOps","opType","o","params","primaryOptions","secondaryOptions","ServerCapabilities","setup_get_property","aggregationCursor","writeCommands","textSearch","authCommands","maxNumberOfDocsInBatch","endAllPooledSessions","parserType","parser","parseHandler","connection_part","auth_part","query_string_part","clean","strings","hostString","decodeURIComponent","authPart","encodeURIComponent","pass","hostPart","urlOptions","serverOptions","dbOptions","replSetServersOptions","mongosOptions","server_options","rs_options","mongos_options","lastIndexOf","deduplicatedServers","h","_host","_port","ipv6match","exec","hostPort","opt","splitOpt","slave_ok","sslValidate","reconnectWait","retries","read_secondary","urlDecodeAuthPart","authMechanismProperties","SERVICE_NAME","SERVICE_REALM","gssapiServiceRealm","CANONICALIZE_HOST_NAME","gssapiCanonicalizeHostName","tagObject","every","formatSortValue","orderBy","value1","value2","finalHint","param","arg","exclude","translations","sslCA","sslCRL","sslKey","sslCert","sslPass","secondaryAcceptableLatencyMS","connectWithNoPrimary","acceptableLatencyMS","writeConcernKeys","targetOptions","sourceOptions","mergeWriteConcern","opOptions","optionsIndex","makeExecuteCallback","executeCallback","returnsCursor","sources","coll","isPromiseLike","maybePromise","resolveFrom","semver","existsSync","find_package_json","location","dirname","find_package_json_with_name","currentModule","readFileSync","peerOptionalDependencies","expectedVersions","moduleEntry","moduleEntryFile","cwd","dependentOnModule","satisfies","Module","fromDir","moduleId","fromFile","_resolveFilename","paths","_nodeModulePaths","unassigned_code_points","commonly_mapped_to_nothing","non_ASCII_space_characters","prohibited_characters","bidirectional_r_al","bidirectional_l","mapping2space","mapping2nothing","getCodePoint","character","codePointAt","first","last","input","mapped_input","normalized_input","fromCodePoint","normalize","normalized_map","hasProhibited","allowUnassigned","hasUnassigned","hasBidiRAL","hasBidiL","isFirstBidiRAL","isLastBidiRAL","range","SemVer","env","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","er","major","minor","patch","prerelease","num","build","compareMain","comparePre","compareIdentifiers","version1","version2","eq","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","rsort","gt","lt","neq","gte","lte","cmp","Comparator","comp","ANY","operator","intersects","rangeTmp","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","parseRange","comps","hr","hyphenReplace","compRe","parseComparator","thisComparators","thisComparator","rangeComparators","rangeComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","_","M","pr","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","maxSV","rangeObj","minSatisfying","minSV","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","comparator","r1","r2","coerce","webpackPolyfill","l","connect_opts","MongoDBStore","configure","getItem","setItem","removeItem","findOneandDelete"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var BSON = require('./lib/bson/bson'),\n  Binary = require('./lib/bson/binary'),\n  Code = require('./lib/bson/code'),\n  DBRef = require('./lib/bson/db_ref'),\n  Decimal128 = require('./lib/bson/decimal128'),\n  Double = require('./lib/bson/double'),\n  Int32 = require('./lib/bson/int_32'),\n  Long = require('./lib/bson/long'),\n  Map = require('./lib/bson/map'),\n  MaxKey = require('./lib/bson/max_key'),\n  MinKey = require('./lib/bson/min_key'),\n  ObjectId = require('./lib/bson/objectid'),\n  BSONRegExp = require('./lib/bson/regexp'),\n  Symbol = require('./lib/bson/symbol'),\n  Timestamp = require('./lib/bson/timestamp');\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Add BSON types to function creation\nBSON.Binary = Binary;\nBSON.Code = Code;\nBSON.DBRef = DBRef;\nBSON.Decimal128 = Decimal128;\nBSON.Double = Double;\nBSON.Int32 = Int32;\nBSON.Long = Long;\nBSON.Map = Map;\nBSON.MaxKey = MaxKey;\nBSON.MinKey = MinKey;\nBSON.ObjectId = ObjectId;\nBSON.ObjectID = ObjectId;\nBSON.BSONRegExp = BSONRegExp;\nBSON.Symbol = Symbol;\nBSON.Timestamp = Timestamp;\n\n// Return the BSON\nmodule.exports = BSON;\n","/**\n * Module dependencies.\n * @ignore\n */\n\n// Test if we're in Node via presence of \"global\" not absence of \"window\"\n// to support hybrid environments like Electron\nif (typeof global !== 'undefined') {\n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nfunction Binary(buffer, subType) {\n  if (!(this instanceof Binary)) return new Binary(buffer, subType);\n\n  this._bsontype = 'Binary';\n\n  if (buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if (buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if (typeof buffer === 'string') {\n      // Different ways of writing the length of the string for the different types\n      if (typeof Buffer !== 'undefined') {\n        this.buffer = new Buffer(buffer);\n      } else if (\n        typeof Uint8Array !== 'undefined' ||\n        Object.prototype.toString.call(buffer) === '[object Array]'\n      ) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error('only String, Buffer, Uint8Array or Array accepted');\n      }\n    } else {\n      this.buffer = buffer;\n    }\n    this.position = buffer.length;\n  } else {\n    if (typeof Buffer !== 'undefined') {\n      this.buffer = new Buffer(Binary.BUFFER_SIZE);\n    } else if (typeof Uint8Array !== 'undefined') {\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {string} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if (byte_value['length'] != null && typeof byte_value !== 'number' && byte_value.length !== 1)\n    throw new Error('only accepts single character String, Uint8Array or Array');\n  if ((typeof byte_value !== 'number' && byte_value < 0) || byte_value > 255)\n    throw new Error('only accepts number in a valid unsigned byte range 0-255');\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if (typeof byte_value === 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if (byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if (this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      // Create additional overflow buffer\n      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      buffer = null;\n      // Create a new buffer (typed or normal array)\n      if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }\n\n      // We need to copy all the content to the new array\n      for (var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n\n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset === 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if (this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      buffer = new Buffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n    } else if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length));\n      // Copy the content\n      for (var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length\n  } else if (\n    typeof Buffer !== 'undefined' &&\n    typeof string === 'string' &&\n    Buffer.isBuffer(this.buffer)\n  ) {\n    this.buffer.write(string, offset, 'binary');\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length;\n  } else if (\n    Object.prototype.toString.call(string) === '[object Uint8Array]' ||\n    (Object.prototype.toString.call(string) === '[object Array]' && typeof string !== 'string')\n  ) {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  } else if (typeof string === 'string') {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0 ? length : this.position;\n\n  // Let's return the data based on the type we have\n  if (this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer =\n      typeof Uint8Array !== 'undefined'\n        ? new Uint8Array(new ArrayBuffer(length))\n        : new Array(length);\n    for (var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {string}\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if (\n    asRaw &&\n    typeof Buffer !== 'undefined' &&\n    Buffer.isBuffer(this.buffer) &&\n    this.buffer.length === this.position\n  )\n    return this.buffer;\n\n  // If it's a node.js buffer object\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw\n      ? this.buffer.slice(0, this.position)\n      : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if (asRaw) {\n      // we support the slice command use it\n      if (this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer =\n          Object.prototype.toString.call(this.buffer) === '[object Uint8Array]'\n            ? new Uint8Array(new ArrayBuffer(this.position))\n            : new Array(this.position);\n        // Copy content\n        for (var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n};\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer =\n    typeof Uint8Array !== 'undefined'\n      ? new Uint8Array(new ArrayBuffer(data.length))\n      : new Array(data.length);\n  // Write the content to the buffer\n  for (var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n};\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = '';\n  for (var i = startIndex; i < endIndex; i++) {\n    result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nmodule.exports = Binary;\nmodule.exports.Binary = Binary;\n","'use strict';\n\nvar Map = require('./map'),\n  Long = require('./long'),\n  Double = require('./double'),\n  Timestamp = require('./timestamp'),\n  ObjectID = require('./objectid'),\n  BSONRegExp = require('./regexp'),\n  Symbol = require('./symbol'),\n  Int32 = require('./int_32'),\n  Code = require('./code'),\n  Decimal128 = require('./decimal128'),\n  MinKey = require('./min_key'),\n  MaxKey = require('./max_key'),\n  DBRef = require('./db_ref'),\n  Binary = require('./binary');\n\n// Parts of the parser\nvar deserialize = require('./parser/deserializer'),\n  serializer = require('./parser/serializer'),\n  calculateObjectSize = require('./parser/calculate_size');\n\n/**\n * @ignore\n * @api private\n */\n// Default Max Size\nvar MAXSIZE = 1024 * 1024 * 17;\n\n// Current Internal Temporary Serialization Buffer\nvar buffer = new Buffer(MAXSIZE);\n\nvar BSON = function() {};\n\n/**\n * Serialize a Javascript object.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.minInternalBufferSize=1024*1024*17] minimum size of the internal temporary serialization buffer **(default:1024*1024*17)**.\n * @return {Buffer} returns the Buffer object containing the serialized object.\n * @api public\n */\nBSON.prototype.serialize = function serialize(object, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var minInternalBufferSize =\n    typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n  \n  // Resize the internal serialization buffer if needed\n  if (buffer.length < minInternalBufferSize) {\n    buffer = new Buffer(minInternalBufferSize);\n  }\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    []\n  );\n  // Create the final buffer\n  var finishedBuffer = new Buffer(serializationIndex);\n  // Copy into the finished buffer\n  buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n  // Return the buffer\n  return finishedBuffer;\n};\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.index] the index in the buffer where we wish to start serializing into.\n * @return {Number} returns the index pointing to the last written byte in the buffer.\n * @api public\n */\nBSON.prototype.serializeWithBufferAndIndex = function(object, finalBuffer, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var startIndex = typeof options.index === 'number' ? options.index : 0;\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    finalBuffer,\n    object,\n    checkKeys,\n    startIndex || 0,\n    0,\n    serializeFunctions,\n    ignoreUndefined\n  );\n\n  // Return the index\n  return serializationIndex - 1;\n};\n\n/**\n * Deserialize data as BSON.\n *\n * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Object} returns the deserialized Javascript Object.\n * @api public\n */\nBSON.prototype.deserialize = function(buffer, options) {\n  return deserialize(buffer, options);\n};\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param {Object} object the Javascript object to calculate the BSON byte size for.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @return {Number} returns the number of bytes the BSON object will take up.\n * @api public\n */\nBSON.prototype.calculateObjectSize = function(object, options) {\n  options = options || {};\n\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n\n  return calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n};\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param {Buffer} data the buffer containing the serialized set of BSON documents.\n * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n * @param {Number} numberOfDocuments number of documents to deserialize.\n * @param {Array} documents an array where to store the deserialized documents.\n * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n * @api public\n */\nBSON.prototype.deserializeStream = function(\n  data,\n  startIndex,\n  numberOfDocuments,\n  documents,\n  docStartIndex,\n  options\n) {\n  options = options != null ? options : {};\n  var index = startIndex;\n  // Loop over all documents\n  for (var i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    var size =\n      data[index] | (data[index + 1] << 8) | (data[index + 2] << 16) | (data[index + 3] << 24);\n    // Update options with index\n    options['index'] = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = this.deserialize(data, options);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n};\n\n/**\n * @ignore\n * @api private\n */\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// Return BSON\nmodule.exports = BSON;\nmodule.exports.Code = Code;\nmodule.exports.Map = Map;\nmodule.exports.Symbol = Symbol;\nmodule.exports.BSON = BSON;\nmodule.exports.DBRef = DBRef;\nmodule.exports.Binary = Binary;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.Long = Long;\nmodule.exports.Timestamp = Timestamp;\nmodule.exports.Double = Double;\nmodule.exports.Int32 = Int32;\nmodule.exports.MinKey = MinKey;\nmodule.exports.MaxKey = MaxKey;\nmodule.exports.BSONRegExp = BSONRegExp;\nmodule.exports.Decimal128 = Decimal128;\n","/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return { scope: this.scope, code: this.code };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;\n","/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if (!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function() {\n  return {\n    $ref: this.namespace,\n    $id: this.oid,\n    $db: this.db == null ? '' : this.db\n  };\n};\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;\n","'use strict';\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [\n  0x7c,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [\n  0xf8,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\nvar INF_POSITIVE_BUFFER = [\n  0x78,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n\nvar EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n};\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for (i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n};\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if (!left && !right) {\n    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n    .add(productMid2)\n    .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return { high: productHigh, low: productLow };\n};\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if (uhleft < uhright) {\n    return true;\n  } else if (uhleft === uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if (ulleft < ulright) return true;\n  }\n\n  return false;\n};\n\n// var longtoHex = function(value) {\n//   var buffer = new Buffer(8);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value.low_ & 0xff;\n//   buffer[index++] = (value.low_ >> 8) & 0xff;\n//   buffer[index++] = (value.low_ >> 16) & 0xff;\n//   buffer[index++] = (value.low_ >> 24) & 0xff;\n//   // Encode high bits\n//   buffer[index++] = value.high_ & 0xff;\n//   buffer[index++] = (value.high_ >> 8) & 0xff;\n//   buffer[index++] = (value.high_ >> 16) & 0xff;\n//   buffer[index++] = (value.high_ >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n// var int32toHex = function(value) {\n//   var buffer = new Buffer(4);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value & 0xff;\n//   buffer[index++] = (value >> 8) & 0xff;\n//   buffer[index++] = (value >> 16) & 0xff;\n//   buffer[index++] = (value >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes a buffer containing the raw Decimal128 bytes.\n * @return {Double}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n};\n\n/**\n * Create a Decimal128 instance from a string representation\n *\n * @method\n * @param {string} string a numeric string representation.\n * @return {Decimal128} returns a Decimal128 instance.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Naively prevent against REDOS attacks.\n  // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n  //       further gains.\n  if (string.length >= 7000) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if ((!stringMatch && !infMatch && !nanMatch) || string.length === 0) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Check if we have an illegal exponent format\n  if (stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Get the negative or positive sign\n  if (string[index] === '+' || string[index] === '-') {\n    isNegative = string[index++] === '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if (!isDigit(string[index]) && string[index] !== '.') {\n    if (string[index] === 'i' || string[index] === 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if (string[index] === 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while (isDigit(string[index]) || string[index] === '.') {\n    if (string[index] === '.') {\n      if (sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if (nDigitsStored < 34) {\n      if (string[index] !== '0' || foundNonZero) {\n        if (!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if (foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if (sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if (sawRadix && !nDigitsRead) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Read exponent if exists\n  if (string[index] === 'e' || string[index] === 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if (!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if (string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if (!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if (exponent !== 0 && significantDigits !== 1) {\n      while (string[firstNonZero + significantDigits - 1] === '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while (exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if (lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if (lastDigit === 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if (nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if (exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if (lastDigit - firstDigit + 1 < significantDigits && string[significantDigits] !== '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if (sawRadix && exponent === EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if (roundDigit >= 5) {\n      roundBit = 1;\n\n      if (roundDigit === 5) {\n        roundBit = digits[lastDigit] % 2 === 1;\n\n        for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if (parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if (roundBit) {\n      var dIdx = lastDigit;\n\n      for (; dIdx >= 0; dIdx--) {\n        if (++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if (dIdx === 0) {\n            if (exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(\n                new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER)\n              );\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if (significantDigits === 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if (lastDigit - firstDigit < 17) {\n    dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n\n  significand.low = significand.low.add(significandLow);\n\n  if (lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  biasedExponent = exponent + EXPONENT_BIAS;\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if (\n    significand.high\n      .shiftRightUnsigned(49)\n      .and(Long.fromNumber(1))\n      .equals(Long.fromNumber)\n  ) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(\n      Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47))\n    );\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if (isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n};\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\n// var COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nEXPONENT_BIAS = 6176;\n\n/**\n * Create a string representation of the raw Decimal128 value\n *\n * @method\n * @return {string} returns a Decimal128 string representation.\n */\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for (var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = { parts: new Array(4) };\n  // indexing variables\n  i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  midl =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack the high 64bits into a long\n  midh =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  high =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack index\n  index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high)\n  };\n\n  if (dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if (combination >> 3 === 3) {\n    // Check for 'special' values\n    if (combination === COMBINATION_INFINITY) {\n      return string.join('') + 'Infinity';\n    } else if (combination === COMBINATION_NAN) {\n      return 'NaN';\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if (\n    significand128.parts[0] === 0 &&\n    significand128.parts[1] === 0 &&\n    significand128.parts[2] === 0 &&\n    significand128.parts[3] === 0\n  ) {\n    is_zero = true;\n  } else {\n    for (k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if (!least_digits) continue;\n\n      for (j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if (is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    i = 0;\n\n    while (!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if (significand_digits) {\n      string.push('.');\n    }\n\n    for (i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if (scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if (exponent >= 0) {\n      for (i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if (radix_position > 0) {\n        for (i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while (radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for (i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n};\n\nDecimal128.prototype.toJSON = function() {\n  return { $numberDecimal: this.toString() };\n};\n\nmodule.exports = Decimal128;\nmodule.exports.Decimal128 = Decimal128;\n","/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if (!(this instanceof Double)) return new Double(value);\n\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Double;\nmodule.exports.Double = Double;\n","// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    nBits = -7,\n    i = bBE ? 0 : nBytes - 1,\n    d = bBE ? 1 : -1,\n    s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << -nBits) - 1);\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << -nBits) - 1);\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    c,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n    i = bBE ? nBytes - 1 : 0,\n    d = bBE ? -1 : 1,\n    s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;\n","/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nfunction Long(low, high) {\n  if (!(this instanceof Long)) return new Long(low, high);\n\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) && other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) || other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Long.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long((value % Long.TWO_PWR_32_DBL_) | 0, (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Long;\nmodule.exports.Long = Long;\n","'use strict';\n\n// We have an ES6 Map available, return the native instance\nif (typeof global.Map !== 'undefined') {\n  module.exports = global.Map;\n  module.exports.Map = global.Map;\n} else {\n  // We will return a polyfill\n  var Map = function(array) {\n    this._keys = [];\n    this._values = {};\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] == null) continue; // skip null and undefined\n      var entry = array[i];\n      var key = entry[0];\n      var value = entry[1];\n      // Add the key to the list of keys in order\n      this._keys.push(key);\n      // Add the key and value to the values dictionary with a point\n      // to the location in the ordered keys list\n      this._values[key] = { v: value, i: this._keys.length - 1 };\n    }\n  };\n\n  Map.prototype.clear = function() {\n    this._keys = [];\n    this._values = {};\n  };\n\n  Map.prototype.delete = function(key) {\n    var value = this._values[key];\n    if (value == null) return false;\n    // Delete entry\n    delete this._values[key];\n    // Remove the key from the ordered keys list\n    this._keys.splice(value.i, 1);\n    return true;\n  };\n\n  Map.prototype.entries = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? [key, self._values[key].v] : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.forEach = function(callback, self) {\n    self = self || this;\n\n    for (var i = 0; i < this._keys.length; i++) {\n      var key = this._keys[i];\n      // Call the forEach callback\n      callback.call(self, this._values[key].v, key, self);\n    }\n  };\n\n  Map.prototype.get = function(key) {\n    return this._values[key] ? this._values[key].v : undefined;\n  };\n\n  Map.prototype.has = function(key) {\n    return this._values[key] != null;\n  };\n\n  Map.prototype.keys = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? key : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.set = function(key, value) {\n    if (this._values[key]) {\n      this._values[key].v = value;\n      return this;\n    }\n\n    // Add the key to the list of keys in order\n    this._keys.push(key);\n    // Add the key and value to the values dictionary with a point\n    // to the location in the ordered keys list\n    this._values[key] = { v: value, i: this._keys.length - 1 };\n    return this;\n  };\n\n  Map.prototype.values = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? self._values[key].v : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  // Last ismaster\n  Object.defineProperty(Map.prototype, 'size', {\n    enumerable: true,\n    get: function() {\n      return this._keys.length;\n    }\n  });\n\n  module.exports = Map;\n  module.exports.Map = Map;\n}\n","/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nfunction MaxKey() {\n  if (!(this instanceof MaxKey)) return new MaxKey();\n\n  this._bsontype = 'MaxKey';\n}\n\nmodule.exports = MaxKey;\nmodule.exports.MaxKey = MaxKey;\n","/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nfunction MinKey() {\n  if (!(this instanceof MinKey)) return new MinKey();\n\n  this._bsontype = 'MinKey';\n}\n\nmodule.exports = MinKey;\nmodule.exports.MinKey = MinKey;\n","/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xffffff, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Check if buffer exists\ntry {\n  if (Buffer && Buffer.from) var hasBufferType = true;\n} catch (err) {\n  hasBufferType = false;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function ObjectID(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if (id instanceof ObjectID) return id;\n  if (!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  // The most common usecase (blank id, new objectId instance)\n  if (id == null || typeof id === 'number') {\n    // Generate a new id\n    this.id = this.generate(id);\n    // If we are caching the hex string\n    if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n    // Return the object\n    return;\n  }\n\n  // Check if the passed in id is valid\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if (!valid && id != null) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  } else if (valid && typeof id === 'string' && id.length === 24 && hasBufferType) {\n    return new ObjectID(new Buffer(id, 'hex'));\n  } else if (valid && typeof id === 'string' && id.length === 24) {\n    return ObjectID.createFromHexString(id);\n  } else if (id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if (id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n};\n\n// Allow usage of ObjectId as well as ObjectID\n// var ObjectId = ObjectID;\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {string} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if (ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if (!this.id || !this.id.length) {\n    throw new Error(\n      'invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' +\n        JSON.stringify(this.id) +\n        ']'\n    );\n  }\n\n  if (this.id instanceof _Buffer) {\n    hexString = convertToHex(this.id);\n    if (ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if (ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.get_inc = function() {\n  return (ObjectID.index = (ObjectID.index + 1) % 0xffffff);\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return this.get_inc();\n};\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' !== typeof time) {\n    time = ~~(Date.now() / 1000);\n  }\n\n  // Use pid\n  var pid =\n    (typeof process === 'undefined' || process.pid === 1\n      ? Math.floor(Math.random() * 100000)\n      : process.pid) % 0xffff;\n  var inc = this.get_inc();\n  // Buffer used\n  var buffer = new Buffer(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n};\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @param {String} format The Buffer toString format parameter.\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function(format) {\n  // Is the id a buffer then use the buffer toString method to return the format\n  if (this.id && this.id.copy) {\n    return this.id.toString(typeof format === 'string' ? format : 'hex');\n  }\n\n  // if(this.buffer )\n  return this.toHexString();\n};\n\n/**\n* Converts to a string representation of this Id.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.inspect = ObjectID.prototype.toString;\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return this.toHexString();\n};\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {object} otherID ObjectID instance to compare against.\n* @return {boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function equals(otherId) {\n  // var id;\n\n  if (otherId instanceof ObjectID) {\n    return this.toString() === otherId.toString();\n  } else if (\n    typeof otherId === 'string' &&\n    ObjectID.isValid(otherId) &&\n    otherId.length === 12 &&\n    this.id instanceof _Buffer\n  ) {\n    return otherId === this.id.toString('binary');\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 24) {\n    return otherId.toLowerCase() === this.toHexString();\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 12) {\n    return otherId === this.id;\n  } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n};\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n};\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xffffff);\n\n/**\n* @ignore\n*/\nObjectID.createPk = function createPk() {\n  return new ObjectID();\n};\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function createFromTime(time) {\n  var buffer = new Buffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n};\n\n// Lookup tables\n//var encodeLookup = '0123456789abcdef'.split('');\nvar decodeLookup = [];\ni = 0;\nwhile (i < 10) decodeLookup[0x30 + i] = i++;\nwhile (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\nvar _Buffer = Buffer;\nvar convertToHex = function(bytes) {\n  return bytes.toString('hex');\n};\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function createFromHexString(string) {\n  // Throw an error if it's not a valid setup\n  if (typeof string === 'undefined' || (string != null && string.length !== 24)) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  // Use Buffer.from method if available\n  if (hasBufferType) return new ObjectID(new Buffer(string, 'hex'));\n\n  // Calculate lengths\n  var array = new _Buffer(12);\n  var n = 0;\n  var i = 0;\n\n  while (i < 24) {\n    array[n++] = (decodeLookup[string.charCodeAt(i++)] << 4) | decodeLookup[string.charCodeAt(i++)];\n  }\n\n  return new ObjectID(array);\n};\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function isValid(id) {\n  if (id == null) return false;\n\n  if (typeof id === 'number') {\n    return true;\n  }\n\n  if (typeof id === 'string') {\n    return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n  }\n\n  if (id instanceof ObjectID) {\n    return true;\n  }\n\n  if (id instanceof _Buffer) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if (id.toHexString) {\n    return id.id.length === 12 || (id.id.length === 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n};\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, 'generationTime', {\n  enumerable: true,\n  get: function() {\n    return this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  },\n  set: function(value) {\n    // Encode time into first 4 bytes\n    this.id[3] = value & 0xff;\n    this.id[2] = (value >> 8) & 0xff;\n    this.id[1] = (value >> 16) & 0xff;\n    this.id[0] = (value >> 24) & 0xff;\n  }\n});\n\n/**\n * Expose.\n */\nmodule.exports = ObjectID;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.ObjectId = ObjectID;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Code = require('../code').Code,\n  Decimal128 = require('../decimal128'),\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar calculateObjectSize = function calculateObjectSize(\n  object,\n  serializeFunctions,\n  ignoreUndefined\n) {\n  var totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n};\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (\n        value == null ||\n        value instanceof MinKey ||\n        value instanceof MaxKey ||\n        value['_bsontype'] === 'MinKey' ||\n        value['_bsontype'] === 'MaxKey'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] === 'ObjectID') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length\n        );\n      } else if (\n        value instanceof Long ||\n        value instanceof Double ||\n        value instanceof Timestamp ||\n        value['_bsontype'] === 'Long' ||\n        value['_bsontype'] === 'Double' ||\n        value['_bsontype'] === 'Timestamp'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1\n          );\n        }\n      } else if (value instanceof Binary || value['_bsontype'] === 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            (value.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] === 'Symbol') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          Buffer.byteLength(value.value, 'utf8') +\n          4 +\n          1 +\n          1\n        );\n      } else if (value instanceof DBRef || value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          $ref: value.namespace,\n          $id: value.oid\n        };\n\n        // Add db reference if it exists\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value instanceof BSONRegExp || value['_bsontype'] === 'BSONRegExp') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.pattern, 'utf8') +\n          1 +\n          Buffer.byteLength(value.options, 'utf8') +\n          1\n        );\n      } else {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]' ||\n        String.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else if (serializeFunctions) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.toString(), 'utf8') +\n            1\n          );\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  Code = require('../code').Code,\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  Decimal128 = require('../decimal128'),\n  Int32 = require('../int_32'),\n  DBRef = require('../db_ref').DBRef,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Binary = require('../binary').Binary;\n\nvar deserialize = function(buffer, options, isArray) {\n  options = options == null ? {} : options;\n  var index = options && options.index ? options.index : 0;\n  // Read the document size\n  var size =\n    buffer[index] |\n    (buffer[index + 1] << 8) |\n    (buffer[index + 2] << 16) |\n    (buffer[index + 3] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || buffer.length < size || size + index > buffer.length) {\n    throw new Error('corrupt bson message');\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] !== 0) {\n    throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n  }\n\n  // Start deserializtion\n  return deserializeObject(buffer, index, options, isArray);\n};\n\nvar deserializeObject = function(buffer, index, options, isArray) {\n  var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n  var cacheFunctionsCrc32 =\n    options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];\n\n  if (!cacheFunctionsCrc32) var crc32 = null;\n\n  var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  var raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  var bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n  var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n  var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n\n  // Set the start index\n  var startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new Error('corrupt bson message < 5 bytes long');\n\n  // Read the document size\n  var size =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new Error('corrupt bson message');\n\n  // Create holding object\n  var object = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  var arrayIndex = 0;\n\n  var done = false;\n\n  // While we have more left data left keep parsing\n  // while (buffer[index + 1] !== 0) {\n  while (!done) {\n    // Read the type\n    var elementType = buffer[index++];\n    // If we get a zero it's the last byte, exit\n    if (elementType === 0) break;\n\n    // Get the start search index\n    var i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n    var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n\n    index = i + 1;\n\n    if (elementType === BSON.BSON_DATA_STRING) {\n      var stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = buffer.toString('utf8', index, index + stringSize - 1);\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_OID) {\n      var oid = new Buffer(12);\n      buffer.copy(oid, 0, index, index + 12);\n      object[name] = new ObjectID(oid);\n      index = index + 12;\n    } else if (elementType === BSON.BSON_DATA_INT && promoteValues === false) {\n      object[name] = new Int32(\n        buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24)\n      );\n    } else if (elementType === BSON.BSON_DATA_INT) {\n      object[name] =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n    } else if (elementType === BSON.BSON_DATA_NUMBER && promoteValues === false) {\n      object[name] = new Double(buffer.readDoubleLE(index));\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_NUMBER) {\n      object[name] = buffer.readDoubleLE(index);\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_DATE) {\n      var lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType === BSON.BSON_DATA_BOOLEAN) {\n      if (buffer[index] !== 0 && buffer[index] !== 1) throw new Error('illegal boolean type value');\n      object[name] = buffer[index++] === 1;\n    } else if (elementType === BSON.BSON_DATA_OBJECT) {\n      var _index = index;\n      var objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      if (objectSize <= 0 || objectSize > buffer.length - index)\n        throw new Error('bad embedded document length in bson');\n\n      // We have a raw value\n      if (raw) {\n        object[name] = buffer.slice(index, index + objectSize);\n      } else {\n        object[name] = deserializeObject(buffer, _index, options, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType === BSON.BSON_DATA_ARRAY) {\n      _index = index;\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      var arrayOptions = options;\n\n      // Stop index\n      var stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = {};\n        for (var n in options) arrayOptions[n] = options[n];\n        arrayOptions['raw'] = true;\n      }\n\n      object[name] = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] !== 0) throw new Error('invalid array terminator byte');\n      if (index !== stopIndex) throw new Error('corrupted array bson');\n    } else if (elementType === BSON.BSON_DATA_UNDEFINED) {\n      object[name] = undefined;\n    } else if (elementType === BSON.BSON_DATA_NULL) {\n      object[name] = null;\n    } else if (elementType === BSON.BSON_DATA_LONG) {\n      // Unpack the low and high bits\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var long = new Long(lowBits, highBits);\n      // Promote the long if possible\n      if (promoteLongs && promoteValues === true) {\n        object[name] =\n          long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n            ? long.toNumber()\n            : long;\n      } else {\n        object[name] = long;\n      }\n    } else if (elementType === BSON.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      var bytes = new Buffer(16);\n      // Copy the next 16 bytes into the bytes buffer\n      buffer.copy(bytes, 0, index, index + 16);\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      var decimal128 = new Decimal128(bytes);\n      // If we have an alternative mapper use that\n      object[name] = decimal128.toObject ? decimal128.toObject() : decimal128;\n    } else if (elementType === BSON.BSON_DATA_BINARY) {\n      var binarySize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var totalBinarySize = binarySize;\n      var subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new Error('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.length) throw new Error('Binary type size larger than document size');\n\n      // Decode as raw Buffer object if options specifies it\n      if (buffer['slice'] != null) {\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = buffer.slice(index, index + binarySize);\n        } else {\n          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);\n        }\n      } else {\n        var _buffer =\n          typeof Uint8Array !== 'undefined'\n            ? new Uint8Array(new ArrayBuffer(binarySize))\n            : new Array(binarySize);\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        // Copy the data\n        for (i = 0; i < binarySize; i++) {\n          _buffer[i] = buffer[index + i];\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = _buffer;\n        } else {\n          object[name] = new Binary(_buffer, subType);\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === false) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var source = buffer.toString('utf8', index, i);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      var optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      object[name] = new RegExp(source, optionsArray.join(''));\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === true) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      source = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Set the object\n      object[name] = new BSONRegExp(source, regExpOptions);\n    } else if (elementType === BSON.BSON_DATA_SYMBOL) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_TIMESTAMP) {\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Timestamp(lowBits, highBits);\n    } else if (elementType === BSON.BSON_DATA_MIN_KEY) {\n      object[name] = new MinKey();\n    } else if (elementType === BSON.BSON_DATA_MAX_KEY) {\n      object[name] = new MaxKey();\n    } else if (elementType === BSON.BSON_DATA_CODE) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      var functionString = buffer.toString('utf8', index, index + stringSize - 1);\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n      } else {\n        object[name] = new Code(functionString);\n      }\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_CODE_W_SCOPE) {\n      var totalSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new Error('code_w_scope total size shorter minimum expected length');\n      }\n\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n\n      // Javascript function\n      functionString = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      _index = index;\n      // Decode the size of the object document\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      // Decode the scope object\n      var scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is to short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to short, truncating scope');\n      }\n\n      // Check if totalSize field is to long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to long, clips outer document');\n      }\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n\n        object[name].scope = scopeObject;\n      } else {\n        object[name] = new Code(functionString, scopeObject);\n      }\n    } else if (elementType === BSON.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      // Namespace\n      var namespace = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      var oidBuffer = new Buffer(12);\n      buffer.copy(oidBuffer, 0, index, index + 12);\n      oid = new ObjectID(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Split the namespace\n      var parts = namespace.split('.');\n      var db = parts.shift();\n      var collection = parts.join('.');\n      // Upgrade to DBRef type\n      object[name] = new DBRef(collection, oid, db);\n    } else {\n      throw new Error(\n        'Detected unknown BSON type ' +\n          elementType.toString(16) +\n          ' for fieldname \"' +\n          name +\n          '\", are you using the latest BSON parser'\n      );\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size !== index - startIndex) {\n    if (isArray) throw new Error('corrupt array bson');\n    throw new Error('corrupt object bson');\n  }\n\n  // Check if we have a db ref object\n  if (object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);\n  return object;\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEvalWithHash = function(functionCache, hash, functionString, object) {\n  // Contains the value we are going to set\n  var value = null;\n\n  // Check for cache hit, eval if missing and return cached function\n  if (functionCache[hash] == null) {\n    eval('value = ' + functionString);\n    functionCache[hash] = value;\n  }\n  // Set the object\n  return functionCache[hash].bind(object);\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEval = function(functionString) {\n  // Contains the value we are going to set\n  var value = null;\n  // Eval the function\n  eval('value = ' + functionString);\n  return value;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_DBPOINTER\n **/\nBSON.BSON_DATA_DBPOINTER = 12;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = deserialize;\n","'use strict';\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  Long = require('../long').Long,\n  MinKey = require('../min_key').MinKey,\n  Map = require('../map'),\n  Binary = require('../binary').Binary;\n\n// try {\n//   var _Buffer = Uint8Array;\n// } catch (e) {\n//   _Buffer = Buffer;\n// }\n\nvar regexp = /\\x00/; // eslint-disable-line no-control-regex\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n};\n\nvar serializeString = function(buffer, key, value, index, isArray) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n  buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n  buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n  buffer[index] = (size + 1) & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeNumber = function(buffer, key, value, index, isArray) {\n  // We have an integer value\n  if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if (value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n};\n\nvar serializeNull = function(buffer, key, value, index, isArray) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeBoolean = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n};\n\nvar serializeDate = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeBSONRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index =\n    index +\n    buffer.write(\n      value.options\n        .split('')\n        .sort()\n        .join(''),\n      index,\n      'utf8'\n    );\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeMinMax = function(buffer, key, value, index, isArray) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if (value instanceof MinKey) {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeObjectId = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if (typeof value.id === 'string') {\n    buffer.write(value.id, index, 'binary');\n  } else if (value.id && value.id.copy) {\n    value.id.copy(buffer, index, 0, 12);\n  } else {\n    throw new Error('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n  }\n\n  // Ajust index\n  return index + 12;\n};\n\nvar serializeBuffer = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n};\n\nvar serializeObject = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray,\n  path\n) {\n  for (var i = 0; i < path.length; i++) {\n    if (path[i] === value) throw new Error('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n  // Pop stack\n  path.pop();\n  // Write size\n  return endIndex;\n};\n\nvar serializeDecimal128 = function(buffer, key, value, index, isArray) {\n  buffer[index++] = BSON.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  value.bytes.copy(buffer, index, 0, 16);\n  return index + 16;\n};\n\nvar serializeLong = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = value._bsontype === 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeInt32 = function(buffer, key, value, index, isArray) {\n  // Set int type 32 bits or less\n  buffer[index++] = BSON.BSON_DATA_INT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n};\n\nvar serializeDouble = function(buffer, key, value, index, isArray) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n};\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = value.toString();\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeCode = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n};\n\nvar serializeBinary = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n};\n\nvar serializeSymbol = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if (null != value.db) {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid,\n        $db: value.db\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  } else {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n};\n\nvar serializeInto = function serializeInto(\n  buffer,\n  object,\n  checkKeys,\n  startingIndex,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  path\n) {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  // var self = this;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (var i = 0; i < object.length; i++) {\n      var key = '' + i;\n      var value = object[i];\n\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if (value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          true\n        );\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true\n        );\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      }\n    }\n  } else if (object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      key = entry.value[0];\n      value = entry.value[1];\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (key !== '$db' && key !== '$ref' && key !== '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n        // } else if (value === undefined && ignoreUndefined === true) {\n      } else if (value === null || (value === undefined && ignoreUndefined === false)) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if (object.toBSON) {\n      if (typeof object.toBSON !== 'function') throw new Error('toBSON is not a function');\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object')\n        throw new Error('toBSON function did not return an object');\n    }\n\n    // Iterate over all the keys\n    for (key in object) {\n      value = object[key];\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (key !== '$db' && key !== '$ref' && key !== '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\n// var functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type, deprecated\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n","/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if (!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for (var i = 0; i < this.options.length; i++) {\n    if (\n      !(\n        this.options[i] === 'i' ||\n        this.options[i] === 'm' ||\n        this.options[i] === 'x' ||\n        this.options[i] === 'l' ||\n        this.options[i] === 's' ||\n        this.options[i] === 'u'\n      )\n    ) {\n      throw new Error('the regular expression options [' + this.options[i] + '] is not supported');\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n","/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if (!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.inspect = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * This type is for INTERNAL use in MongoDB only and should not be used in applications.\n * The appropriate corresponding type is the JavaScript Date type.\n * \n * Defines a Timestamp class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This\n * implementation is derived from TimestampLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Timestamps.\n *\n * The internal representation of a Timestamp is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n */\nfunction Timestamp(low, high) {\n  if (!(this instanceof Timestamp)) return new Timestamp(low, high);\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Timestamp value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixTimestamp = Timestamp.fromNumber(radix);\n      var div = this.div(radixTimestamp);\n      var rem = div.multiply(radixTimestamp).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Timestamp equals the other\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Timestamp does not equal the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Timestamp is less than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Timestamp is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Timestamp is greater than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Timestamp is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Timestamp with the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Timestamps are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) && other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Timestamp divided by the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to divide.\n * @return {Timestamp} this Timestamp divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) || other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Timestamp modulo the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to mod.\n * @return {Timestamp} this Timestamp modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Timestamp with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Timestamp.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Timestamp representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n      (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n      (value / Timestamp.TWO_PWR_32_DBL_) | 0\n    );\n  }\n};\n\n/**\n * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Timestamp representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Timestamp representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE = Timestamp.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Timestamp;\nmodule.exports.Timestamp = Timestamp;\n","'use strict';\n\nvar BSON = require('bson');\nvar require_optional = require('require_optional');\n\ntry {\n  // Attempt to grab the native BSON parser\n  var BSONNative = require_optional('bson-ext');\n  // If we got the native parser, use it instead of the\n  // Javascript one\n  if (BSONNative) {\n    BSON = BSONNative;\n  }\n} catch (err) {} // eslint-disable-line\n\nmodule.exports = {\n  MongoError: require('./lib/error').MongoError,\n  MongoNetworkError: require('./lib/error').MongoNetworkError,\n  Connection: require('./lib/connection/connection'),\n  Server: require('./lib/topologies/server'),\n  ReplSet: require('./lib/topologies/replset'),\n  Mongos: require('./lib/topologies/mongos'),\n  Logger: require('./lib/connection/logger'),\n  Cursor: require('./lib/cursor'),\n  ReadPreference: require('./lib/topologies/read_preference'),\n  Sessions: require('./lib/sessions'),\n  BSON: BSON,\n  // Raw operations\n  Query: require('./lib/connection/commands').Query,\n  // Auth mechanisms\n  defaultAuthProviders: require('./lib/auth/defaultAuthProviders').defaultAuthProviders,\n  MongoCR: require('./lib/auth/mongocr'),\n  X509: require('./lib/auth/x509'),\n  Plain: require('./lib/auth/plain'),\n  GSSAPI: require('./lib/auth/gssapi'),\n  ScramSHA1: require('./lib/auth/scram').ScramSHA1,\n  ScramSHA256: require('./lib/auth/scram').ScramSHA256,\n  // Utilities\n  parseConnectionString: require('./lib/uri_parser')\n};\n","'use strict';\n\nconst MongoCR = require('./mongocr');\nconst X509 = require('./x509');\nconst Plain = require('./plain');\nconst GSSAPI = require('./gssapi');\nconst SSPI = require('./sspi');\nconst ScramSHA1 = require('./scram').ScramSHA1;\nconst ScramSHA256 = require('./scram').ScramSHA256;\n\n/**\n * Returns the default authentication providers.\n *\n * @param {BSON} bson Bson definition\n * @returns {Object} a mapping of auth names to auth types\n */\nfunction defaultAuthProviders(bson) {\n  return {\n    mongocr: new MongoCR(bson),\n    x509: new X509(bson),\n    plain: new Plain(bson),\n    gssapi: new GSSAPI(bson),\n    sspi: new SSPI(bson),\n    'scram-sha-1': new ScramSHA1(bson),\n    'scram-sha-256': new ScramSHA256(bson)\n  };\n}\n\nmodule.exports = { defaultAuthProviders };\n","'use strict';\n\nvar f = require('util').format,\n  require_optional = require('require_optional'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password, options) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n  this.options = options;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n// Kerberos class\nvar Kerberos = null;\nvar MongoAuthProcess = null;\n\n// Try to grab the Kerberos class\ntry {\n  Kerberos = require_optional('kerberos').Kerberos;\n  // Authentication process for Mongo\n  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess;\n} catch (err) {} // eslint-disable-line\n\n/**\n * Creates a new GSSAPI authentication mechanism\n * @class\n * @return {GSSAPI} A cursor instance\n */\nvar GSSAPI = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nGSSAPI.prototype.auth = function(server, connections, db, username, password, options, callback) {\n  var self = this;\n  // We don't have the Kerberos library\n  if (Kerberos == null) return callback(new Error('Kerberos library is not installed'));\n  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Start Auth process for a connection\n      GSSAPIInitialize(\n        self,\n        db,\n        username,\n        password,\n        db,\n        gssapiServiceName,\n        server,\n        connection,\n        options,\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password, options));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n//\n// Initialize step\nvar GSSAPIInitialize = function(\n  self,\n  db,\n  username,\n  password,\n  authdb,\n  gssapiServiceName,\n  server,\n  connection,\n  options,\n  callback\n) {\n  // Create authenticator\n  var mongo_auth_process = new MongoAuthProcess(\n    connection.host,\n    connection.port,\n    gssapiServiceName,\n    options\n  );\n\n  // Perform initialization\n  mongo_auth_process.init(username, password, function(err) {\n    if (err) return callback(err, false);\n\n    // Perform the first step\n    mongo_auth_process.transition('', function(err, payload) {\n      if (err) return callback(err, false);\n\n      // Call the next db step\n      MongoDBGSSAPIFirstStep(\n        self,\n        mongo_auth_process,\n        payload,\n        db,\n        username,\n        password,\n        authdb,\n        server,\n        connection,\n        callback\n      );\n    });\n  });\n};\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPIFirstStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build the sasl start command\n  var command = {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload: payload,\n    autoAuthorize: 1\n  };\n\n  // Write the commmand on the connection\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      var doc = r.result;\n      // Execute mongodb transition\n      mongo_auth_process.transition(r.result.payload, function(err, payload) {\n        if (err) return callback(err, false);\n\n        // MongoDB API Second Step\n        MongoDBGSSAPISecondStep(\n          self,\n          mongo_auth_process,\n          payload,\n          doc,\n          db,\n          username,\n          password,\n          authdb,\n          server,\n          connection,\n          callback\n        );\n      });\n    }\n  );\n};\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPISecondStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  doc,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build Authentication command to send to MongoDB\n  var command = {\n    saslContinue: 1,\n    conversationId: doc.conversationId,\n    payload: payload\n  };\n\n  // Execute the command\n  // Write the commmand on the connection\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      var doc = r.result;\n      // Call next transition for kerberos\n      mongo_auth_process.transition(doc.payload, function(err, payload) {\n        if (err) return callback(err, false);\n\n        // Call the last and third step\n        MongoDBGSSAPIThirdStep(\n          self,\n          mongo_auth_process,\n          payload,\n          doc,\n          db,\n          username,\n          password,\n          authdb,\n          server,\n          connection,\n          callback\n        );\n      });\n    }\n  );\n};\n\nvar MongoDBGSSAPIThirdStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  doc,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build final command\n  var command = {\n    saslContinue: 1,\n    conversationId: doc.conversationId,\n    payload: payload\n  };\n\n  // Execute the command\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      mongo_auth_process.transition(null, function(err) {\n        if (err) return callback(err, null);\n        callback(null, r);\n      });\n    }\n  );\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nGSSAPI.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nGSSAPI.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      authStore[i].options,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = GSSAPI;\n","'use strict';\n\nvar f = require('util').format,\n  crypto = require('crypto'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new MongoCR authentication mechanism\n * @class\n * @return {MongoCR} A cursor instance\n */\nvar MongoCR = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var executeMongoCR = function(connection) {\n      // Write the commmand on the connection\n      server(\n        connection,\n        new Query(\n          self.bson,\n          f('%s.$cmd', db),\n          {\n            getnonce: 1\n          },\n          {\n            numberToSkip: 0,\n            numberToReturn: 1\n          }\n        ),\n        function(err, r) {\n          var nonce = null;\n          var key = null;\n\n          // Adjust the number of connections left\n          // Get nonce\n          if (err == null) {\n            nonce = r.result.nonce;\n            // Use node md5 generator\n            var md5 = crypto.createHash('md5');\n            // Generate keys used for authentication\n            md5.update(username + ':mongo:' + password, 'utf8');\n            var hash_password = md5.digest('hex');\n            // Final key\n            md5 = crypto.createHash('md5');\n            md5.update(nonce + username + hash_password, 'utf8');\n            key = md5.digest('hex');\n          }\n\n          // Execute command\n          // Write the commmand on the connection\n          server(\n            connection,\n            new Query(\n              self.bson,\n              f('%s.$cmd', db),\n              {\n                authenticate: 1,\n                user: username,\n                nonce: nonce,\n                key: key\n              },\n              {\n                numberToSkip: 0,\n                numberToReturn: 1\n              }\n            ),\n            function(err, r) {\n              count = count - 1;\n\n              // If we have an error\n              if (err) {\n                errorObject = err;\n              } else if (r.result['$err']) {\n                errorObject = r.result;\n              } else if (r.result['errmsg']) {\n                errorObject = r.result;\n              } else {\n                numberOfValidConnections = numberOfValidConnections + 1;\n              }\n\n              // We have authenticated all connections\n              if (count === 0 && numberOfValidConnections > 0) {\n                // Store the auth details\n                addAuthSession(self.authStore, new AuthSession(db, username, password));\n                // Return correct authentication\n                callback(null, true);\n              } else if (count === 0) {\n                if (errorObject == null)\n                  errorObject = new MongoError(f('failed to authenticate using mongocr'));\n                callback(errorObject, false);\n              }\n            }\n          );\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        executeMongoCR(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nMongoCR.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = MongoCR;\n","'use strict';\n\nvar f = require('util').format,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar BSON = retrieveBSON(),\n  Binary = BSON.Binary;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new Plain authentication mechanism\n * @class\n * @return {Plain} A cursor instance\n */\nvar Plain = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Create payload\n      var payload = new Binary(f('\\x00%s\\x00%s', username, password));\n\n      // Let's start the sasl process\n      var command = {\n        saslStart: 1,\n        mechanism: 'PLAIN',\n        payload: payload,\n        autoAuthorize: 1\n      };\n\n      // Let's start the process\n      server(\n        connection,\n        new Query(self.bson, '$external.$cmd', command, {\n          numberToSkip: 0,\n          numberToReturn: 1\n        }),\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nPlain.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = Plain;\n","'use strict';\n\nvar f = require('util').format,\n  crypto = require('crypto'),\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nlet saslprep;\n\ntry {\n  saslprep = require('saslprep');\n} catch (e) {\n  // don't do anything;\n}\n\nvar BSON = retrieveBSON(),\n  Binary = BSON.Binary;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\nvar id = 0;\n\n/**\n * Creates a new ScramSHA authentication mechanism\n * @class\n * @return {ScramSHA} A cursor instance\n */\nvar ScramSHA = function(bson, cryptoMethod) {\n  this.bson = bson;\n  this.authStore = [];\n  this.id = id++;\n  this.cryptoMethod = cryptoMethod || 'sha1';\n};\n\nvar parsePayload = function(payload) {\n  var dict = {};\n  var parts = payload.split(',');\n\n  for (var i = 0; i < parts.length; i++) {\n    var valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n};\n\nvar passwordDigest = function(username, password) {\n  if (typeof username !== 'string') throw new MongoError('username must be a string');\n  if (typeof password !== 'string') throw new MongoError('password must be a string');\n  if (password.length === 0) throw new MongoError('password cannot be empty');\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + ':mongo:' + password, 'utf8');\n  return md5.digest('hex');\n};\n\n// XOR two buffers\nfunction xor(a, b) {\n  if (!Buffer.isBuffer(a)) a = new Buffer(a);\n  if (!Buffer.isBuffer(b)) b = new Buffer(b);\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return new Buffer(res).toString('base64');\n}\n\nfunction H(method, text) {\n  return crypto\n    .createHash(method)\n    .update(text)\n    .digest();\n}\n\nfunction HMAC(method, key, text) {\n  return crypto\n    .createHmac(method, key)\n    .update(text)\n    .digest();\n}\n\nvar _hiCache = {};\nvar _hiCacheCount = 0;\nvar _hiCachePurge = function() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n};\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data, salt, iterations, cryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] !== undefined) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  const cryptoMethod = this.cryptoMethod;\n  let mechanism = 'SCRAM-SHA-1';\n  let processedPassword;\n\n  if (cryptoMethod === 'sha256') {\n    mechanism = 'SCRAM-SHA-256';\n\n    let saslprepFn = (server.s && server.s.saslprep) || saslprep;\n\n    if (saslprepFn) {\n      processedPassword = saslprepFn(password);\n    } else {\n      console.warn('Warning: no saslprep library specified. Passwords will not be sanitized');\n      processedPassword = password;\n    }\n  } else {\n    processedPassword = passwordDigest(username, password);\n  }\n\n  // Execute MongoCR\n  var executeScram = function(connection) {\n    // Clean up the user\n    username = username.replace('=', '=3D').replace(',', '=2C');\n\n    // Create a random nonce\n    var nonce = crypto.randomBytes(24).toString('base64');\n    // var nonce = 'MsQUY9iw0T9fx2MUEz6LZPwGuhVvWAhc'\n\n    // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n    // Since the username is not sasl-prep-d, we need to do this here.\n    const firstBare = Buffer.concat([\n      Buffer.from('n=', 'utf8'),\n      Buffer.from(username, 'utf8'),\n      Buffer.from(',r=', 'utf8'),\n      Buffer.from(nonce, 'utf8')\n    ]);\n\n    // Build command structure\n    var cmd = {\n      saslStart: 1,\n      mechanism: mechanism,\n      payload: new Binary(Buffer.concat([Buffer.from('n,,', 'utf8'), firstBare])),\n      autoAuthorize: 1\n    };\n\n    // Handle the error\n    var handleError = function(err, r) {\n      if (err) {\n        numberOfValidConnections = numberOfValidConnections - 1;\n        errorObject = err;\n        return false;\n      } else if (r.result['$err']) {\n        errorObject = r.result;\n        return false;\n      } else if (r.result['errmsg']) {\n        errorObject = r.result;\n        return false;\n      } else {\n        numberOfValidConnections = numberOfValidConnections + 1;\n      }\n\n      return true;\n    };\n\n    // Finish up\n    var finish = function(_count, _numberOfValidConnections) {\n      if (_count === 0 && _numberOfValidConnections > 0) {\n        // Store the auth details\n        addAuthSession(self.authStore, new AuthSession(db, username, password));\n        // Return correct authentication\n        return callback(null, true);\n      } else if (_count === 0) {\n        if (errorObject == null)\n          errorObject = new MongoError(f('failed to authenticate using scram'));\n        return callback(errorObject, false);\n      }\n    };\n\n    var handleEnd = function(_err, _r) {\n      // Handle any error\n      handleError(_err, _r);\n      // Adjust the number of connections\n      count = count - 1;\n      // Execute the finish\n      finish(count, numberOfValidConnections);\n    };\n\n    // Write the commmand on the connection\n    server(\n      connection,\n      new Query(self.bson, f('%s.$cmd', db), cmd, {\n        numberToSkip: 0,\n        numberToReturn: 1\n      }),\n      function(err, r) {\n        // Do we have an error, handle it\n        if (handleError(err, r) === false) {\n          count = count - 1;\n\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            return callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using scram'));\n            return callback(errorObject, false);\n          }\n\n          return;\n        }\n\n        // Get the dictionary\n        var dict = parsePayload(r.result.payload.value());\n\n        // Unpack dictionary\n        var iterations = parseInt(dict.i, 10);\n        var salt = dict.s;\n        var rnonce = dict.r;\n\n        // Set up start of proof\n        var withoutProof = f('c=biws,r=%s', rnonce);\n        var saltedPassword = HI(\n          processedPassword,\n          new Buffer(salt, 'base64'),\n          iterations,\n          cryptoMethod\n        );\n\n        if (iterations && iterations < 4096) {\n          const error = new MongoError(`Server returned an invalid iteration count ${iterations}`);\n          return callback(error, false);\n        }\n\n        // Create the client key\n        const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n\n        // Create the stored key\n        const storedKey = H(cryptoMethod, clientKey);\n\n        // Create the authentication message\n        const authMessage = [\n          firstBare,\n          r.result.payload.value().toString('base64'),\n          withoutProof\n        ].join(',');\n\n        // Create client signature\n        const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n\n        // Create client proof\n        const clientProof = f('p=%s', xor(clientKey, clientSignature));\n\n        // Create client final\n        const clientFinal = [withoutProof, clientProof].join(',');\n\n        // Create continue message\n        const cmd = {\n          saslContinue: 1,\n          conversationId: r.result.conversationId,\n          payload: new Binary(new Buffer(clientFinal))\n        };\n\n        //\n        // Execute sasl continue\n        // Write the commmand on the connection\n        server(\n          connection,\n          new Query(self.bson, f('%s.$cmd', db), cmd, {\n            numberToSkip: 0,\n            numberToReturn: 1\n          }),\n          function(err, r) {\n            if (r && r.result.done === false) {\n              var cmd = {\n                saslContinue: 1,\n                conversationId: r.result.conversationId,\n                payload: new Buffer(0)\n              };\n\n              // Write the commmand on the connection\n              server(\n                connection,\n                new Query(self.bson, f('%s.$cmd', db), cmd, {\n                  numberToSkip: 0,\n                  numberToReturn: 1\n                }),\n                function(err, r) {\n                  handleEnd(err, r);\n                }\n              );\n            } else {\n              handleEnd(err, r);\n            }\n          }\n        );\n      }\n    );\n  };\n\n  var _execute = function(_connection) {\n    process.nextTick(function() {\n      executeScram(_connection);\n    });\n  };\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nScramSHA.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  // No connections\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\nclass ScramSHA1 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha1');\n  }\n}\n\nclass ScramSHA256 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha256');\n  }\n}\n\nmodule.exports = { ScramSHA1, ScramSHA256 };\n","'use strict';\n\nvar f = require('util').format,\n  require_optional = require('require_optional'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password, options) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n  this.options = options;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n// Kerberos class\nvar Kerberos = null;\nvar MongoAuthProcess = null;\n\n// Try to grab the Kerberos class\ntry {\n  Kerberos = require_optional('kerberos').Kerberos;\n  // Authentication process for Mongo\n  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess;\n} catch (err) {} // eslint-disable-line\n\n/**\n * Creates a new SSPI authentication mechanism\n * @class\n * @return {SSPI} A cursor instance\n */\nvar SSPI = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nSSPI.prototype.auth = function(server, connections, db, username, password, options, callback) {\n  var self = this;\n  // We don't have the Kerberos library\n  if (Kerberos == null) return callback(new Error('Kerberos library is not installed'));\n  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Start Auth process for a connection\n      SSIPAuthenticate(\n        self,\n        username,\n        password,\n        gssapiServiceName,\n        server,\n        connection,\n        options,\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r && typeof r === 'object' && r.result['$err']) {\n            errorObject = r.result;\n          } else if (r && typeof r === 'object' && r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password, options));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\nvar SSIPAuthenticate = function(\n  self,\n  username,\n  password,\n  gssapiServiceName,\n  server,\n  connection,\n  options,\n  callback\n) {\n  // Build Authentication command to send to MongoDB\n  var command = {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload: '',\n    autoAuthorize: 1\n  };\n\n  // Create authenticator\n  var mongo_auth_process = new MongoAuthProcess(\n    connection.host,\n    connection.port,\n    gssapiServiceName,\n    options\n  );\n\n  // Execute first sasl step\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      var doc = r.result;\n\n      mongo_auth_process.init(username, password, function(err) {\n        if (err) return callback(err);\n\n        mongo_auth_process.transition(doc.payload, function(err, payload) {\n          if (err) return callback(err);\n\n          // Perform the next step against mongod\n          var command = {\n            saslContinue: 1,\n            conversationId: doc.conversationId,\n            payload: payload\n          };\n\n          // Execute the command\n          server(\n            connection,\n            new Query(self.bson, '$external.$cmd', command, {\n              numberToSkip: 0,\n              numberToReturn: 1\n            }),\n            function(err, r) {\n              if (err) return callback(err, false);\n              var doc = r.result;\n\n              mongo_auth_process.transition(doc.payload, function(err, payload) {\n                if (err) return callback(err);\n\n                // Perform the next step against mongod\n                var command = {\n                  saslContinue: 1,\n                  conversationId: doc.conversationId,\n                  payload: payload\n                };\n\n                // Execute the command\n                server(\n                  connection,\n                  new Query(self.bson, '$external.$cmd', command, {\n                    numberToSkip: 0,\n                    numberToReturn: 1\n                  }),\n                  function(err, r) {\n                    if (err) return callback(err, false);\n                    var doc = r.result;\n\n                    mongo_auth_process.transition(doc.payload, function(err, payload) {\n                      // Perform the next step against mongod\n                      var command = {\n                        saslContinue: 1,\n                        conversationId: doc.conversationId,\n                        payload: payload\n                      };\n\n                      // Execute the command\n                      server(\n                        connection,\n                        new Query(self.bson, '$external.$cmd', command, {\n                          numberToSkip: 0,\n                          numberToReturn: 1\n                        }),\n                        function(err, r) {\n                          if (err) return callback(err, false);\n                          var doc = r.result;\n\n                          if (doc.done) return callback(null, true);\n                          callback(new Error('Authentication failed'), false);\n                        }\n                      );\n                    });\n                  }\n                );\n              });\n            }\n          );\n        });\n      });\n    }\n  );\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nSSPI.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nSSPI.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      authStore[i].options,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = SSPI;\n","'use strict';\n\nvar f = require('util').format,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new X509 authentication mechanism\n * @class\n * @return {X509} A cursor instance\n */\nvar X509 = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Let's start the sasl process\n      var command = {\n        authenticate: 1,\n        mechanism: 'MONGODB-X509'\n      };\n\n      // Add username if specified\n      if (username) {\n        command.user = username;\n      }\n\n      // Let's start the process\n      server(\n        connection,\n        new Query(self.bson, '$external.$cmd', command, {\n          numberToSkip: 0,\n          numberToReturn: 1\n        }),\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nX509.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = X509;\n","'use strict';\nconst KillCursor = require('../connection/commands').KillCursor;\nconst GetMore = require('../connection/commands').GetMore;\nconst process = require('process');\n\n/** Commands that we want to redact because of the sensitive nature of their contents */\nconst SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\n// helper methods\nconst extractCommandName = command => Object.keys(command)[0];\nconst calculateDurationInMs = started => {\n  const hrtime = process.hrtime(started);\n  return (hrtime[0] * 1e9 + hrtime[1]) / 1e6;\n};\n\nconst namespace = command => command.ns;\nconst databaseName = command => command.ns.split('.')[0];\nconst collectionName = command => command.ns.split('.')[1];\nconst generateConnectionId = pool => `${pool.options.host}:${pool.options.port}`;\nconst maybeRedact = (commandName, result) => (SENSITIVE_COMMANDS.has(commandName) ? {} : result);\n\nconst LEGACY_FIND_QUERY_MAP = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldsSelector: 'projection'\n};\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n];\n\n/**\n * Extract the actual command from the query, possibly upconverting if it's a legacy\n * format\n *\n * @param {Object} command the command\n */\nconst extractCommand = command => {\n  if (command instanceof GetMore) {\n    return {\n      getMore: command.cursorId,\n      collection: collectionName(command),\n      batchSize: command.numberToReturn\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      killCursors: collectionName(command),\n      cursors: command.cursorIds\n    };\n  }\n\n  if (command.query && command.query.$query) {\n    // upconvert legacy find command\n    const result = { find: collectionName(command) };\n    Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n      if (typeof command.query[key] !== 'undefined')\n        result[LEGACY_FIND_QUERY_MAP[key]] = command.query[key];\n    });\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      if (typeof command.options[key] !== 'undefined')\n        result[LEGACY_FIND_OPTIONS_MAP[key]] = command.options[key];\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      if (command[key]) result[key] = command[key];\n    });\n\n    if (typeof command.pre32Limit !== 'undefined') {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n\n    return result;\n  }\n\n  return command.query ? command.query : command;\n};\n\nconst extractReply = (command, reply) => {\n  if (command instanceof GetMore) {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        nextBatch: reply.message.documents\n      }\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      ok: 1,\n      cursorsUnknown: command.cursorIds\n    };\n  }\n\n  // is this a legacy find command?\n  if (command.query && typeof command.query.$query !== 'undefined') {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        firstBatch: reply.message.documents\n      }\n    };\n  }\n\n  return reply.result;\n};\n\n/** An event indicating the start of a given command */\nclass CommandStartedEvent {\n  /**\n   * Create a started event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   */\n  constructor(pool, command) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    // NOTE: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    Object.assign(this, {\n      command: cmd,\n      databaseName: databaseName(command),\n      commandName,\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\n/** An event indicating the success of a given command */\nclass CommandSucceededEvent {\n  /**\n   * Create a succeeded event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {Object} reply the reply for this command from the server\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, reply, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    Object.assign(this, {\n      duration: calculateDurationInMs(started),\n      commandName,\n      reply: maybeRedact(commandName, extractReply(command, reply)),\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\n/** An event indicating the failure of a given command */\nclass CommandFailedEvent {\n  /**\n   * Create a failure event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {MongoError|Object} error the generated error or a server error response\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, error, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    Object.assign(this, {\n      duration: calculateDurationInMs(started),\n      commandName,\n      failure: maybeRedact(commandName, error),\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\nmodule.exports = {\n  CommandStartedEvent,\n  CommandSucceededEvent,\n  CommandFailedEvent\n};\n","'use strict';\n\n/**\n * Creates a new CommandResult instance\n * @class\n * @param {object} result CommandResult object\n * @param {Connection} connection A connection instance associated with this result\n * @return {CommandResult} A cursor instance\n */\nvar CommandResult = function(result, connection, message) {\n  this.result = result;\n  this.connection = connection;\n  this.message = message;\n};\n\n/**\n * Convert CommandResult to JSON\n * @method\n * @return {object}\n */\nCommandResult.prototype.toJSON = function() {\n  return this.result;\n};\n\n/**\n * Convert CommandResult to String representation\n * @method\n * @return {string}\n */\nCommandResult.prototype.toString = function() {\n  return JSON.stringify(this.toJSON());\n};\n\nmodule.exports = CommandResult;\n","'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 0;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function(bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Ensure empty options\n  this.options = options || {};\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function() {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function() {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function() {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = new Buffer(\n    4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(self.ns) +\n    1 + // namespace\n    4 + // numberToSkip\n      4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = (totalLength >> 24) & 0xff;\n  header[2] = (totalLength >> 16) & 0xff;\n  header[1] = (totalLength >> 8) & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = (this.requestId >> 24) & 0xff;\n  header[index + 2] = (this.requestId >> 16) & 0xff;\n  header[index + 1] = (this.requestId >> 8) & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = (0 >> 24) & 0xff;\n  header[index + 2] = (0 >> 16) & 0xff;\n  header[index + 1] = (0 >> 8) & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = (opcodes.OP_QUERY >> 24) & 0xff;\n  header[index + 2] = (opcodes.OP_QUERY >> 16) & 0xff;\n  header[index + 1] = (opcodes.OP_QUERY >> 8) & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = (flags >> 24) & 0xff;\n  header[index + 2] = (flags >> 16) & 0xff;\n  header[index + 1] = (flags >> 8) & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n  header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n  header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\n\nQuery.getRequestId = function() {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function(bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function() {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = new Buffer(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = (opcodes.OP_GETMORE >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_GETMORE >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_GETMORE >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function(bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function() {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = new Buffer(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = (opcodes.OP_KILL_CURSORS >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_KILL_CURSORS >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_KILL_CURSORS >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\n\nvar Response = function(bson, message, msgHeader, msgBody, opts) {\n  opts = opts || { promoteLongs: true, promoteValues: true, promoteBuffers: false };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n};\n\nResponse.prototype.isParsed = function() {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function(options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs =\n    typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Single document and documentsReturnedIn set\n  //\n  if (this.numberReturned === 1 && documentsReturnedIn != null && raw) {\n    // Calculate the bson size\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n    // Slice out the buffer containing the command result document\n    var document = this.data.slice(this.index, this.index + bsonSize);\n    // Set up field we wish to keep as raw\n    var fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n\n    // Deserialize but keep the array of documents in non-parsed form\n    var doc = this.bson.deserialize(document, _options);\n\n    // Get the documents\n    this.documents = doc.cursor[documentsReturnedIn];\n    this.numberReturned = this.documents.length;\n    // Ensure we have a Long valie cursor id\n    this.cursorId =\n      typeof doc.cursor.id === 'number' ? Long.fromNumber(doc.cursor.id) : doc.cursor.id;\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n\n    // Set as parsed\n    this.parsed = true;\n    return;\n  }\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(\n        this.data.slice(this.index, this.index + bsonSize),\n        _options\n      );\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};\n","'use strict';\n\nvar inherits = require('util').inherits,\n  EventEmitter = require('events').EventEmitter,\n  net = require('net'),\n  tls = require('tls'),\n  crypto = require('crypto'),\n  f = require('util').format,\n  debugOptions = require('./utils').debugOptions,\n  parseHeader = require('../wireprotocol/shared').parseHeader,\n  decompress = require('../wireprotocol/compression').decompress,\n  Response = require('./commands').Response,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  Logger = require('./logger'),\n  OP_COMPRESSED = require('../wireprotocol/shared').opcodes.OP_COMPRESSED,\n  MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\n\nvar _id = 0;\nvar debugFields = [\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'socketTimeout',\n  'singleBufferSerializtion',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'checkServerIdentity'\n];\n\nvar connectionAccountingSpy = undefined;\nvar connectionAccounting = false;\nvar connections = {};\n\n/**\n * Creates a new Connection instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.family=null] IP version for DNS lookup, passed down to Node's [`dns.lookup()` function](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback). If set to `6`, will only look for ipv6 addresses.\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @fires Connection#connect\n * @fires Connection#close\n * @fires Connection#error\n * @fires Connection#timeout\n * @fires Connection#parseError\n * @return {Connection} A cursor instance\n */\nvar Connection = function(messageHandler, options) {\n  // Add event listener\n  EventEmitter.call(this);\n  // Set empty if no options passed\n  this.options = options || {};\n  // Identification information\n  this.id = _id++;\n  // Logger instance\n  this.logger = Logger('Connection', options);\n  // No bson parser passed in\n  if (!options.bson) throw new Error('must pass in valid bson parser');\n  // Get bson parser\n  this.bson = options.bson;\n  // Grouping tag used for debugging purposes\n  this.tag = options.tag;\n  // Message handler\n  this.messageHandler = messageHandler;\n\n  // Max BSON message size\n  this.maxBsonMessageSize = options.maxBsonMessageSize || 1024 * 1024 * 16 * 4;\n  // Debug information\n  if (this.logger.isDebug())\n    this.logger.debug(\n      f(\n        'creating connection %s with options [%s]',\n        this.id,\n        JSON.stringify(debugOptions(debugFields, options))\n      )\n    );\n\n  // Default options\n  this.port = options.port || 27017;\n  this.host = options.host || 'localhost';\n  this.family = typeof options.family === 'number' ? options.family : void 0;\n  this.keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n  this.keepAliveInitialDelay =\n    typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 300000;\n  this.noDelay = typeof options.noDelay === 'boolean' ? options.noDelay : true;\n  this.connectionTimeout =\n    typeof options.connectionTimeout === 'number' ? options.connectionTimeout : 30000;\n  this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 360000;\n\n  // Is the keepAliveInitialDelay > socketTimeout set it to half of socketTimeout\n  if (this.keepAliveInitialDelay > this.socketTimeout) {\n    this.keepAliveInitialDelay = Math.round(this.socketTimeout / 2);\n  }\n\n  // If connection was destroyed\n  this.destroyed = false;\n\n  // Check if we have a domain socket\n  this.domainSocket = this.host.indexOf('/') !== -1;\n\n  // Serialize commands using function\n  this.singleBufferSerializtion =\n    typeof options.singleBufferSerializtion === 'boolean' ? options.singleBufferSerializtion : true;\n  this.serializationFunction = this.singleBufferSerializtion ? 'toBinUnified' : 'toBin';\n\n  // SSL options\n  this.ca = options.ca || null;\n  this.crl = options.crl || null;\n  this.cert = options.cert || null;\n  this.key = options.key || null;\n  this.passphrase = options.passphrase || null;\n  this.ciphers = options.ciphers || null;\n  this.ecdhCurve = options.ecdhCurve || null;\n  this.ssl = typeof options.ssl === 'boolean' ? options.ssl : false;\n  this.rejectUnauthorized =\n    typeof options.rejectUnauthorized === 'boolean' ? options.rejectUnauthorized : true;\n  this.checkServerIdentity =\n    typeof options.checkServerIdentity === 'boolean' ||\n    typeof options.checkServerIdentity === 'function'\n      ? options.checkServerIdentity\n      : true;\n\n  // If ssl not enabled\n  if (!this.ssl) this.rejectUnauthorized = false;\n\n  // Response options\n  this.responseOptions = {\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false\n  };\n\n  // Flushing\n  this.flushing = false;\n  this.queue = [];\n\n  // Internal state\n  this.connection = null;\n  this.writeStream = null;\n\n  // Create hash method\n  var hash = crypto.createHash('sha1');\n  hash.update(f('%s:%s', this.host, this.port));\n\n  // Create a hash name\n  this.hashedName = hash.digest('hex');\n\n  // All operations in flight on the connection\n  this.workItems = [];\n};\n\ninherits(Connection, EventEmitter);\n\nConnection.prototype.setSocketTimeout = function(value) {\n  if (this.connection) {\n    this.connection.setTimeout(value);\n  }\n};\n\nConnection.prototype.resetSocketTimeout = function() {\n  if (this.connection) {\n    this.connection.setTimeout(this.socketTimeout);\n  }\n};\n\nConnection.enableConnectionAccounting = function(spy) {\n  if (spy) {\n    connectionAccountingSpy = spy;\n  }\n\n  connectionAccounting = true;\n  connections = {};\n};\n\nConnection.disableConnectionAccounting = function() {\n  connectionAccounting = false;\n  connectionAccountingSpy = undefined;\n};\n\nConnection.connections = function() {\n  return connections;\n};\n\nfunction deleteConnection(id) {\n  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))\n  delete connections[id];\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.deleteConnection(id);\n  }\n}\n\nfunction addConnection(id, connection) {\n  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)\n  connections[id] = connection;\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.addConnection(id, connection);\n  }\n}\n\n//\n// Connection handlers\nvar errorHandler = function(self) {\n  return function(err) {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(\n        f(\n          'connection %s for [%s:%s] errored out with [%s]',\n          self.id,\n          self.host,\n          self.port,\n          JSON.stringify(err)\n        )\n      );\n    // Emit the error\n    if (self.listeners('error').length > 0) self.emit('error', new MongoNetworkError(err), self);\n  };\n};\n\nvar timeoutHandler = function(self) {\n  return function() {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(f('connection %s for [%s:%s] timed out', self.id, self.host, self.port));\n    // Emit timeout error\n    self.emit(\n      'timeout',\n      new MongoNetworkError(f('connection %s to %s:%s timed out', self.id, self.host, self.port)),\n      self\n    );\n  };\n};\n\nvar closeHandler = function(self) {\n  return function(hadError) {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(f('connection %s with for [%s:%s] closed', self.id, self.host, self.port));\n\n    // Emit close event\n    if (!hadError) {\n      self.emit(\n        'close',\n        new MongoNetworkError(f('connection %s to %s:%s closed', self.id, self.host, self.port)),\n        self\n      );\n    }\n  };\n};\n\n// Handle a message once it is recieved\nvar emitMessageHandler = function(self, message) {\n  var msgHeader = parseHeader(message);\n  if (msgHeader.opCode === OP_COMPRESSED) {\n    msgHeader.fromCompressed = true;\n    var index = MESSAGE_HEADER_SIZE;\n    msgHeader.opCode = message.readInt32LE(index);\n    index += 4;\n    msgHeader.length = message.readInt32LE(index);\n    index += 4;\n    var compressorID = message[index];\n    index++;\n    decompress(compressorID, message.slice(index), function(err, decompressedMsgBody) {\n      if (err) {\n        throw err;\n      }\n      if (decompressedMsgBody.length !== msgHeader.length) {\n        throw new Error(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        );\n      }\n      self.messageHandler(\n        new Response(self.bson, message, msgHeader, decompressedMsgBody, self.responseOptions),\n        self\n      );\n    });\n  } else {\n    self.messageHandler(\n      new Response(\n        self.bson,\n        message,\n        msgHeader,\n        message.slice(MESSAGE_HEADER_SIZE),\n        self.responseOptions\n      ),\n      self\n    );\n  }\n};\n\nvar dataHandler = function(self) {\n  return function(data) {\n    // Parse until we are done with the data\n    while (data.length > 0) {\n      // If we still have bytes to read on the current message\n      if (self.bytesRead > 0 && self.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        var remainingBytesToRead = self.sizeOfMessage - self.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if (remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(self.buffer, self.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          self.bytesRead = self.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = new Buffer(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(self.buffer, self.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          try {\n            var emitBuffer = self.buffer;\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n\n            emitMessageHandler(self, emitBuffer);\n          } catch (err) {\n            var errorObject = {\n              err: 'socketHandler',\n              trace: err,\n              bin: self.buffer,\n              parseState: {\n                sizeOfMessage: self.sizeOfMessage,\n                bytesRead: self.bytesRead,\n                stubBuffer: self.stubBuffer\n              }\n            };\n            // We got a parse Error fire it off then keep going\n            self.emit('parseError', errorObject, self);\n          }\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if (self.stubBuffer != null && self.stubBuffer.length > 0) {\n          // If we have enough bytes to determine the message size let's do it\n          if (self.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            var newData = new Buffer(self.stubBuffer.length + data.length);\n            self.stubBuffer.copy(newData, 0);\n            data.copy(newData, self.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n          } else {\n            // Add the the bytes to the stub buffer\n            var newStubBuffer = new Buffer(self.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            self.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, self.stubBuffer.length);\n            // Exit parsing loop\n            data = new Buffer(0);\n          }\n        } else {\n          if (data.length > 4) {\n            // Retrieve the message size\n            // var sizeOfMessage = data.readUInt32LE(0);\n            var sizeOfMessage = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n            // If we have a negative sizeOfMessage emit error and return\n            if (sizeOfMessage < 0 || sizeOfMessage > self.maxBsonMessageSize) {\n              errorObject = {\n                err: 'socketHandler',\n                trace: '',\n                bin: self.buffer,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: self.bytesRead,\n                  stubBuffer: self.stubBuffer\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              self.emit('parseError', errorObject, self);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < self.maxBsonMessageSize &&\n              sizeOfMessage > data.length\n            ) {\n              self.buffer = new Buffer(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(self.buffer, 0);\n              // Update bytes read\n              self.bytesRead = data.length;\n              // Update sizeOfMessage\n              self.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = new Buffer(0);\n            } else if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < self.maxBsonMessageSize &&\n              sizeOfMessage === data.length\n            ) {\n              try {\n                emitBuffer = data;\n                // Reset state of buffer\n                self.buffer = null;\n                self.sizeOfMessage = 0;\n                self.bytesRead = 0;\n                self.stubBuffer = null;\n                // Exit parsing loop\n                data = new Buffer(0);\n                // Emit the message\n                emitMessageHandler(self, emitBuffer);\n              } catch (err) {\n                self.emit('parseError', err, self);\n              }\n            } else if (sizeOfMessage <= 4 || sizeOfMessage > self.maxBsonMessageSize) {\n              errorObject = {\n                err: 'socketHandler',\n                trace: null,\n                bin: data,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: 0,\n                  buffer: null,\n                  stubBuffer: null\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              self.emit('parseError', errorObject, self);\n\n              // Clear out the state of the parser\n              self.buffer = null;\n              self.sizeOfMessage = 0;\n              self.bytesRead = 0;\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = new Buffer(0);\n            } else {\n              emitBuffer = data.slice(0, sizeOfMessage);\n              // Reset state of buffer\n              self.buffer = null;\n              self.sizeOfMessage = 0;\n              self.bytesRead = 0;\n              self.stubBuffer = null;\n              // Copy rest of message\n              data = data.slice(sizeOfMessage);\n              // Emit the message\n              emitMessageHandler(self, emitBuffer);\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            self.stubBuffer = new Buffer(data.length);\n            // Copy the data to the stub buffer\n            data.copy(self.stubBuffer, 0);\n            // Exit parsing loop\n            data = new Buffer(0);\n          }\n        }\n      }\n    }\n  };\n};\n\n// List of socket level valid ssl options\nvar legalSslSocketOptions = [\n  'pfx',\n  'key',\n  'passphrase',\n  'cert',\n  'ca',\n  'ciphers',\n  'NPNProtocols',\n  'ALPNProtocols',\n  'servername',\n  'ecdhCurve',\n  'secureProtocol',\n  'secureContext',\n  'session',\n  'minDHSize'\n];\n\nfunction merge(options1, options2) {\n  // Merge in any allowed ssl options\n  for (var name in options2) {\n    if (options2[name] != null && legalSslSocketOptions.indexOf(name) !== -1) {\n      options1[name] = options2[name];\n    }\n  }\n}\n\nfunction makeSSLConnection(self, _options) {\n  let sslOptions = {\n    socket: self.connection,\n    rejectUnauthorized: self.rejectUnauthorized\n  };\n\n  // Merge in options\n  merge(sslOptions, self.options);\n  merge(sslOptions, _options);\n\n  // Set options for ssl\n  if (self.ca) sslOptions.ca = self.ca;\n  if (self.crl) sslOptions.crl = self.crl;\n  if (self.cert) sslOptions.cert = self.cert;\n  if (self.key) sslOptions.key = self.key;\n  if (self.passphrase) sslOptions.passphrase = self.passphrase;\n\n  // Override checkServerIdentity behavior\n  if (self.checkServerIdentity === false) {\n    // Skip the identiy check by retuning undefined as per node documents\n    // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\n    sslOptions.checkServerIdentity = function() {\n      return undefined;\n    };\n  } else if (typeof self.checkServerIdentity === 'function') {\n    sslOptions.checkServerIdentity = self.checkServerIdentity;\n  }\n\n  // Set default sni servername to be the same as host\n  if (sslOptions.servername == null) {\n    sslOptions.servername = self.host;\n  }\n\n  // Attempt SSL connection\n  const connection = tls.connect(self.port, self.host, sslOptions, function() {\n    // Error on auth or skip\n    if (connection.authorizationError && self.rejectUnauthorized) {\n      return self.emit('error', connection.authorizationError, self, { ssl: true });\n    }\n\n    // Set socket timeout instead of connection timeout\n    connection.setTimeout(self.socketTimeout);\n    // We are done emit connect\n    self.emit('connect', self);\n  });\n\n  // Set the options for the connection\n  connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);\n  connection.setTimeout(self.connectionTimeout);\n  connection.setNoDelay(self.noDelay);\n\n  return connection;\n}\n\nfunction makeUnsecureConnection(self, family) {\n  // Create new connection instance\n  let connection_options;\n  if (self.domainSocket) {\n    connection_options = { path: self.host };\n  } else {\n    connection_options = { port: self.port, host: self.host };\n    connection_options.family = family;\n  }\n\n  const connection = net.createConnection(connection_options);\n\n  // Set the options for the connection\n  connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);\n  connection.setTimeout(self.connectionTimeout);\n  connection.setNoDelay(self.noDelay);\n\n  connection.once('connect', function() {\n    // Set socket timeout instead of connection timeout\n    connection.setTimeout(self.socketTimeout);\n    // Emit connect event\n    self.emit('connect', self);\n  });\n\n  return connection;\n}\n\nfunction doConnect(self, family, _options, _errorHandler) {\n  self.connection = self.ssl\n    ? makeSSLConnection(self, _options)\n    : makeUnsecureConnection(self, family);\n\n  // Add handlers for events\n  self.connection.once('error', _errorHandler);\n  self.connection.once('timeout', timeoutHandler(self));\n  self.connection.once('close', closeHandler(self));\n  self.connection.on('data', dataHandler(self));\n}\n\n/**\n * Connect\n * @method\n */\nConnection.prototype.connect = function(_options) {\n  _options = _options || {};\n  // Set the connections\n  if (connectionAccounting) addConnection(this.id, this);\n  // Check if we are overriding the promoteLongs\n  if (typeof _options.promoteLongs === 'boolean') {\n    this.responseOptions.promoteLongs = _options.promoteLongs;\n    this.responseOptions.promoteValues = _options.promoteValues;\n    this.responseOptions.promoteBuffers = _options.promoteBuffers;\n  }\n\n  const _errorHandler = errorHandler(this);\n\n  if (this.family !== void 0) {\n    return doConnect(this, this.family, _options, _errorHandler);\n  }\n\n  return doConnect(this, 6, _options, err => {\n    if (this.logger.isDebug()) {\n      this.logger.debug(\n        f(\n          'connection %s for [%s:%s] errored out with [%s]',\n          this.id,\n          this.host,\n          this.port,\n          JSON.stringify(err)\n        )\n      );\n    }\n\n    // clean up existing event handlers\n    this.connection.removeAllListeners('error');\n    this.connection.removeAllListeners('timeout');\n    this.connection.removeAllListeners('close');\n    this.connection.removeAllListeners('data');\n    this.connection = undefined;\n\n    return doConnect(this, 4, _options, _errorHandler);\n  });\n};\n\n/**\n * Unref this connection\n * @method\n * @return {boolean}\n */\nConnection.prototype.unref = function() {\n  if (this.connection) this.connection.unref();\n  else {\n    var self = this;\n    this.once('connect', function() {\n      self.connection.unref();\n    });\n  }\n};\n\n/**\n * Destroy connection\n * @method\n */\nConnection.prototype.destroy = function() {\n  // Set the connections\n  if (connectionAccounting) deleteConnection(this.id);\n  if (this.connection) {\n    // Catch posssible exception thrown by node 0.10.x\n    try {\n      this.connection.end();\n    } catch (err) {} // eslint-disable-line\n    // Destroy connection\n    this.connection.destroy();\n  }\n\n  this.destroyed = true;\n};\n\n/**\n * Write to connection\n * @method\n * @param {Command} command Command to write out need to implement toBin and toBinUnified\n */\nConnection.prototype.write = function(buffer) {\n  var i;\n  // Debug Log\n  if (this.logger.isDebug()) {\n    if (!Array.isArray(buffer)) {\n      this.logger.debug(\n        f('writing buffer [%s] to %s:%s', buffer.toString('hex'), this.host, this.port)\n      );\n    } else {\n      for (i = 0; i < buffer.length; i++)\n        this.logger.debug(\n          f('writing buffer [%s] to %s:%s', buffer[i].toString('hex'), this.host, this.port)\n        );\n    }\n  }\n\n  // Double check that the connection is not destroyed\n  if (this.connection.destroyed === false) {\n    // Write out the command\n    if (!Array.isArray(buffer)) {\n      this.connection.write(buffer, 'binary');\n      return true;\n    }\n\n    // Iterate over all buffers and write them in order to the socket\n    for (i = 0; i < buffer.length; i++) this.connection.write(buffer[i], 'binary');\n    return true;\n  }\n\n  // Connection is destroyed return write failed\n  return false;\n};\n\n/**\n * Return id of connection as a string\n * @method\n * @return {string}\n */\nConnection.prototype.toString = function() {\n  return '' + this.id;\n};\n\n/**\n * Return json object of connection\n * @method\n * @return {object}\n */\nConnection.prototype.toJSON = function() {\n  return { id: this.id, host: this.host, port: this.port };\n};\n\n/**\n * Is the connection connected\n * @method\n * @return {boolean}\n */\nConnection.prototype.isConnected = function() {\n  if (this.destroyed) return false;\n  return !this.connection.destroyed && this.connection.writable;\n};\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Connection#connect\n * @type {Connection}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Connection#close\n * @type {Connection}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Connection#error\n * @type {Connection}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Connection#timeout\n * @type {Connection}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Connection#parseError\n * @type {Connection}\n */\n\nmodule.exports = Connection;\n","'use strict';\n\nvar f = require('util').format,\n  MongoError = require('../error').MongoError;\n\n// Filters for classes\nvar classFilters = {};\nvar filteredClasses = {};\nvar level = null;\n// Save the process id\nvar pid = process.pid;\n// current logger\nvar currentLogger = null;\n\n/**\n * Creates a new Logger instance\n * @class\n * @param {string} className The Class name associated with the logging instance\n * @param {object} [options=null] Optional settings.\n * @param {Function} [options.logger=null] Custom logger function;\n * @param {string} [options.loggerLevel=error] Override default global log level.\n * @return {Logger} a Logger instance.\n */\nvar Logger = function(className, options) {\n  if (!(this instanceof Logger)) return new Logger(className, options);\n  options = options || {};\n\n  // Current reference\n  this.className = className;\n\n  // Current logger\n  if (options.logger) {\n    currentLogger = options.logger;\n  } else if (currentLogger == null) {\n    currentLogger = console.log;\n  }\n\n  // Set level of logging, default is error\n  if (options.loggerLevel) {\n    level = options.loggerLevel || 'error';\n  }\n\n  // Add all class names\n  if (filteredClasses[this.className] == null) classFilters[this.className] = true;\n};\n\n/**\n * Log a message at the debug level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\nLogger.prototype.debug = function(message, object) {\n  if (\n    this.isDebug() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'DEBUG', this.className, pid, dateTime, message);\n    var state = {\n      type: 'debug',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n};\n\n/**\n * Log a message at the warn level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\n(Logger.prototype.warn = function(message, object) {\n  if (\n    this.isWarn() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'WARN', this.className, pid, dateTime, message);\n    var state = {\n      type: 'warn',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n}),\n  /**\n   * Log a message at the info level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.info = function(message, object) {\n    if (\n      this.isInfo() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'INFO', this.className, pid, dateTime, message);\n      var state = {\n        type: 'info',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Log a message at the error level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.error = function(message, object) {\n    if (\n      this.isError() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'ERROR', this.className, pid, dateTime, message);\n      var state = {\n        type: 'error',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Is the logger set at info level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isInfo = function() {\n    return level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isError = function() {\n    return level === 'error' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isWarn = function() {\n    return level === 'error' || level === 'warn' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at debug level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isDebug = function() {\n    return level === 'debug';\n  });\n\n/**\n * Resets the logger to default settings, error and no filtered classes\n * @method\n * @return {null}\n */\nLogger.reset = function() {\n  level = 'error';\n  filteredClasses = {};\n};\n\n/**\n * Get the current logger function\n * @method\n * @return {function}\n */\nLogger.currentLogger = function() {\n  return currentLogger;\n};\n\n/**\n * Set the current logger function\n * @method\n * @param {function} logger Logger function.\n * @return {null}\n */\nLogger.setCurrentLogger = function(logger) {\n  if (typeof logger !== 'function') throw new MongoError('current logger must be a function');\n  currentLogger = logger;\n};\n\n/**\n * Set what classes to log.\n * @method\n * @param {string} type The type of filter (currently only class)\n * @param {string[]} values The filters to apply\n * @return {null}\n */\nLogger.filter = function(type, values) {\n  if (type === 'class' && Array.isArray(values)) {\n    filteredClasses = {};\n\n    values.forEach(function(x) {\n      filteredClasses[x] = true;\n    });\n  }\n};\n\n/**\n * Set the current log level\n * @method\n * @param {string} level Set current log level (debug, info, error)\n * @return {null}\n */\nLogger.setLevel = function(_level) {\n  if (_level !== 'info' && _level !== 'error' && _level !== 'debug' && _level !== 'warn') {\n    throw new Error(f('%s is an illegal logging level', _level));\n  }\n\n  level = _level;\n};\n\nmodule.exports = Logger;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  EventEmitter = require('events').EventEmitter,\n  Connection = require('./connection'),\n  MongoError = require('../error').MongoError,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  Logger = require('./logger'),\n  f = require('util').format,\n  Query = require('./commands').Query,\n  CommandResult = require('./command_result'),\n  MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE,\n  opcodes = require('../wireprotocol/shared').opcodes,\n  compress = require('../wireprotocol/compression').compress,\n  compressorIDs = require('../wireprotocol/compression').compressorIDs,\n  uncompressibleCommands = require('../wireprotocol/compression').uncompressibleCommands,\n  resolveClusterTime = require('../topologies/shared').resolveClusterTime;\n\nconst apm = require('./apm');\n\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYING = 'destroying';\nvar DESTROYED = 'destroyed';\n\nvar _id = 0;\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Max server connection pool size\n * @param {number} [options.minSize=0] Minimum server connection pool size\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passPhrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @fires Pool#connect\n * @fires Pool#close\n * @fires Pool#error\n * @fires Pool#timeout\n * @fires Pool#parseError\n * @return {Pool} A cursor instance\n */\nvar Pool = function(topology, options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Store topology for later use\n  this.topology = topology;\n\n  // Add the options\n  this.options = Object.assign(\n    {\n      // Host and port settings\n      host: 'localhost',\n      port: 27017,\n      // Pool default max size\n      size: 5,\n      // Pool default min size\n      minSize: 0,\n      // socket settings\n      connectionTimeout: 30000,\n      socketTimeout: 360000,\n      keepAlive: true,\n      keepAliveInitialDelay: 300000,\n      noDelay: true,\n      // SSL Settings\n      ssl: false,\n      checkServerIdentity: true,\n      ca: null,\n      crl: null,\n      cert: null,\n      key: null,\n      passPhrase: null,\n      rejectUnauthorized: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      // Reconnection options\n      reconnect: true,\n      reconnectInterval: 1000,\n      reconnectTries: 30,\n      // Enable domains\n      domainsEnabled: false\n    },\n    options\n  );\n\n  // Identification information\n  this.id = _id++;\n  // Current reconnect retries\n  this.retriesLeft = this.options.reconnectTries;\n  this.reconnectId = null;\n  // No bson parser passed in\n  if (\n    !options.bson ||\n    (options.bson &&\n      (typeof options.bson.serialize !== 'function' ||\n        typeof options.bson.deserialize !== 'function'))\n  ) {\n    throw new Error('must pass in valid bson parser');\n  }\n\n  // Logger instance\n  this.logger = Logger('Pool', options);\n  // Pool state\n  this.state = DISCONNECTED;\n  // Connections\n  this.availableConnections = [];\n  this.inUseConnections = [];\n  this.connectingConnections = [];\n  // Currently executing\n  this.executing = false;\n  // Operation work queue\n  this.queue = [];\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(options.bson);\n\n  // Contains the reconnect connection\n  this.reconnectConnection = null;\n\n  // Are we currently authenticating\n  this.authenticating = false;\n  this.loggingout = false;\n  this.nonAuthenticatedConnections = [];\n  this.authenticatingTimestamp = null;\n  // Number of consecutive timeouts caught\n  this.numberOfConsecutiveTimeouts = 0;\n  // Current pool Index\n  this.connectionIndex = 0;\n};\n\ninherits(Pool, EventEmitter);\n\nObject.defineProperty(Pool.prototype, 'size', {\n  enumerable: true,\n  get: function() {\n    return this.options.size;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'minSize', {\n  enumerable: true,\n  get: function() {\n    return this.options.minSize;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'connectionTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.connectionTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'socketTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.socketTimeout;\n  }\n});\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYING, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYING, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYING],\n    destroying: [DESTROYING, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.emit('stateChanged', self.state, newState);\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\nfunction authenticate(pool, auth, connection, cb) {\n  if (auth[0] === undefined) return cb(null);\n  // We need to authenticate the server\n  var mechanism = auth[0];\n  var db = auth[1];\n  // Validate if the mechanism exists\n  if (!pool.authProviders[mechanism]) {\n    throw new MongoError(f('authMechanism %s not supported', mechanism));\n  }\n\n  // Get the provider\n  var provider = pool.authProviders[mechanism];\n\n  // Authenticate using the provided mechanism\n  provider.auth.apply(provider, [write(pool), [connection], db].concat(auth.slice(2)).concat([cb]));\n}\n\n// The write function used by the authentication mechanism (bypasses external)\nfunction write(self) {\n  return function(connection, command, callback) {\n    // Get the raw buffer\n    // Ensure we stop auth if pool was destroyed\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      return callback(new MongoError('pool destroyed'));\n    }\n\n    // Set the connection workItem callback\n    connection.workItems.push({\n      cb: callback,\n      command: true,\n      requestId: command.requestId\n    });\n\n    // Write the buffer out to the connection\n    connection.write(command.toBin());\n  };\n}\n\nfunction reauthenticate(pool, connection, cb) {\n  // Authenticate\n  function authenticateAgainstProvider(pool, connection, providers, cb) {\n    // Finished re-authenticating against providers\n    if (providers.length === 0) return cb();\n    // Get the provider name\n    var provider = pool.authProviders[providers.pop()];\n\n    // Auth provider\n    provider.reauthenticate(write(pool), [connection], function(err) {\n      // We got an error return immediately\n      if (err) return cb(err);\n      // Continue authenticating the connection\n      authenticateAgainstProvider(pool, connection, providers, cb);\n    });\n  }\n\n  // Start re-authenticating process\n  authenticateAgainstProvider(pool, connection, Object.keys(pool.authProviders), cb);\n}\n\nfunction connectionFailureHandler(self, event) {\n  return function(err) {\n    if (this._connectionFailHandled) return;\n    this._connectionFailHandled = true;\n    // Destroy the connection\n    this.destroy();\n\n    // Remove the connection\n    removeConnection(self, this);\n\n    // Flush all work Items on this connection\n    while (this.workItems.length > 0) {\n      var workItem = this.workItems.shift();\n      if (workItem.cb) workItem.cb(err);\n    }\n\n    // Did we catch a timeout, increment the numberOfConsecutiveTimeouts\n    if (event === 'timeout') {\n      self.numberOfConsecutiveTimeouts = self.numberOfConsecutiveTimeouts + 1;\n\n      // Have we timed out more than reconnectTries in a row ?\n      // Force close the pool as we are trying to connect to tcp sink hole\n      if (self.numberOfConsecutiveTimeouts > self.options.reconnectTries) {\n        self.numberOfConsecutiveTimeouts = 0;\n        // Destroy all connections and pool\n        self.destroy(true);\n        // Emit close event\n        return self.emit('close', self);\n      }\n    }\n\n    // No more socket available propegate the event\n    if (self.socketCount() === 0) {\n      if (self.state !== DESTROYED && self.state !== DESTROYING) {\n        stateTransition(self, DISCONNECTED);\n      }\n\n      // Do not emit error events, they are always close events\n      // do not trigger the low level error handler in node\n      event = event === 'error' ? 'close' : event;\n      self.emit(event, err);\n    }\n\n    // Start reconnection attempts\n    if (!self.reconnectId && self.options.reconnect) {\n      self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n    }\n\n    // Do we need to do anything to maintain the minimum pool size\n    const totalConnections =\n      self.availableConnections.length +\n      self.connectingConnections.length +\n      self.inUseConnections.length;\n\n    if (totalConnections < self.minSize) {\n      _createConnection(self);\n    }\n  };\n}\n\nfunction attemptReconnect(self) {\n  return function() {\n    self.emit('attemptReconnect', self);\n    if (self.state === DESTROYED || self.state === DESTROYING) return;\n\n    // We are connected do not try again\n    if (self.isConnected()) {\n      self.reconnectId = null;\n      return;\n    }\n\n    // If we have failure schedule a retry\n    function _connectionFailureHandler(self) {\n      return function() {\n        if (this._connectionFailHandled) return;\n        this._connectionFailHandled = true;\n        // Destroy the connection\n        this.destroy();\n        // Count down the number of reconnects\n        self.retriesLeft = self.retriesLeft - 1;\n        // How many retries are left\n        if (self.retriesLeft <= 0) {\n          // Destroy the instance\n          self.destroy();\n          // Emit close event\n          self.emit(\n            'reconnectFailed',\n            new MongoNetworkError(\n              f(\n                'failed to reconnect after %s attempts with interval %s ms',\n                self.options.reconnectTries,\n                self.options.reconnectInterval\n              )\n            )\n          );\n        } else {\n          self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n        }\n      };\n    }\n\n    // Got a connect handler\n    function _connectHandler(self) {\n      return function() {\n        // Assign\n        var connection = this;\n\n        // Pool destroyed stop the connection\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return connection.destroy();\n        }\n\n        // Clear out all handlers\n        handlers.forEach(function(event) {\n          connection.removeAllListeners(event);\n        });\n\n        // Reset reconnect id\n        self.reconnectId = null;\n\n        // Apply pool connection handlers\n        connection.on('error', connectionFailureHandler(self, 'error'));\n        connection.on('close', connectionFailureHandler(self, 'close'));\n        connection.on('timeout', connectionFailureHandler(self, 'timeout'));\n        connection.on('parseError', connectionFailureHandler(self, 'parseError'));\n\n        // Apply any auth to the connection\n        reauthenticate(self, this, function() {\n          // Reset retries\n          self.retriesLeft = self.options.reconnectTries;\n          // Push to available connections\n          self.availableConnections.push(connection);\n          // Set the reconnectConnection to null\n          self.reconnectConnection = null;\n          // Emit reconnect event\n          self.emit('reconnect', self);\n          // Trigger execute to start everything up again\n          _execute(self)();\n        });\n      };\n    }\n\n    // Create a connection\n    self.reconnectConnection = new Connection(messageHandler(self), self.options);\n    // Add handlers\n    self.reconnectConnection.on('close', _connectionFailureHandler(self, 'close'));\n    self.reconnectConnection.on('error', _connectionFailureHandler(self, 'error'));\n    self.reconnectConnection.on('timeout', _connectionFailureHandler(self, 'timeout'));\n    self.reconnectConnection.on('parseError', _connectionFailureHandler(self, 'parseError'));\n    // On connection\n    self.reconnectConnection.on('connect', _connectHandler(self));\n    // Attempt connection\n    self.reconnectConnection.connect();\n  };\n}\n\nfunction moveConnectionBetween(connection, from, to) {\n  var index = from.indexOf(connection);\n  // Move the connection from connecting to available\n  if (index !== -1) {\n    from.splice(index, 1);\n    to.push(connection);\n  }\n}\n\nfunction messageHandler(self) {\n  return function(message, connection) {\n    // workItem to execute\n    var workItem = null;\n\n    // Locate the workItem\n    for (var i = 0; i < connection.workItems.length; i++) {\n      if (connection.workItems[i].requestId === message.responseTo) {\n        // Get the callback\n        workItem = connection.workItems[i];\n        // Remove from list of workItems\n        connection.workItems.splice(i, 1);\n      }\n    }\n\n    // Reset timeout counter\n    self.numberOfConsecutiveTimeouts = 0;\n\n    // Reset the connection timeout if we modified it for\n    // this operation\n    if (workItem && workItem.socketTimeout) {\n      connection.resetSocketTimeout();\n    }\n\n    // Log if debug enabled\n    if (self.logger.isDebug()) {\n      self.logger.debug(\n        f(\n          'message [%s] received from %s:%s',\n          message.raw.toString('hex'),\n          self.options.host,\n          self.options.port\n        )\n      );\n    }\n\n    // Authenticate any straggler connections\n    function authenticateStragglers(self, connection, callback) {\n      // Get any non authenticated connections\n      var connections = self.nonAuthenticatedConnections.slice(0);\n      var nonAuthenticatedConnections = self.nonAuthenticatedConnections;\n      self.nonAuthenticatedConnections = [];\n\n      // Establish if the connection need to be authenticated\n      // Add to authentication list if\n      // 1. we were in an authentication process when the operation was executed\n      // 2. our current authentication timestamp is from the workItem one, meaning an auth has happened\n      if (\n        connection.workItems.length === 1 &&\n        (connection.workItems[0].authenticating === true ||\n          (typeof connection.workItems[0].authenticatingTimestamp === 'number' &&\n            connection.workItems[0].authenticatingTimestamp !== self.authenticatingTimestamp))\n      ) {\n        // Add connection to the list\n        connections.push(connection);\n      }\n\n      // No connections need to be re-authenticated\n      if (connections.length === 0) {\n        // Release the connection back to the pool\n        moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n        // Finish\n        return callback();\n      }\n\n      // Apply re-authentication to all connections before releasing back to pool\n      var connectionCount = connections.length;\n      // Authenticate all connections\n      for (var i = 0; i < connectionCount; i++) {\n        reauthenticate(self, connections[i], function() {\n          connectionCount = connectionCount - 1;\n\n          if (connectionCount === 0) {\n            // Put non authenticated connections in available connections\n            self.availableConnections = self.availableConnections.concat(\n              nonAuthenticatedConnections\n            );\n            // Release the connection back to the pool\n            moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n            // Return\n            callback();\n          }\n        });\n      }\n    }\n\n    function handleOperationCallback(self, cb, err, result) {\n      // No domain enabled\n      if (!self.options.domainsEnabled) {\n        return process.nextTick(function() {\n          return cb(err, result);\n        });\n      }\n\n      // Domain enabled just call the callback\n      cb(err, result);\n    }\n\n    authenticateStragglers(self, connection, function() {\n      // Keep executing, ensure current message handler does not stop execution\n      if (!self.executing) {\n        process.nextTick(function() {\n          _execute(self)();\n        });\n      }\n\n      // Time to dispatch the message if we have a callback\n      if (workItem && !workItem.immediateRelease) {\n        try {\n          // Parse the message according to the provided options\n          message.parse(workItem);\n        } catch (err) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(err));\n        }\n\n        // Look for clusterTime, and operationTime and update them if necessary\n        if (message.documents[0]) {\n          if (message.documents[0].$clusterTime) {\n            const $clusterTime = message.documents[0].$clusterTime;\n            self.topology.clusterTime = $clusterTime;\n\n            if (workItem.session != null) {\n              resolveClusterTime(workItem.session, $clusterTime);\n            }\n          }\n\n          if (\n            message.documents[0].operationTime &&\n            workItem.session &&\n            workItem.session.supports.causalConsistency\n          ) {\n            workItem.session.advanceOperationTime(message.documents[0].operationTime);\n          }\n        }\n\n        // Establish if we have an error\n        if (\n          workItem.command &&\n          message.documents[0] &&\n          (message.documents[0].ok === 0 ||\n            message.documents[0]['$err'] ||\n            message.documents[0]['errmsg'] ||\n            message.documents[0]['code'])\n        ) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(message.documents[0]));\n        }\n\n        // Add the connection details\n        message.hashedName = connection.hashedName;\n\n        // Return the documents\n        handleOperationCallback(\n          self,\n          workItem.cb,\n          null,\n          new CommandResult(\n            workItem.fullResult ? message : message.documents[0],\n            connection,\n            message\n          )\n        );\n      }\n    });\n  };\n}\n\n/**\n * Return the total socket count in the pool.\n * @method\n * @return {Number} The number of socket available.\n */\nPool.prototype.socketCount = function() {\n  return this.availableConnections.length + this.inUseConnections.length;\n  // + this.connectingConnections.length;\n};\n\n/**\n * Return all pool connections\n * @method\n * @return {Connection[]} The pool connections\n */\nPool.prototype.allConnections = function() {\n  return this.availableConnections.concat(this.inUseConnections).concat(this.connectingConnections);\n};\n\n/**\n * Get a pool connection (round-robin)\n * @method\n * @return {Connection}\n */\nPool.prototype.get = function() {\n  return this.allConnections()[0];\n};\n\n/**\n * Is the pool connected\n * @method\n * @return {boolean}\n */\nPool.prototype.isConnected = function() {\n  // We are in a destroyed state\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    return false;\n  }\n\n  // Get connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  // Check if we have any connected connections\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i].isConnected()) return true;\n  }\n\n  // Might be authenticating, but we are still connected\n  if (connections.length === 0 && this.authenticating) {\n    return true;\n  }\n\n  // Not connected\n  return false;\n};\n\n/**\n * Was the pool destroyed\n * @method\n * @return {boolean}\n */\nPool.prototype.isDestroyed = function() {\n  return this.state === DESTROYED || this.state === DESTROYING;\n};\n\n/**\n * Is the pool in a disconnected state\n * @method\n * @return {boolean}\n */\nPool.prototype.isDisconnected = function() {\n  return this.state === DISCONNECTED;\n};\n\n/**\n * Connect pool\n * @method\n */\nPool.prototype.connect = function() {\n  if (this.state !== DISCONNECTED) {\n    throw new MongoError('connection in unlawful state ' + this.state);\n  }\n\n  var self = this;\n  // Transition to connecting state\n  stateTransition(this, CONNECTING);\n  // Create an array of the arguments\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Create a connection\n  var connection = new Connection(messageHandler(self), this.options);\n  // Add to list of connections\n  this.connectingConnections.push(connection);\n  // Add listeners to the connection\n  connection.once('connect', function(connection) {\n    if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n    // If we are in a topology, delegate the auth to it\n    // This is to avoid issues where we would auth against an\n    // arbiter\n    if (self.options.inTopology) {\n      // Set connected mode\n      stateTransition(self, CONNECTED);\n\n      // Move the active connection\n      moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n      // Emit the connect event\n      return self.emit('connect', self);\n    }\n\n    // Apply any store credentials\n    reauthenticate(self, connection, function(err) {\n      if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n      // We have an error emit it\n      if (err) {\n        // Destroy the pool\n        self.destroy();\n        // Emit the error\n        return self.emit('error', err);\n      }\n\n      // Authenticate\n      authenticate(self, args, connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n        // We have an error emit it\n        if (err) {\n          // Destroy the pool\n          self.destroy();\n          // Emit the error\n          return self.emit('error', err);\n        }\n        // Set connected mode\n        stateTransition(self, CONNECTED);\n\n        // Move the active connection\n        moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n        // if we have a minPoolSize, create a connection\n        if (self.minSize) {\n          for (let i = 0; i < self.minSize; i++) _createConnection(self);\n        }\n\n        // Emit the connect event\n        self.emit('connect', self);\n      });\n    });\n  });\n\n  // Add error handlers\n  connection.once('error', connectionFailureHandler(this, 'error'));\n  connection.once('close', connectionFailureHandler(this, 'close'));\n  connection.once('timeout', connectionFailureHandler(this, 'timeout'));\n  connection.once('parseError', connectionFailureHandler(this, 'parseError'));\n\n  try {\n    connection.connect();\n  } catch (err) {\n    // SSL or something threw on connect\n    process.nextTick(function() {\n      self.emit('error', err);\n    });\n  }\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.auth = function(mechanism) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if (self.authProviders[mechanism] == null && mechanism !== 'default') {\n    throw new MongoError(f('auth provider %s does not exist', mechanism));\n  }\n\n  // Signal that we are authenticating a new set of credentials\n  this.authenticating = true;\n  this.authenticatingTimestamp = new Date().getTime();\n\n  // Authenticate all live connections\n  function authenticateLiveConnections(self, args, cb) {\n    // Get the current viable connections\n    var connections = self.allConnections();\n    // Allow nothing else to use the connections while we authenticate them\n    self.availableConnections = [];\n    self.inUseConnections = [];\n    self.connectingConnections = [];\n\n    var connectionsCount = connections.length;\n    var error = null;\n    // No connections available, return\n    if (connectionsCount === 0) {\n      self.authenticating = false;\n      return callback(null);\n    }\n\n    // Authenticate the connections\n    for (var i = 0; i < connections.length; i++) {\n      authenticate(self, args, connections[i], function(err, result) {\n        connectionsCount = connectionsCount - 1;\n\n        // Store the error\n        if (err) error = err;\n\n        // Processed all connections\n        if (connectionsCount === 0) {\n          // Auth finished\n          self.authenticating = false;\n          // Add the connections back to available connections\n          self.availableConnections = self.availableConnections.concat(connections);\n          // We had an error, return it\n          if (error) {\n            // Log the error\n            if (self.logger.isError()) {\n              self.logger.error(\n                f(\n                  '[%s] failed to authenticate against server %s:%s',\n                  self.id,\n                  self.options.host,\n                  self.options.port\n                )\n              );\n            }\n\n            return cb(error, result);\n          }\n          cb(null, result);\n        }\n      });\n    }\n  }\n\n  // Wait for a logout in process to happen\n  function waitForLogout(self, cb) {\n    if (!self.loggingout) return cb();\n    setTimeout(function() {\n      waitForLogout(self, cb);\n    }, 1);\n  }\n\n  // Wait for loggout to finish\n  waitForLogout(self, function() {\n    // Authenticate all live connections\n    authenticateLiveConnections(self, args, function(err, result) {\n      // Credentials correctly stored in auth provider if successful\n      // Any new connections will now reauthenticate correctly\n      self.authenticating = false;\n      // Return after authentication connections\n      callback(err, result);\n    });\n  });\n};\n\n/**\n * Logout all users against a database\n * @method\n * @param {string} dbName The database name\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.logout = function(dbName, callback) {\n  var self = this;\n  if (typeof dbName !== 'string') {\n    throw new MongoError('logout method requires a db name as first argument');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new MongoError('logout method requires a callback');\n  }\n\n  // Indicate logout in process\n  this.loggingout = true;\n\n  // Get all relevant connections\n  var connections = self.availableConnections.concat(self.inUseConnections);\n  var count = connections.length;\n  // Store any error\n  var error = null;\n\n  // Send logout command over all the connections\n  for (var i = 0; i < connections.length; i++) {\n    write(self)(\n      connections[i],\n      new Query(\n        this.options.bson,\n        f('%s.$cmd', dbName),\n        { logout: 1 },\n        { numberToSkip: 0, numberToReturn: 1 }\n      ),\n      function(err) {\n        count = count - 1;\n        if (err) error = err;\n\n        if (count === 0) {\n          self.loggingout = false;\n          callback(error);\n        }\n      }\n    );\n  }\n};\n\n/**\n * Unref the pool\n * @method\n */\nPool.prototype.unref = function() {\n  // Get all the known connections\n  var connections = this.availableConnections\n    .concat(this.inUseConnections)\n    .concat(this.connectingConnections);\n  connections.forEach(function(c) {\n    c.unref();\n  });\n};\n\n// Events\nvar events = ['error', 'close', 'timeout', 'parseError', 'connect'];\n\n// Destroy the connections\nfunction destroy(self, connections) {\n  // Destroy all connections\n  connections.forEach(function(c) {\n    // Remove all listeners\n    for (var i = 0; i < events.length; i++) {\n      c.removeAllListeners(events[i]);\n    }\n    // Destroy connection\n    c.destroy();\n  });\n\n  // Zero out all connections\n  self.inUseConnections = [];\n  self.availableConnections = [];\n  self.nonAuthenticatedConnections = [];\n  self.connectingConnections = [];\n\n  // Set state to destroyed\n  stateTransition(self, DESTROYED);\n}\n\n/**\n * Destroy pool\n * @method\n */\nPool.prototype.destroy = function(force) {\n  var self = this;\n  // Do not try again if the pool is already dead\n  if (this.state === DESTROYED || self.state === DESTROYING) return;\n  // Set state to destroyed\n  stateTransition(this, DESTROYING);\n\n  // Are we force closing\n  if (force) {\n    // Get all the known connections\n    var connections = self.availableConnections\n      .concat(self.inUseConnections)\n      .concat(self.nonAuthenticatedConnections)\n      .concat(self.connectingConnections);\n\n    // Flush any remaining work items with\n    // an error\n    while (self.queue.length > 0) {\n      var workItem = self.queue.shift();\n      if (typeof workItem.cb === 'function') {\n        workItem.cb(new MongoError('Pool was force destroyed'));\n      }\n    }\n\n    // Destroy the topology\n    return destroy(self, connections);\n  }\n\n  // Clear out the reconnect if set\n  if (this.reconnectId) {\n    clearTimeout(this.reconnectId);\n  }\n\n  // If we have a reconnect connection running, close\n  // immediately\n  if (this.reconnectConnection) {\n    this.reconnectConnection.destroy();\n  }\n\n  // Wait for the operations to drain before we close the pool\n  function checkStatus() {\n    flushMonitoringOperations(self.queue);\n\n    if (self.queue.length === 0) {\n      // Get all the known connections\n      var connections = self.availableConnections\n        .concat(self.inUseConnections)\n        .concat(self.nonAuthenticatedConnections)\n        .concat(self.connectingConnections);\n\n      // Check if we have any in flight operations\n      for (var i = 0; i < connections.length; i++) {\n        // There is an operation still in flight, reschedule a\n        // check waiting for it to drain\n        if (connections[i].workItems.length > 0) {\n          return setTimeout(checkStatus, 1);\n        }\n      }\n\n      destroy(self, connections);\n      // } else if (self.queue.length > 0 && !this.reconnectId) {\n    } else {\n      // Ensure we empty the queue\n      _execute(self)();\n      // Set timeout\n      setTimeout(checkStatus, 1);\n    }\n  }\n\n  // Initiate drain of operations\n  checkStatus();\n};\n\n// Prepare the buffer that Pool.prototype.write() uses to send to the server\nvar serializeCommands = function(self, commands, result, callback) {\n  // Base case when there are no more commands to serialize\n  if (commands.length === 0) return callback(null, result);\n\n  // Pop off the zeroth command and serialize it\n  var thisCommand = commands.shift();\n  var originalCommandBuffer = thisCommand.toBin();\n\n  // Check whether we and the server have agreed to use a compressor\n  if (self.options.agreedCompressor && !hasUncompressibleCommands(thisCommand)) {\n    // Transform originalCommandBuffer into OP_COMPRESSED\n    var concatenatedOriginalCommandBuffer = Buffer.concat(originalCommandBuffer);\n    var messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    var originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress(self, messageToBeCompressed, function(err, compressedMessage) {\n      if (err) return callback(err, null);\n\n      // Create the msgHeader of OP_COMPRESSED\n      var msgHeader = new Buffer(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(MESSAGE_HEADER_SIZE + 9 + compressedMessage.length, 0); // messageLength\n      msgHeader.writeInt32LE(thisCommand.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      var compressionDetails = new Buffer(9);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(compressorIDs[self.options.agreedCompressor], 8); // compressorID\n\n      // Push the concatenation of the OP_COMPRESSED message onto results\n      result.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n\n      // Continue recursing through the commands array\n      serializeCommands(self, commands, result, callback);\n    });\n  } else {\n    // Push the serialization of the command onto results\n    result.push(originalCommandBuffer);\n\n    // Continue recursing through the commands array\n    serializeCommands(self, commands, result, callback);\n  }\n};\n\n/**\n * Write a message to MongoDB\n * @method\n * @return {Connection}\n */\nPool.prototype.write = function(commands, options, cb) {\n  var self = this;\n  // Ensure we have a callback\n  if (typeof options === 'function') {\n    cb = options;\n  }\n\n  // Always have options\n  options = options || {};\n\n  // We need to have a callback function unless the message returns no response\n  if (!(typeof cb === 'function') && !options.noResponse) {\n    throw new MongoError('write method must provide a callback');\n  }\n\n  // Pool was destroyed error out\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    // Callback with an error\n    if (cb) {\n      try {\n        cb(new MongoError('pool destroyed'));\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    }\n\n    return;\n  }\n\n  if (this.options.domainsEnabled && process.domain && typeof cb === 'function') {\n    // if we have a domain bind to it\n    var oldCb = cb;\n    cb = process.domain.bind(function() {\n      // v8 - argumentsToArray one-liner\n      var args = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      // bounce off event loop so domain switch takes place\n      process.nextTick(function() {\n        oldCb.apply(null, args);\n      });\n    });\n  }\n\n  // Do we have an operation\n  var operation = {\n    cb: cb,\n    raw: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    fullResult: false\n  };\n\n  // Set the options for the parsing\n  operation.promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true;\n  operation.promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : true;\n  operation.promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false;\n  operation.raw = typeof options.raw === 'boolean' ? options.raw : false;\n  operation.immediateRelease =\n    typeof options.immediateRelease === 'boolean' ? options.immediateRelease : false;\n  operation.documentsReturnedIn = options.documentsReturnedIn;\n  operation.command = typeof options.command === 'boolean' ? options.command : false;\n  operation.fullResult = typeof options.fullResult === 'boolean' ? options.fullResult : false;\n  operation.noResponse = typeof options.noResponse === 'boolean' ? options.noResponse : false;\n  operation.session = options.session || null;\n\n  // Optional per operation socketTimeout\n  operation.socketTimeout = options.socketTimeout;\n  operation.monitoring = options.monitoring;\n  // Custom socket Timeout\n  if (options.socketTimeout) {\n    operation.socketTimeout = options.socketTimeout;\n  }\n\n  // Ensure commands is an array\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n\n  // Get the requestId\n  operation.requestId = commands[commands.length - 1].requestId;\n\n  if (hasSessionSupport(this.topology)) {\n    let sessionOptions = {};\n    if (this.topology.clusterTime) {\n      sessionOptions = { $clusterTime: this.topology.clusterTime };\n    }\n\n    if (operation.session) {\n      // TODO: reenable when sessions development is complete\n      // if (operation.session.topology !== this.topology) {\n      //   return cb(\n      //     new MongoError('Sessions may only be used with the client they were created from')\n      //   );\n      // }\n\n      if (operation.session.hasEnded) {\n        return cb(new MongoError('Use of expired sessions is not permitted'));\n      }\n\n      if (\n        operation.session.clusterTime &&\n        operation.session.clusterTime.clusterTime.greaterThan(\n          sessionOptions.$clusterTime.clusterTime\n        )\n      ) {\n        sessionOptions.$clusterTime = operation.session.clusterTime;\n      }\n\n      sessionOptions.lsid = operation.session.id;\n\n      // update the `lastUse` of the acquired ServerSession\n      operation.session.serverSession.lastUse = Date.now();\n    }\n\n    // decorate the commands with session-specific details\n    commands.forEach(command => {\n      if (command instanceof Query) {\n        if (command.query.$query) {\n          Object.assign(command.query.$query, sessionOptions);\n        } else {\n          Object.assign(command.query, sessionOptions);\n        }\n      } else {\n        Object.assign(command, sessionOptions);\n      }\n    });\n  }\n\n  // If command monitoring is enabled we need to modify the callback here\n  if (self.options.monitorCommands) {\n    // NOTE: there is only ever a single command, for some legacy reason I am unaware of we\n    //       treat this as a potential array of commands\n    const command = commands[0];\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operation.started = process.hrtime();\n    operation.cb = (err, reply) => {\n      if (err) {\n        self.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operation.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          self.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operation.started)\n          );\n        } else {\n          self.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operation.started)\n          );\n        }\n      }\n\n      if (typeof cb === 'function') cb(err, reply);\n    };\n  }\n\n  // Prepare the operation buffer\n  serializeCommands(self, commands, [], function(err, serializedCommands) {\n    if (err) throw err;\n\n    // Set the operation's buffer to the serialization of the commands\n    operation.buffer = serializedCommands;\n\n    // If we have a monitoring operation schedule as the very first operation\n    // Otherwise add to back of queue\n    if (options.monitoring) {\n      self.queue.unshift(operation);\n    } else {\n      self.queue.push(operation);\n    }\n\n    // Attempt to execute the operation\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n  });\n};\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nvar hasUncompressibleCommands = function(command) {\n  return uncompressibleCommands.some(function(cmd) {\n    return command.query.hasOwnProperty(cmd);\n  });\n};\n\n// Remove connection method\nfunction remove(connection, connections) {\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i] === connection) {\n      connections.splice(i, 1);\n      return true;\n    }\n  }\n}\n\nfunction removeConnection(self, connection) {\n  if (remove(connection, self.availableConnections)) return;\n  if (remove(connection, self.inUseConnections)) return;\n  if (remove(connection, self.connectingConnections)) return;\n  if (remove(connection, self.nonAuthenticatedConnections)) return;\n}\n\n// All event handlers\nvar handlers = ['close', 'message', 'error', 'timeout', 'parseError', 'connect'];\n\nfunction _createConnection(self) {\n  if (self.state === DESTROYED || self.state === DESTROYING) {\n    return;\n  }\n  var connection = new Connection(messageHandler(self), self.options);\n\n  // Push the connection\n  self.connectingConnections.push(connection);\n\n  // Handle any errors\n  var tempErrorHandler = function(_connection) {\n    return function() {\n      // Destroy the connection\n      _connection.destroy();\n      // Remove the connection from the connectingConnections list\n      removeConnection(self, _connection);\n      // Start reconnection attempts\n      if (!self.reconnectId && self.options.reconnect) {\n        self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n      }\n    };\n  };\n\n  // Handle successful connection\n  var tempConnectHandler = function(_connection) {\n    return function() {\n      // Destroyed state return\n      if (self.state === DESTROYED || self.state === DESTROYING) {\n        // Remove the connection from the list\n        removeConnection(self, _connection);\n        return _connection.destroy();\n      }\n\n      // Destroy all event emitters\n      handlers.forEach(function(e) {\n        _connection.removeAllListeners(e);\n      });\n\n      // Add the final handlers\n      _connection.once('close', connectionFailureHandler(self, 'close'));\n      _connection.once('error', connectionFailureHandler(self, 'error'));\n      _connection.once('timeout', connectionFailureHandler(self, 'timeout'));\n      _connection.once('parseError', connectionFailureHandler(self, 'parseError'));\n\n      // Signal\n      reauthenticate(self, _connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return _connection.destroy();\n        }\n        // Remove the connection from the connectingConnections list\n        removeConnection(self, _connection);\n\n        // Handle error\n        if (err) {\n          return _connection.destroy();\n        }\n\n        // If we are c at the moment\n        // Do not automatially put in available connections\n        // As we need to apply the credentials first\n        if (self.authenticating) {\n          self.nonAuthenticatedConnections.push(_connection);\n        } else {\n          // Push to available\n          self.availableConnections.push(_connection);\n          // Execute any work waiting\n          _execute(self)();\n        }\n      });\n    };\n  };\n\n  // Add all handlers\n  connection.once('close', tempErrorHandler(connection));\n  connection.once('error', tempErrorHandler(connection));\n  connection.once('timeout', tempErrorHandler(connection));\n  connection.once('parseError', tempErrorHandler(connection));\n  connection.once('connect', tempConnectHandler(connection));\n\n  // Start connection\n  connection.connect();\n}\n\nfunction flushMonitoringOperations(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    if (queue[i].monitoring) {\n      var workItem = queue[i];\n      queue.splice(i, 1);\n      workItem.cb(\n        new MongoError({ message: 'no connection available for monitoring', driver: true })\n      );\n    }\n  }\n}\n\nfunction _execute(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Already executing, skip\n    if (self.executing) return;\n    // Set pool as executing\n    self.executing = true;\n\n    // Wait for auth to clear before continuing\n    function waitForAuth(cb) {\n      if (!self.authenticating) return cb();\n      // Wait for a milisecond and try again\n      setTimeout(function() {\n        waitForAuth(cb);\n      }, 1);\n    }\n\n    // Block on any auth in process\n    waitForAuth(function() {\n      // New pool connections are in progress, wait them to finish\n      // before executing any more operation to ensure distribution of\n      // operations\n      if (self.connectingConnections.length > 0) {\n        return;\n      }\n\n      // As long as we have available connections\n      // eslint-disable-next-line\n      while (true) {\n        // Total availble connections\n        var totalConnections =\n          self.availableConnections.length +\n          self.connectingConnections.length +\n          self.inUseConnections.length;\n\n        // No available connections available, flush any monitoring ops\n        if (self.availableConnections.length === 0) {\n          // Flush any monitoring operations\n          flushMonitoringOperations(self.queue);\n          break;\n        }\n\n        // No queue break\n        if (self.queue.length === 0) {\n          break;\n        }\n\n        // Get a connection\n        var connection = null;\n\n        // Locate all connections that have no work\n        var connections = [];\n        // Get a list of all connections\n        for (var i = 0; i < self.availableConnections.length; i++) {\n          if (self.availableConnections[i].workItems.length === 0) {\n            connections.push(self.availableConnections[i]);\n          }\n        }\n\n        // No connection found that has no work on it, just pick one for pipelining\n        if (connections.length === 0) {\n          connection =\n            self.availableConnections[self.connectionIndex++ % self.availableConnections.length];\n        } else {\n          connection = connections[self.connectionIndex++ % connections.length];\n        }\n\n        // Is the connection connected\n        if (connection.isConnected()) {\n          // Get the next work item\n          var workItem = self.queue.shift();\n\n          // If we are monitoring we need to use a connection that is not\n          // running another operation to avoid socket timeout changes\n          // affecting an existing operation\n          if (workItem.monitoring) {\n            var foundValidConnection = false;\n\n            for (i = 0; i < self.availableConnections.length; i++) {\n              // If the connection is connected\n              // And there are no pending workItems on it\n              // Then we can safely use it for monitoring.\n              if (\n                self.availableConnections[i].isConnected() &&\n                self.availableConnections[i].workItems.length === 0\n              ) {\n                foundValidConnection = true;\n                connection = self.availableConnections[i];\n                break;\n              }\n            }\n\n            // No safe connection found, attempt to grow the connections\n            // if possible and break from the loop\n            if (!foundValidConnection) {\n              // Put workItem back on the queue\n              self.queue.unshift(workItem);\n\n              // Attempt to grow the pool if it's not yet maxsize\n              if (totalConnections < self.options.size && self.queue.length > 0) {\n                // Create a new connection\n                _createConnection(self);\n              }\n\n              // Re-execute the operation\n              setTimeout(function() {\n                _execute(self)();\n              }, 10);\n\n              break;\n            }\n          }\n\n          // Don't execute operation until we have a full pool\n          if (totalConnections < self.options.size) {\n            // Connection has work items, then put it back on the queue\n            // and create a new connection\n            if (connection.workItems.length > 0) {\n              // Lets put the workItem back on the list\n              self.queue.unshift(workItem);\n              // Create a new connection\n              _createConnection(self);\n              // Break from the loop\n              break;\n            }\n          }\n\n          // Get actual binary commands\n          var buffer = workItem.buffer;\n\n          // Set current status of authentication process\n          workItem.authenticating = self.authenticating;\n          workItem.authenticatingTimestamp = self.authenticatingTimestamp;\n\n          // If we are monitoring take the connection of the availableConnections\n          if (workItem.monitoring) {\n            moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);\n          }\n\n          // Track the executing commands on the mongo server\n          // as long as there is an expected response\n          if (!workItem.noResponse) {\n            connection.workItems.push(workItem);\n          }\n\n          // We have a custom socketTimeout\n          if (!workItem.immediateRelease && typeof workItem.socketTimeout === 'number') {\n            connection.setSocketTimeout(workItem.socketTimeout);\n          }\n\n          // Capture if write was successful\n          var writeSuccessful = true;\n\n          // Put operation on the wire\n          if (Array.isArray(buffer)) {\n            for (i = 0; i < buffer.length; i++) {\n              writeSuccessful = connection.write(buffer[i]);\n            }\n          } else {\n            writeSuccessful = connection.write(buffer);\n          }\n\n          // if the command is designated noResponse, call the callback immeditely\n          if (workItem.noResponse && typeof workItem.cb === 'function') {\n            workItem.cb(null, null);\n          }\n\n          if (writeSuccessful && workItem.immediateRelease && self.authenticating) {\n            removeConnection(self, connection);\n            self.nonAuthenticatedConnections.push(connection);\n          } else if (writeSuccessful === false) {\n            // If write not successful put back on queue\n            self.queue.unshift(workItem);\n            // Remove the disconnected connection\n            removeConnection(self, connection);\n            // Flush any monitoring operations in the queue, failing fast\n            flushMonitoringOperations(self.queue);\n          }\n        } else {\n          // Remove the disconnected connection\n          removeConnection(self, connection);\n          // Flush any monitoring operations in the queue, failing fast\n          flushMonitoringOperations(self.queue);\n        }\n      }\n    });\n\n    self.executing = false;\n  };\n}\n\n// Make execution loop available for testing\nPool._execute = _execute;\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Pool#connect\n * @type {Pool}\n */\n\n/**\n * A server reconnect event, used to verify that pool reconnected.\n *\n * @event Pool#reconnect\n * @type {Pool}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Pool#close\n * @type {Pool}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Pool#error\n * @type {Pool}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Pool#timeout\n * @type {Pool}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Pool#parseError\n * @type {Pool}\n */\n\n/**\n * The driver attempted to reconnect\n *\n * @event Pool#attemptReconnect\n * @type {Pool}\n */\n\n/**\n * The driver exhausted all reconnect attempts\n *\n * @event Pool#reconnectFailed\n * @type {Pool}\n */\n\nmodule.exports = Pool;\n","'use strict';\n\nvar f = require('util').format,\n  require_optional = require('require_optional');\n\n// Set property function\nvar setProperty = function(obj, prop, flag, values) {\n  Object.defineProperty(obj, prop.name, {\n    enumerable: true,\n    set: function(value) {\n      if (typeof value !== 'boolean') throw new Error(f('%s required a boolean', prop.name));\n      // Flip the bit to 1\n      if (value === true) values.flags |= flag;\n      // Flip the bit to 0 if it's set, otherwise ignore\n      if (value === false && (values.flags & flag) === flag) values.flags ^= flag;\n      prop.value = value;\n    },\n    get: function() {\n      return prop.value;\n    }\n  });\n};\n\n// Set property function\nvar getProperty = function(obj, propName, fieldName, values, func) {\n  Object.defineProperty(obj, propName, {\n    enumerable: true,\n    get: function() {\n      // Not parsed yet, parse it\n      if (values[fieldName] == null && obj.isParsed && !obj.isParsed()) {\n        obj.parse();\n      }\n\n      // Do we have a post processing function\n      if (typeof func === 'function') return func(values[fieldName]);\n      // Return raw value\n      return values[fieldName];\n    }\n  });\n};\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\n// Shallow copy\nvar copy = function(fObj, tObj) {\n  tObj = tObj || {};\n  for (var name in fObj) tObj[name] = fObj[name];\n  return tObj;\n};\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n};\n\nvar retrieveBSON = function() {\n  var BSON = require('bson');\n  BSON.native = false;\n\n  try {\n    var optionalBSON = require_optional('bson-ext');\n    if (optionalBSON) {\n      optionalBSON.native = true;\n      return optionalBSON;\n    }\n  } catch (err) {} // eslint-disable-line\n\n  return BSON;\n};\n\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\nvar noSnappyWarning = function() {\n  throw new Error(\n    'Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.'\n  );\n};\n\n// Facilitate loading Snappy optionally\nvar retrieveSnappy = function() {\n  var snappy = null;\n  try {\n    snappy = require_optional('snappy');\n  } catch (error) {} // eslint-disable-line\n  if (!snappy) {\n    snappy = {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n  return snappy;\n};\n\nexports.setProperty = setProperty;\nexports.getProperty = getProperty;\nexports.getSingleProperty = getSingleProperty;\nexports.copy = copy;\nexports.debugOptions = debugOptions;\nexports.retrieveBSON = retrieveBSON;\nexports.retrieveSnappy = retrieveSnappy;\n","'use strict';\n\nvar Logger = require('./connection/logger'),\n  retrieveBSON = require('./connection/utils').retrieveBSON,\n  MongoError = require('./error').MongoError,\n  MongoNetworkError = require('./error').MongoNetworkError,\n  f = require('util').format;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\n/**\n * This is a cursor results callback\n *\n * @callback resultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {object} document\n */\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query.\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * var Server = require('mongodb-core').Server\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Server({host: 'localhost', port: 27017});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   assert.equal(null, err);\n *\n *   // Execute the write\n *   var cursor = _server.cursor('integration_tests.inserts_example4', {\n *       find: 'integration_tests.example4'\n *     , query: {a:1}\n *   }, {\n *     readPreference: new ReadPreference('secondary');\n *   });\n *\n *   // Get the first document\n *   cursor.next(function(err, doc) {\n *     assert.equal(null, err);\n *     server.destroy();\n *   });\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\n/**\n * Creates a new Cursor, not to be used directly\n * @class\n * @param {object} bson An instance of the BSON parser\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|Long} cmd The selector (can be a command or a cursorId)\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.batchSize=1000] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {object} [options.transforms=null] Transform methods for the cursor results\n * @param {function} [options.transforms.query] Transform the value returned from the initial query\n * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next\n * @param {object} topology The server topology instance.\n * @param {object} topologyOptions The server topology options.\n * @return {Cursor} A cursor instance\n * @property {number} cursorBatchSize The current cursorBatchSize for the cursor\n * @property {number} cursorLimit The current cursorLimit for the cursor\n * @property {number} cursorSkip The current cursorSkip for the cursor\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  options = options || {};\n\n  // Cursor pool\n  this.pool = null;\n  // Cursor server\n  this.server = null;\n\n  // Do we have a not connected handler\n  this.disconnectHandler = options.disconnectHandler;\n\n  // Set local values\n  this.bson = bson;\n  this.ns = ns;\n  this.cmd = cmd;\n  this.options = options;\n  this.topology = topology;\n\n  // All internal state\n  this.cursorState = {\n    cursorId: null,\n    cmd: cmd,\n    documents: options.documents || [],\n    cursorIndex: 0,\n    dead: false,\n    killed: false,\n    init: false,\n    notified: false,\n    limit: options.limit || cmd.limit || 0,\n    skip: options.skip || cmd.skip || 0,\n    batchSize: options.batchSize || cmd.batchSize || 1000,\n    currentLimit: 0,\n    // Result field name if not a cursor (contains the array of results)\n    transforms: options.transforms\n  };\n\n  // Add promoteLong to cursor state\n  if (typeof topologyOptions.promoteLongs === 'boolean') {\n    this.cursorState.promoteLongs = topologyOptions.promoteLongs;\n  } else if (typeof options.promoteLongs === 'boolean') {\n    this.cursorState.promoteLongs = options.promoteLongs;\n  } else if (typeof options.session === 'object') {\n    this.cursorState.session = options.session;\n  }\n\n  // Add promoteValues to cursor state\n  if (typeof topologyOptions.promoteValues === 'boolean') {\n    this.cursorState.promoteValues = topologyOptions.promoteValues;\n  } else if (typeof options.promoteValues === 'boolean') {\n    this.cursorState.promoteValues = options.promoteValues;\n  }\n\n  // Add promoteBuffers to cursor state\n  if (typeof topologyOptions.promoteBuffers === 'boolean') {\n    this.cursorState.promoteBuffers = topologyOptions.promoteBuffers;\n  } else if (typeof options.promoteBuffers === 'boolean') {\n    this.cursorState.promoteBuffers = options.promoteBuffers;\n  }\n\n  if (topologyOptions.reconnect) {\n    this.cursorState.reconnect = topologyOptions.reconnect;\n  }\n\n  // Logger\n  this.logger = Logger('Cursor', topologyOptions);\n\n  //\n  // Did we pass in a cursor id\n  if (typeof cmd === 'number') {\n    this.cursorState.cursorId = Long.fromNumber(cmd);\n    this.cursorState.lastCursorId = this.cursorState.cursorId;\n  } else if (cmd instanceof Long) {\n    this.cursorState.cursorId = cmd;\n    this.cursorState.lastCursorId = cmd;\n  }\n};\n\nCursor.prototype.setCursorBatchSize = function(value) {\n  this.cursorState.batchSize = value;\n};\n\nCursor.prototype.cursorBatchSize = function() {\n  return this.cursorState.batchSize;\n};\n\nCursor.prototype.setCursorLimit = function(value) {\n  this.cursorState.limit = value;\n};\n\nCursor.prototype.cursorLimit = function() {\n  return this.cursorState.limit;\n};\n\nCursor.prototype.setCursorSkip = function(value) {\n  this.cursorState.skip = value;\n};\n\nCursor.prototype.cursorSkip = function() {\n  return this.cursorState.skip;\n};\n\nCursor.prototype._endSession = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  const session = this.cursorState.session;\n\n  if (session && (options.force || session.owner === this)) {\n    this.cursorState.session = undefined;\n    session.endSession(callback);\n    return true;\n  }\n\n  if (callback) {\n    callback();\n  }\n  return false;\n};\n\n//\n// Handle callback (including any exceptions thrown)\nvar handleCallback = function(callback, err, result) {\n  try {\n    callback(err, result);\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n  }\n};\n\n// Internal methods\nCursor.prototype._find = function(callback) {\n  var self = this;\n\n  if (self.logger.isDebug()) {\n    self.logger.debug(\n      f(\n        'issue initial query [%s] with flags [%s]',\n        JSON.stringify(self.cmd),\n        JSON.stringify(self.query)\n      )\n    );\n  }\n\n  var queryCallback = function(err, r) {\n    if (err) return callback(err);\n\n    // Get the raw message\n    var result = r.message;\n\n    // Query failure bit set\n    if (result.queryFailure) {\n      return callback(new MongoError(result.documents[0]), null);\n    }\n\n    // Check if we have a command cursor\n    if (\n      Array.isArray(result.documents) &&\n      result.documents.length === 1 &&\n      (!self.cmd.find || (self.cmd.find && self.cmd.virtual === false)) &&\n      (result.documents[0].cursor !== 'string' ||\n        result.documents[0]['$err'] ||\n        result.documents[0]['errmsg'] ||\n        Array.isArray(result.documents[0].result))\n    ) {\n      // We have a an error document return the error\n      if (result.documents[0]['$err'] || result.documents[0]['errmsg']) {\n        return callback(new MongoError(result.documents[0]), null);\n      }\n\n      // We have a cursor document\n      if (result.documents[0].cursor != null && typeof result.documents[0].cursor !== 'string') {\n        var id = result.documents[0].cursor.id;\n        // If we have a namespace change set the new namespace for getmores\n        if (result.documents[0].cursor.ns) {\n          self.ns = result.documents[0].cursor.ns;\n        }\n        // Promote id to long if needed\n        self.cursorState.cursorId = typeof id === 'number' ? Long.fromNumber(id) : id;\n        self.cursorState.lastCursorId = self.cursorState.cursorId;\n        // If we have a firstBatch set it\n        if (Array.isArray(result.documents[0].cursor.firstBatch)) {\n          self.cursorState.documents = result.documents[0].cursor.firstBatch; //.reverse();\n        }\n\n        // Return after processing command cursor\n        return callback(null, result);\n      }\n\n      if (Array.isArray(result.documents[0].result)) {\n        self.cursorState.documents = result.documents[0].result;\n        self.cursorState.cursorId = Long.ZERO;\n        return callback(null, result);\n      }\n    }\n\n    // Otherwise fall back to regular find path\n    self.cursorState.cursorId = result.cursorId;\n    self.cursorState.documents = result.documents;\n    self.cursorState.lastCursorId = result.cursorId;\n\n    // Transform the results with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.query === 'function') {\n      self.cursorState.documents = self.cursorState.transforms.query(result);\n    }\n\n    // Return callback\n    callback(null, result);\n  };\n\n  // Options passed to the pool\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (self.options.raw || self.cmd.raw) {\n    // queryCallback.raw = self.options.raw || self.cmd.raw;\n    queryOptions.raw = self.options.raw || self.cmd.raw;\n  }\n\n  // Do we have documentsReturnedIn set on the query\n  if (typeof self.query.documentsReturnedIn === 'string') {\n    // queryCallback.documentsReturnedIn = self.query.documentsReturnedIn;\n    queryOptions.documentsReturnedIn = self.query.documentsReturnedIn;\n  }\n\n  // Add promote Long value if defined\n  if (typeof self.cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = self.cursorState.promoteLongs;\n  }\n\n  // Add promote values if defined\n  if (typeof self.cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = self.cursorState.promoteValues;\n  }\n\n  // Add promote values if defined\n  if (typeof self.cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = self.cursorState.promoteBuffers;\n  }\n\n  if (typeof self.cursorState.session === 'object') {\n    queryOptions.session = self.cursorState.session;\n  }\n\n  // Write the initial command out\n  self.server.s.pool.write(self.query, queryOptions, queryCallback);\n};\n\nCursor.prototype._getmore = function(callback) {\n  if (this.logger.isDebug())\n    this.logger.debug(f('schedule getMore call for query [%s]', JSON.stringify(this.query)));\n  // Determine if it's a raw query\n  var raw = this.options.raw || this.cmd.raw;\n\n  // Set the current batchSize\n  var batchSize = this.cursorState.batchSize;\n  if (\n    this.cursorState.limit > 0 &&\n    this.cursorState.currentLimit + batchSize > this.cursorState.limit\n  ) {\n    batchSize = this.cursorState.limit - this.cursorState.currentLimit;\n  }\n\n  // Default pool\n  var pool = this.server.s.pool;\n\n  // We have a wire protocol handler\n  this.server.wireProtocolHandler.getMore(\n    this.bson,\n    this.ns,\n    this.cursorState,\n    batchSize,\n    raw,\n    pool,\n    this.options,\n    callback\n  );\n};\n\n/**\n * Clone the cursor\n * @method\n * @return {Cursor}\n */\nCursor.prototype.clone = function() {\n  return this.topology.cursor(this.ns, this.cmd, this.options);\n};\n\n/**\n * Checks if the cursor is dead\n * @method\n * @return {boolean} A boolean signifying if the cursor is dead or not\n */\nCursor.prototype.isDead = function() {\n  return this.cursorState.dead === true;\n};\n\n/**\n * Checks if the cursor was killed by the application\n * @method\n * @return {boolean} A boolean signifying if the cursor was killed by the application\n */\nCursor.prototype.isKilled = function() {\n  return this.cursorState.killed === true;\n};\n\n/**\n * Checks if the cursor notified it's caller about it's death\n * @method\n * @return {boolean} A boolean signifying if the cursor notified the callback\n */\nCursor.prototype.isNotified = function() {\n  return this.cursorState.notified === true;\n};\n\n/**\n * Returns current buffered documents length\n * @method\n * @return {number} The number of items in the buffered documents\n */\nCursor.prototype.bufferedCount = function() {\n  return this.cursorState.documents.length - this.cursorState.cursorIndex;\n};\n\n/**\n * Returns current buffered documents\n * @method\n * @return {Array} An array of buffered documents\n */\nCursor.prototype.readBufferedDocuments = function(number) {\n  var unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;\n  var length = number < unreadDocumentsLength ? number : unreadDocumentsLength;\n  var elements = this.cursorState.documents.slice(\n    this.cursorState.cursorIndex,\n    this.cursorState.cursorIndex + length\n  );\n\n  // Transform the doc with passed in transformation method if provided\n  if (this.cursorState.transforms && typeof this.cursorState.transforms.doc === 'function') {\n    // Transform all the elements\n    for (var i = 0; i < elements.length; i++) {\n      elements[i] = this.cursorState.transforms.doc(elements[i]);\n    }\n  }\n\n  // Ensure we do not return any more documents than the limit imposed\n  // Just return the number of elements up to the limit\n  if (\n    this.cursorState.limit > 0 &&\n    this.cursorState.currentLimit + elements.length > this.cursorState.limit\n  ) {\n    elements = elements.slice(0, this.cursorState.limit - this.cursorState.currentLimit);\n    this.kill();\n  }\n\n  // Adjust current limit\n  this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;\n  this.cursorState.cursorIndex = this.cursorState.cursorIndex + elements.length;\n\n  // Return elements\n  return elements;\n};\n\n/**\n * Kill the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.kill = function(callback) {\n  // Set cursor to dead\n  this.cursorState.dead = true;\n  this.cursorState.killed = true;\n  // Remove documents\n  this.cursorState.documents = [];\n\n  // If no cursor id just return\n  if (\n    this.cursorState.cursorId == null ||\n    this.cursorState.cursorId.isZero() ||\n    this.cursorState.init === false\n  ) {\n    if (callback) callback(null, null);\n    return;\n  }\n\n  // Default pool\n  var pool = this.server.s.pool;\n  // Execute command\n  this.server.wireProtocolHandler.killCursor(this.bson, this.ns, this.cursorState, pool, callback);\n};\n\n/**\n * Resets the cursor\n * @method\n * @return {null}\n */\nCursor.prototype.rewind = function() {\n  if (this.cursorState.init) {\n    if (!this.cursorState.dead) {\n      this.kill();\n    }\n\n    this.cursorState.currentLimit = 0;\n    this.cursorState.init = false;\n    this.cursorState.dead = false;\n    this.cursorState.killed = false;\n    this.cursorState.notified = false;\n    this.cursorState.documents = [];\n    this.cursorState.cursorId = null;\n    this.cursorState.cursorIndex = 0;\n  }\n};\n\n/**\n * Validate if the pool is dead and return error\n */\nvar isConnectionDead = function(self, callback) {\n  if (self.pool && self.pool.isDestroyed()) {\n    self.cursorState.killed = true;\n    const err = new MongoNetworkError(\n      f('connection to host %s:%s was destroyed', self.pool.host, self.pool.port)\n    );\n    _setCursorNotifiedImpl(self, () => callback(err));\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor is dead but was not explicitly killed by user\n */\nvar isCursorDeadButNotkilled = function(self, callback) {\n  // Cursor is dead but not marked killed, return null\n  if (self.cursorState.dead && !self.cursorState.killed) {\n    self.cursorState.killed = true;\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor is dead and was killed by user\n */\nvar isCursorDeadAndKilled = function(self, callback) {\n  if (self.cursorState.dead && self.cursorState.killed) {\n    handleCallback(callback, new MongoError('cursor is dead'));\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor was killed by the user\n */\nvar isCursorKilled = function(self, callback) {\n  if (self.cursorState.killed) {\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Mark cursor as being dead and notified\n */\nvar setCursorDeadAndNotified = function(self, callback) {\n  self.cursorState.dead = true;\n  setCursorNotified(self, callback);\n};\n\n/**\n * Mark cursor as being notified\n */\nvar setCursorNotified = function(self, callback) {\n  _setCursorNotifiedImpl(self, () => handleCallback(callback, null, null));\n};\n\nvar _setCursorNotifiedImpl = function(self, callback) {\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n  if (self._endSession) {\n    return self._endSession(undefined, () => callback());\n  }\n  return callback();\n};\n\nvar nextFunction = function(self, callback) {\n  // We have notified about it\n  if (self.cursorState.notified) {\n    return callback(new Error('cursor is exhausted'));\n  }\n\n  // Cursor is killed return null\n  if (isCursorKilled(self, callback)) return;\n\n  // Cursor is dead but not marked killed, return null\n  if (isCursorDeadButNotkilled(self, callback)) return;\n\n  // We have a dead and killed cursor, attempting to call next should error\n  if (isCursorDeadAndKilled(self, callback)) return;\n\n  // We have just started the cursor\n  if (!self.cursorState.init) {\n    // Topology is not connected, save the call in the provided store to be\n    // Executed at some point when the handler deems it's reconnected\n    if (!self.topology.isConnected(self.options)) {\n      // Only need this for single server, because repl sets and mongos\n      // will always continue trying to reconnect\n      if (self.topology._type === 'server' && !self.topology.s.options.reconnect) {\n        // Reconnect is disabled, so we'll never reconnect\n        return callback(new MongoError('no connection available'));\n      }\n\n      if (self.disconnectHandler != null) {\n        if (self.topology.isDestroyed()) {\n          // Topology was destroyed, so don't try to wait for it to reconnect\n          return callback(new MongoError('Topology was destroyed'));\n        }\n\n        return self.disconnectHandler.addObjectAndMethod(\n          'cursor',\n          self,\n          'next',\n          [callback],\n          callback\n        );\n      }\n    }\n\n    try {\n      self.server = self.topology.getServer(self.options);\n    } catch (err) {\n      // Handle the error and add object to next method call\n      if (self.disconnectHandler != null) {\n        return self.disconnectHandler.addObjectAndMethod(\n          'cursor',\n          self,\n          'next',\n          [callback],\n          callback\n        );\n      }\n\n      // Otherwise return the error\n      return callback(err);\n    }\n\n    // Set as init\n    self.cursorState.init = true;\n\n    // Server does not support server\n    if (self.cmd && self.cmd.collation && self.server.ismaster.maxWireVersion < 5) {\n      return callback(new MongoError(f('server %s does not support collation', self.server.name)));\n    }\n\n    try {\n      self.query = self.server.wireProtocolHandler.command(\n        self.bson,\n        self.ns,\n        self.cmd,\n        self.cursorState,\n        self.topology,\n        self.options\n      );\n    } catch (err) {\n      return callback(err);\n    }\n  }\n\n  // If we don't have a cursorId execute the first query\n  if (self.cursorState.cursorId == null) {\n    // Check if pool is dead and return if not possible to\n    // execute the query against the db\n    if (isConnectionDead(self, callback)) return;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // query, cmd, options, cursorState, callback\n    self._find(function(err) {\n      if (err) return handleCallback(callback, err, null);\n\n      if (self.cursorState.cursorId && self.cursorState.cursorId.isZero() && self._endSession) {\n        self._endSession();\n      }\n\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cursorState.cursorId &&\n        self.cursorState.cursorId.isZero() &&\n        !self.cmd.tailable &&\n        !self.cmd.awaitData\n      ) {\n        return setCursorNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.limit > 0 &&\n    self.cursorState.currentLimit >= self.cursorState.limit\n  ) {\n    // Ensure we kill the cursor on the server\n    self.kill();\n    // Set cursor in dead and notified state\n    return setCursorDeadAndNotified(self, callback);\n  } else if (\n    self.cursorState.cursorIndex === self.cursorState.documents.length &&\n    !Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    // Ensure an empty cursor state\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // Check if connection is dead and return if not possible to\n    // execute a getmore on this connection\n    if (isConnectionDead(self, callback)) return;\n\n    // Execute the next get more\n    self._getmore(function(err, doc, connection) {\n      if (err) return handleCallback(callback, err);\n\n      if (self.cursorState.cursorId && self.cursorState.cursorId.isZero() && self._endSession) {\n        self._endSession();\n      }\n\n      // Save the returned connection to ensure all getMore's fire over the same connection\n      self.connection = connection;\n\n      // Tailable cursor getMore result, notify owner about it\n      // No attempt is made here to retry, this is left to the user of the\n      // core module to handle to keep core simple\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        // No more documents in the tailed cursor\n        return handleCallback(\n          callback,\n          new MongoError({\n            message: 'No more documents in tailed cursor',\n            tailable: self.cmd.tailable,\n            awaitData: self.cmd.awaitData\n          })\n        );\n      } else if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        !Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        return nextFunction(self, callback);\n      }\n\n      if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n        return setCursorDeadAndNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    self.cmd.tailable &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    return handleCallback(\n      callback,\n      new MongoError({\n        message: 'No more documents in tailed cursor',\n        tailable: self.cmd.tailable,\n        awaitData: self.cmd.awaitData\n      })\n    );\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    setCursorDeadAndNotified(self, callback);\n  } else {\n    if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      // Ensure we kill the cursor on the server\n      self.kill();\n      // Set cursor in dead and notified state\n      return setCursorDeadAndNotified(self, callback);\n    }\n\n    // Increment the current cursor limit\n    self.cursorState.currentLimit += 1;\n\n    // Get the document\n    var doc = self.cursorState.documents[self.cursorState.cursorIndex++];\n\n    // Doc overflow\n    if (!doc || doc.$err) {\n      // Ensure we kill the cursor on the server\n      self.kill();\n      // Set cursor in dead and notified state\n      return setCursorDeadAndNotified(self, function() {\n        handleCallback(callback, new MongoError(doc ? doc.$err : undefined));\n      });\n    }\n\n    // Transform the doc with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.doc === 'function') {\n      doc = self.cursorState.transforms.doc(doc);\n    }\n\n    // Return the document\n    handleCallback(callback, null, doc);\n  }\n};\n\n/**\n * Retrieve the next document from the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.next = function(callback) {\n  nextFunction(this, callback);\n};\n\nmodule.exports = Cursor;\n","'use strict';\n\nvar util = require('util');\n\n/**\n * Creates a new MongoError\n * @class\n * @augments Error\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoError} A MongoError instance\n */\nfunction MongoError(message) {\n  var tmp = Error.apply(this, arguments);\n  tmp.name = this.name = 'MongoError';\n\n  if (message instanceof Error) {\n    this.message = message.message;\n    this.stack = message.stack;\n  } else {\n    if (typeof message === 'string') {\n      this.message = message;\n    } else {\n      this.message = message.message || message.errmsg || message.$err || 'n/a';\n      for (var name in message) {\n        this[name] = message[name];\n      }\n    }\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\nutil.inherits(MongoError, Error);\n\n/**\n * Creates a new MongoError object\n * @method\n * @param {Error|string|object} options The options used to create the error.\n * @return {MongoError} A MongoError instance\n * @deprecated Use `new MongoError()` instead.\n */\nMongoError.create = function(options) {\n  return new MongoError(options);\n};\n\n/**\n * Creates a new MongoNetworkError\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoNetworkError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nvar MongoNetworkError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoNetworkError';\n};\nutil.inherits(MongoNetworkError, MongoError);\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @return {MongoParseError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nconst MongoParseError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoParseError';\n};\nutil.inherits(MongoParseError, MongoError);\n\nmodule.exports = {\n  MongoError: MongoError,\n  MongoNetworkError: MongoNetworkError,\n  MongoParseError: MongoParseError\n};\n","'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/** A class representing a client session on the server */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology\n   * @param {ServerSessionPool} sessionPool The server session pool\n   * @param {Object} [options] Optional settings\n   * @param {Boolean} [options.causalConsistency] Whether causal consistency should be enabled on this session\n   * @param {Boolean} [options.autoStartTransaction=false] When enabled this session automatically starts a transaction with the provided defaultTransactionOptions.\n   * @param {Object} [options.defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.transactionOptions = null;\n    this.autoStartTransaction = options.autoStartTransaction;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {object} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * Increment the statement id on the internal ServerSession\n   *\n   * @param {Number} [operationCount] the number of operations performed\n   */\n  incrementStatementId(operationCount) {\n    operationCount = operationCount || 1;\n    this.serverSession.stmtId += operationCount;\n  }\n\n  /**\n   * @returns whether this session is current in a transaction or not\n   */\n  inTransaction() {\n    return this.transactionOptions != null;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {Object} options Optional settings\n   * @param {ReadConcern} [options.readConcern] The readConcern to use for this transaction\n   * @param {WriteConcern} [options.writeConcern] The writeConcern to use for this transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber and reset stmtId to zero.\n    this.serverSession.txnNumber += 1;\n    this.serverSession.stmtId = 0;\n\n    // set transaction options, we will use this to determine if we are in a transaction\n    this.transactionOptions = Object.assign({}, options || this.defaultTransactionOptions);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n}\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_ERROR_CODES = new Set([\n  6, // HostUnreachable\n  7, // HostNotFound\n  64, // WriteConcernFailed\n  89, // NetworkTimeout\n  91, // ShutdownInProgress\n  189, // PrimarySteppedDown\n  9001, // SocketException\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  10107, // NotMaster\n  13435, // NotMasterNoSlaveOk\n  13436 // NotMasterOrSecondary\n]);\n\nfunction isRetryableError(error) {\n  if (\n    RETRYABLE_ERROR_CODES.has(error.code) ||\n    error instanceof MongoNetworkError ||\n    error.message.match(/not master/) ||\n    error.message.match(/node is recovering/)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction resetTransactionState(clientSession) {\n  clientSession.transactionOptions = null;\n}\n\nfunction endTransaction(clientSession, commandName, callback) {\n  if (!assertAlive(clientSession, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  if (!clientSession.inTransaction()) {\n    if (clientSession.autoStartTransaction) {\n      clientSession.startTransaction();\n    } else {\n      callback(new MongoError('No transaction started'));\n      return;\n    }\n  }\n\n  if (clientSession.serverSession.stmtId === 0) {\n    // The server transaction was never started.\n    resetTransactionState(clientSession);\n    callback(null, null);\n    return;\n  }\n\n  const command = { [commandName]: 1 };\n  if (clientSession.transactionOptions.writeConcern) {\n    Object.assign(command, { writeConcern: clientSession.transactionOptions.writeConcern });\n  } else if (clientSession.clientOptions && clientSession.clientOptions.w) {\n    Object.assign(command, { writeConcern: { w: clientSession.clientOptions.w } });\n  }\n\n  function commandHandler(e, r) {\n    resetTransactionState(clientSession);\n    callback(e, r);\n  }\n\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  // send the command\n  clientSession.topology.command(\n    'admin.$cmd',\n    command,\n    { session: clientSession },\n    (err, reply) => {\n      if (err && isRetryableError(err)) {\n        return clientSession.topology.command(\n          'admin.$cmd',\n          command,\n          { session: clientSession },\n          (_err, _reply) => commandHandler(transactionError(_err), _reply)\n        );\n      }\n\n      commandHandler(transactionError(err), reply);\n    }\n  );\n}\n\nObject.defineProperty(ClientSession.prototype, 'id', {\n  get: function() {\n    return this.serverSession.id;\n  }\n});\n\n/**\n *\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   *\n   * @param {*} sessionTimeoutMinutes\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n *\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   *\n   * @param {*} session\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\nmodule.exports = {\n  ClientSession: ClientSession,\n  ServerSession: ServerSession,\n  ServerSessionPool: ServerSessionPool\n};\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst BasicCursor = require('../cursor');\nconst Logger = require('../connection/logger');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst errors = require('../error');\nconst Server = require('./server');\nconst clone = require('./shared').clone;\nconst diff = require('./shared').diff;\nconst cloneOptions = require('./shared').cloneOptions;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('./shared').relayEvents;\nconst BSON = retrieveBSON();\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * @example\n * var Mongos = require('mongodb-core').Mongos\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Mongos([{host: 'localhost', port: 30000}]);\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Mongos} A cursor instance\n * @fires Mongos#connect\n * @fires Mongos#reconnect\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#failed\n * @fires Mongos#fullsetup\n * @fires Mongos#all\n * @fires Mongos#serverHeartbeatStarted\n * @fires Mongos#serverHeartbeatSucceeded\n * @fires Mongos#serverHeartbeatFailed\n * @fires Mongos#topologyOpening\n * @fires Mongos#topologyClosed\n * @fires Mongos#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Mongos = function(seedlist, options) {\n  options = options || {};\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: Logger('Mongos', options),\n    // Seedlist\n    seedlist: seedlist,\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // localThresholdMS\n    localThresholdMS: options.localThresholdMS || 15,\n    // Client info\n    clientInfo: createClientInfo(options),\n    // Authentication context\n    authenticationContexts: []\n  };\n\n  // Set the client info\n  this.s.options.clientInfo = createClientInfo(options);\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(this.s.bson);\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n\n  // Current proxies we are connecting to\n  this.connectingProxies = [];\n  // Currently connected proxies\n  this.connectedProxies = [];\n  // Disconnected proxies\n  this.disconnectedProxies = [];\n  // Are we authenticating\n  this.authenticating = false;\n  // Index of proxy to run operations against\n  this.index = 0;\n  // High availability timeout id\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n\n  // Description of the Replicaset\n  this.topologyDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n\n  // Add event listener\n  EventEmitter.call(this);\n};\n\ninherits(Mongos, EventEmitter);\nObject.assign(Mongos.prototype, SessionMixins);\n\nObject.defineProperty(Mongos.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'mongos';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nMongos.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, {\n        authProviders: self.authProviders,\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n  });\n\n  const serverDescriptionChangedCallback = event => {\n    self.emit('serverDescriptionChanged', event);\n  };\n\n  servers.forEach(function(server) {\n    server.on('serverDescriptionChanged', serverDescriptionChangedCallback);\n    server.on('destroy', () =>\n      server.removeListener('serverDescriptionChanged', serverDescriptionChangedCallback)\n    );\n  });\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n\n  // Start all server connections\n  connectProxies(self, servers);\n};\n\nfunction handleEvent(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Move to list of disconnectedProxies\n    moveServerFrom(self.connectedProxies, self.disconnectedProxies, this);\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n    // Emit the left signal\n    self.emit('left', 'mongos', this);\n    // Emit the sdam event\n    self.emit('serverClosed', {\n      topologyId: self.id,\n      address: this.name\n    });\n  };\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n\n    // Destroy the instance\n    if (self.state === DESTROYED) {\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n      // Move from connectingProxies\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      return this.destroy();\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Do we have authentication contexts that need to be applied\n      applyAuthenticationContexts(self, _this, function() {\n        // Get last known ismaster\n        self.ismaster = _this.lastIsMaster();\n\n        // Is this not a proxy, remove t\n        if (self.ismaster.msg === 'isdbgrid') {\n          // Add to the connectd list\n          for (var i = 0; i < self.connectedProxies.length; i++) {\n            if (self.connectedProxies[i].name === _this.name) {\n              // Move from connectingProxies\n              moveServerFrom(self.connectingProxies, self.disconnectedProxies, _this);\n              // Emit the initial topology\n              emitTopologyDescriptionChanged(self);\n              _this.destroy();\n              return self.emit('failed', _this);\n            }\n          }\n\n          // Remove the handlers\n          for (i = 0; i < handlers.length; i++) {\n            _this.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _this.on('error', handleEvent(self, 'error'));\n          _this.on('close', handleEvent(self, 'close'));\n          _this.on('timeout', handleEvent(self, 'timeout'));\n          _this.on('parseError', handleEvent(self, 'parseError'));\n\n          // Move from connecting proxies connected\n          moveServerFrom(self.connectingProxies, self.connectedProxies, _this);\n          // Emit the joined event\n          self.emit('joined', 'mongos', _this);\n        } else {\n          // Print warning if we did not find a mongos proxy\n          if (self.s.logger.isWarn()) {\n            var message = 'expected mongos proxy, but found replicaset member mongod for server %s';\n            // We have a standalone server\n            if (!self.ismaster.hosts) {\n              message = 'expected mongos proxy, but found standalone mongod for server %s';\n            }\n\n            self.s.logger.warn(f(message, _this.name));\n          }\n\n          // This is not a mongos proxy, remove it completely\n          removeProxyFrom(self.connectingProxies, _this);\n          // Emit the left event\n          self.emit('left', 'server', _this);\n          // Emit failed event\n          self.emit('failed', _this);\n        }\n      });\n    } else {\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      // Emit the left event\n      self.emit('left', 'mongos', this);\n      // Emit failed event\n      self.emit('failed', this);\n    }\n\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n\n    // Trigger topologyMonitor\n    if (self.connectingProxies.length === 0) {\n      // Emit connected if we are connected\n      if (self.connectedProxies.length > 0 && self.state === CONNECTING) {\n        // Set the state to connected\n        stateTransition(self, CONNECTED);\n        // Emit the connect event\n        self.emit('connect', self);\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      } else if (self.disconnectedProxies.length === 0) {\n        // Print warning if we did not find a mongos proxy\n        if (self.s.logger.isWarn()) {\n          self.s.logger.warn(\n            f('no mongos proxies found in seed list, did you mean to connect to a replicaset')\n          );\n        }\n\n        // Emit the error that no proxies were found\n        return self.emit('error', new MongoError('no mongos proxies found in seed list'));\n      }\n\n      // Topology monitor\n      topologyMonitor(self, { firstConnect: true });\n    }\n  };\n}\n\nfunction connectProxies(self, servers) {\n  // Update connectingProxies\n  self.connectingProxies = self.connectingProxies.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: self.id,\n        address: server.name\n      });\n\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\nfunction pickProxy(self) {\n  // Get the currently connected Proxies\n  var connectedProxies = self.connectedProxies.slice(0);\n\n  // Set lower bound\n  var lowerBoundLatency = Number.MAX_VALUE;\n\n  // Determine the lower bound for the Proxies\n  for (var i = 0; i < connectedProxies.length; i++) {\n    if (connectedProxies[i].lastIsMasterMS < lowerBoundLatency) {\n      lowerBoundLatency = connectedProxies[i].lastIsMasterMS;\n    }\n  }\n\n  // Filter out the possible servers\n  connectedProxies = connectedProxies.filter(function(server) {\n    if (\n      server.lastIsMasterMS <= lowerBoundLatency + self.s.localThresholdMS &&\n      server.isConnected()\n    ) {\n      return true;\n    }\n  });\n\n  // We have no connectedProxies pick first of the connected ones\n  if (connectedProxies.length === 0) {\n    return self.connectedProxies[0];\n  }\n\n  // Get proxy\n  var proxy = connectedProxies[self.index % connectedProxies.length];\n  // Update the index\n  self.index = (self.index + 1) % connectedProxies.length;\n  // Return the proxy\n  return proxy;\n}\n\nfunction moveServerFrom(from, to, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n\n  for (i = 0; i < to.length; i++) {\n    if (to[i].name === proxy.name) {\n      to.splice(i, 1);\n    }\n  }\n\n  to.push(proxy);\n}\n\nfunction removeProxyFrom(from, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n}\n\nfunction reconnectProxies(self, proxies, callback) {\n  // Count lefts\n  var count = proxies.length;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function() {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        // Return destroy\n        return this.destroy();\n      }\n\n      if (event === 'connect' && !self.authenticating) {\n        // Do we have authentication contexts that need to be applied\n        applyAuthenticationContexts(self, _self, function() {\n          // Destroyed\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n            return _self.destroy();\n          }\n\n          // Remove the handlers\n          for (var i = 0; i < handlers.length; i++) {\n            _self.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _self.on('error', handleEvent(self, 'error'));\n          _self.on('close', handleEvent(self, 'close'));\n          _self.on('timeout', handleEvent(self, 'timeout'));\n          _self.on('parseError', handleEvent(self, 'parseError'));\n\n          // Move to the connected servers\n          moveServerFrom(self.disconnectedProxies, self.connectedProxies, _self);\n          // Emit topology Change\n          emitTopologyDescriptionChanged(self);\n          // Emit joined event\n          self.emit('joined', 'mongos', _self);\n        });\n      } else if (event === 'connect' && self.authenticating) {\n        // Move from connectingProxies\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        this.destroy();\n      }\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback();\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) {\n    return callback();\n  }\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.name.split(':')[0],\n          port: parseInt(_server.name.split(':')[1], 10),\n          authProviders: self.authProviders,\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      // Relay the server description change\n      server.on('serverDescriptionChanged', function(event) {\n        self.emit('serverDescriptionChanged', event);\n      });\n\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: server.s.topologyId !== -1 ? server.s.topologyId : self.id,\n        address: server.name\n      });\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Connect to proxy\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < proxies.length; i++) {\n    execute(proxies[i], i);\n  }\n}\n\nfunction applyAuthenticationContexts(self, server, callback) {\n  if (self.s.authenticationContexts.length === 0) {\n    return callback();\n  }\n\n  // Copy contexts to ensure no modificiation in the middle of\n  // auth process.\n  var authContexts = self.s.authenticationContexts.slice(0);\n\n  // Apply one of the contexts\n  function applyAuth(authContexts, server, callback) {\n    if (authContexts.length === 0) return callback();\n    // Get the first auth context\n    var authContext = authContexts.shift();\n    // Copy the params\n    var customAuthContext = authContext.slice(0);\n    // Push our callback handler\n    customAuthContext.push(function(/* err */) {\n      applyAuth(authContexts, server, callback);\n    });\n\n    // Attempt authentication\n    server.auth.apply(server, customAuthContext);\n  }\n\n  // Apply all auth contexts\n  applyAuth(authContexts, server, callback);\n}\n\nfunction topologyMonitor(self, options) {\n  options = options || {};\n\n  // Set momitoring timeout\n  self.haTimeoutId = setTimeout(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // If we have a primary and a disconnect handler, execute\n    // buffered operations\n    if (self.isConnected() && self.s.disconnectHandler) {\n      self.s.disconnectHandler.execute();\n    }\n\n    // Get the connectingServers\n    var proxies = self.connectedProxies.slice(0);\n    // Get the count\n    var count = proxies.length;\n\n    // If the count is zero schedule a new fast\n    function pingServer(_self, _server, cb) {\n      // Measure running time\n      var start = new Date().getTime();\n\n      // Emit the server heartbeat start\n      emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: _server.name });\n\n      // Execute ismaster\n      _server.command(\n        'admin.$cmd',\n        {\n          ismaster: true\n        },\n        {\n          monitoring: true,\n          socketTimeout: self.s.options.connectionTimeout || 2000\n        },\n        function(err, r) {\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            // Move from connectingProxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n            _server.destroy();\n            return cb(err, r);\n          }\n\n          // Calculate latency\n          var latencyMS = new Date().getTime() - start;\n\n          // We had an error, remove it from the state\n          if (err) {\n            // Emit the server heartbeat failure\n            emitSDAMEvent(self, 'serverHeartbeatFailed', {\n              durationMS: latencyMS,\n              failure: err,\n              connectionId: _server.name\n            });\n            // Move from connected proxies to disconnected proxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n          } else {\n            // Update the server ismaster\n            _server.ismaster = r.result;\n            _server.lastIsMasterMS = latencyMS;\n\n            // Server heart beat event\n            emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n              durationMS: latencyMS,\n              reply: r.result,\n              connectionId: _server.name\n            });\n          }\n\n          cb(err, r);\n        }\n      );\n    }\n\n    // No proxies initiate monitor again\n    if (proxies.length === 0) {\n      // Emit close event if any listeners registered\n      if (self.listeners('close').length > 0 && self.state === CONNECTING) {\n        self.emit('error', new MongoError('no mongos proxy available'));\n      } else {\n        self.emit('close', self);\n      }\n\n      // Attempt to connect to any unknown servers\n      return reconnectProxies(self, self.disconnectedProxies, function() {\n        if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n        // Are we connected ? emit connect event\n        if (self.state === CONNECTING && options.firstConnect) {\n          self.emit('connect', self);\n          self.emit('fullsetup', self);\n          self.emit('all', self);\n        } else if (self.isConnected()) {\n          self.emit('reconnect', self);\n        } else if (!self.isConnected() && self.listeners('close').length > 0) {\n          self.emit('close', self);\n        }\n\n        // Perform topology monitor\n        topologyMonitor(self);\n      });\n    }\n\n    // Ping all servers\n    for (var i = 0; i < proxies.length; i++) {\n      pingServer(self, proxies[i], function() {\n        count = count - 1;\n\n        if (count === 0) {\n          if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n          // Attempt to connect to any unknown servers\n          reconnectProxies(self, self.disconnectedProxies, function() {\n            if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n            // Perform topology monitor\n            topologyMonitor(self);\n          });\n        }\n      });\n    }\n  }, self.s.haInterval);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nMongos.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nMongos.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n  // Get all proxies\n  var proxies = this.connectedProxies.concat(this.connectingProxies);\n  proxies.forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nMongos.prototype.destroy = function(options) {\n  var self = this;\n  // Transition state\n  stateTransition(this, DESTROYED);\n  // Get all proxies\n  var proxies = this.connectedProxies.concat(this.connectingProxies);\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n  // Clear out authentication contexts\n  this.s.authenticationContexts = [];\n\n  // Destroy all connecting servers\n  proxies.forEach(function(x) {\n    // Emit the sdam event\n    self.emit('serverClosed', {\n      topologyId: self.id,\n      address: x.name\n    });\n\n    // Destroy the server\n    x.destroy(options);\n    // Move to list of disconnectedProxies\n    moveServerFrom(self.connectedProxies, self.disconnectedProxies, x);\n  });\n  // Emit the final topology change\n  emitTopologyDescriptionChanged(self);\n  // Emit toplogy closing event\n  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nMongos.prototype.isConnected = function() {\n  return this.connectedProxies.length > 0;\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nMongos.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n//\n// Operations\n//\n\n// Execute write operation\nvar executeWriteOperation = function(self, op, ns, ops, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Pick a server\n  let server = pickProxy(self);\n  // No server found error out\n  if (!server) return callback(new MongoError('no mongos proxy available'));\n\n  if (!options.retryWrites || !options.session || !isRetryableWritesSupported(self)) {\n    // Execute the command\n    return server[op](ns, ops, options, callback);\n  }\n\n  // increment and assign txnNumber\n  options.willRetryWrite = true;\n  options.session.incrementTransactionNumber();\n\n  server[op](ns, ops, options, (err, result) => {\n    if (!err) return callback(null, result);\n    if (!(err instanceof errors.MongoNetworkError) && !err.message.match(/not master/)) {\n      return callback(err);\n    }\n\n    // Pick another server\n    server = pickProxy(self);\n\n    // No server found error out with original error\n    if (!server || !isRetryableWritesSupported(server)) {\n      return callback(err);\n    }\n\n    // rerun the operation\n    server[op](ns, ops, options, callback);\n  });\n};\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.insert = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'insert', ns, ops, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.update = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'update', ns, ops, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.remove = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'remove', ns, ops, options, callback);\n};\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Pick a proxy\n  var server = pickProxy(self);\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if ((server == null || !server.isConnected()) && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Cloned options\n  var clonedOptions = cloneOptions(options);\n  clonedOptions.topology = self;\n\n  // Execute the command\n  server.command(ns, cmd, clonedOptions, callback);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nMongos.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n  var currentContextIndex = 0;\n\n  // If we don't have the mechanism fail\n  if (this.authProviders[mechanism] == null && mechanism !== 'default') {\n    return callback(new MongoError(f('auth provider %s does not exist', mechanism)));\n  }\n\n  // Are we already authenticating, throw\n  if (this.authenticating) {\n    return callback(new MongoError('authentication or logout allready in process'));\n  }\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (!self.isConnected() && self.s.disconnectHandler != null) {\n    return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n  }\n\n  // Set to authenticating\n  this.authenticating = true;\n  // All errors\n  var errors = [];\n\n  // Get all the servers\n  var servers = this.connectedProxies.slice(0);\n  // No servers return\n  if (servers.length === 0) {\n    this.authenticating = false;\n    callback(null, true);\n  }\n\n  // Authenticate\n  function auth(server) {\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([\n      function(err) {\n        count = count - 1;\n        // Save all the errors\n        if (err) errors.push({ name: server.name, err: err });\n        // We are done\n        if (count === 0) {\n          // Auth is done\n          self.authenticating = false;\n\n          // Return the auth error\n          if (errors.length) {\n            // Remove the entry from the stored authentication contexts\n            self.s.authenticationContexts.splice(currentContextIndex, 0);\n            // Return error\n            return callback(\n              new MongoError({\n                message: 'authentication fail',\n                errors: errors\n              }),\n              false\n            );\n          }\n\n          // Successfully authenticated session\n          callback(null, self);\n        }\n      }\n    ]);\n\n    // Execute the auth only against non arbiter servers\n    if (!server.lastIsMaster().arbiterOnly) {\n      server.auth.apply(server, finalArguments);\n    }\n  }\n\n  // Save current context index\n  currentContextIndex = this.s.authenticationContexts.length;\n  // Store the auth context and return the last index\n  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));\n\n  // Get total count\n  var count = servers.length;\n  // Authenticate against all servers\n  while (servers.length > 0) {\n    auth(servers.shift());\n  }\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.logout = function(dbName, callback) {\n  var self = this;\n  // Are we authenticating or logging out, throw\n  if (this.authenticating) {\n    throw new MongoError('authentication or logout allready in process');\n  }\n\n  // Ensure no new members are processed while logging out\n  this.authenticating = true;\n\n  // Remove from all auth providers (avoid any reaplication of the auth details)\n  var providers = Object.keys(this.authProviders);\n  for (var i = 0; i < providers.length; i++) {\n    this.authProviders[providers[i]].logout(dbName);\n  }\n\n  // Now logout all the servers\n  var servers = this.connectedProxies.slice(0);\n  var count = servers.length;\n  if (count === 0) return callback();\n  var errors = [];\n\n  function logoutServer(_server, cb) {\n    _server.logout(dbName, function(err) {\n      if (err) errors.push({ name: _server.name, err: err });\n      cb();\n    });\n  }\n\n  // Execute logout on all server instances\n  for (i = 0; i < servers.length; i++) {\n    logoutServer(servers[i], function() {\n      count = count - 1;\n\n      if (count === 0) {\n        // Do not block new operations\n        self.authenticating = false;\n        // If we have one or more errors\n        if (errors.length)\n          return callback(\n            new MongoError({\n              message: f('logout failed against db %s', dbName),\n              errors: errors\n            }),\n            false\n          );\n\n        // No errors\n        callback();\n      }\n    });\n  }\n};\n\n/**\n * Get server\n * @method\n * @return {Server}\n */\nMongos.prototype.getServer = function() {\n  var server = pickProxy(this);\n  if (this.s.debug) this.emit('pickedServer', null, server);\n  return server;\n};\n\n/**\n * Get a direct connection\n * @method\n * @return {Connection}\n */\nMongos.prototype.getConnection = function() {\n  var server = this.getServer();\n  if (server) return server.getConnection();\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nMongos.prototype.connections = function() {\n  var connections = [];\n\n  for (var i = 0; i < this.connectedProxies.length; i++) {\n    connections = connections.concat(this.connectedProxies[i].connections());\n  }\n\n  return connections;\n};\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    if (self.connectedProxies.length > 0) {\n      topology = 'Sharded';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      servers: []\n    };\n\n    // All proxies\n    var proxies = self.disconnectedProxies.concat(self.connectingProxies);\n\n    // Add all the disconnected proxies\n    description.servers = description.servers.concat(\n      proxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Unknown';\n        return description;\n      })\n    );\n\n    // Add all the connected proxies\n    description.servers = description.servers.concat(\n      self.connectedProxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Mongos';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.topologyDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.topologyDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    if (diffResult.servers.length > 0) {\n      self.emit('topologyDescriptionChanged', result);\n    }\n\n    // Set the new description\n    self.topologyDescription = description;\n  }\n}\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * A mongos reconnect event, used to verify that the mongos topology has reconnected\n *\n * @event Mongos#reconnect\n * @type {Mongos}\n */\n\n/**\n * A mongos fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * A mongos all event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#all\n * @type {Mongos}\n */\n\n/**\n * A server member left the mongos list\n *\n * @event Mongos#left\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos list\n *\n * @event Mongos#joined\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Mongos#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Mongos#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Mongos#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Mongos#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Mongos#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Mongos#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event Mongos#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event Mongos#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event Mongos#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\n/**\n * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n *\n * @example\n * const ReplSet = require('mongodb-core').ReplSet,\n *   ReadPreference = require('mongodb-core').ReadPreference,\n *   assert = require('assert');\n *\n * const server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   const cursor = server.cursor(\n *     'db.test',\n *     { find: 'db.test', query: {} },\n *     { readPreference: new ReadPreference('secondary') }\n *   );\n *\n *   cursor.next(function(err, doc) {\n *     server.destroy();\n *   });\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} mode A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @param {array} tags The tags object\n * @param {object} [options] Additional read preference options\n * @param {number} [options.maxStalenessSeconds] Max secondary read staleness in seconds, Minimum value is 90 seconds.\n * @property {string} mode The read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @property {array} tags The tags object\n * @property {object} options Additional read preference options\n * @property {number} maxStalenessSeconds MaxStalenessSeconds value for the read preference\n * @return {ReadPreference}\n */\nconst ReadPreference = function(mode, tags, options) {\n  this.mode = mode;\n  this.tags = tags;\n  this.options = options;\n\n  // Add the maxStalenessSeconds value to the read Preference\n  if (this.options && this.options.maxStalenessSeconds != null) {\n    this.options = options;\n    this.maxStalenessSeconds =\n      this.options.maxStalenessSeconds >= 0 ? this.options.maxStalenessSeconds : null;\n  } else if (tags && typeof tags === 'object') {\n    (this.options = tags), (tags = null);\n  }\n};\n\n// Support the deprecated `preference` property introduced in the porcelain layer\nObject.defineProperty(ReadPreference.prototype, 'preference', {\n  enumerable: true,\n  get: function() {\n    return this.mode;\n  }\n});\n\n/**\n * Read preference mode constants\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest';\n\nconst VALID_MODES = [\n  ReadPreference.PRIMARY,\n  ReadPreference.PRIMARY_PREFERRED,\n  ReadPreference.SECONDARY,\n  ReadPreference.SECONDARY_PREFERRED,\n  ReadPreference.NEAREST,\n  true,\n  false,\n  null\n];\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean}\n */\nReadPreference.isValid = function(mode) {\n  return VALID_MODES.indexOf(mode) !== -1;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean}\n */\nReadPreference.prototype.isValid = function(mode) {\n  return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n};\n\nconst needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];\n\n/**\n * This needs slaveOk bit set\n * @method\n * @return {boolean}\n */\nReadPreference.prototype.slaveOk = function() {\n  return needSlaveOk.indexOf(this.mode) !== -1;\n};\n\n/**\n * Are the two read preference equal\n * @method\n * @return {boolean}\n */\nReadPreference.prototype.equals = function(readPreference) {\n  return readPreference.mode === this.mode;\n};\n\n/**\n * Return JSON representation\n * @method\n * @return {Object}\n */\nReadPreference.prototype.toJSON = function() {\n  const readPreference = { mode: this.mode };\n  if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n  if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n  return readPreference;\n};\n\n/**\n * Primary read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.primary = new ReadPreference('primary');\n/**\n * Primary Preferred read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');\n/**\n * Secondary read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.secondary = new ReadPreference('secondary');\n/**\n * Secondary Preferred read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');\n/**\n * Nearest read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.nearest = new ReadPreference('nearest');\n\nmodule.exports = ReadPreference;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst ReadPreference = require('./read_preference');\nconst BasicCursor = require('../cursor');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst Logger = require('../connection/logger');\nconst MongoError = require('../error').MongoError;\nconst errors = require('../error');\nconst Server = require('./server');\nconst ReplSetState = require('./replset_state');\nconst clone = require('./shared').clone;\nconst Timeout = require('./shared').Timeout;\nconst Interval = require('./shared').Interval;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('./shared').relayEvents;\n\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\n\nvar BSON = retrieveBSON();\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Replset instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {boolean} options.setName The Replicaset set name\n * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {ReplSet} A cursor instance\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#failed\n * @fires ReplSet#fullsetup\n * @fires ReplSet#all\n * @fires ReplSet#error\n * @fires ReplSet#serverHeartbeatStarted\n * @fires ReplSet#serverHeartbeatSucceeded\n * @fires ReplSet#serverHeartbeatFailed\n * @fires ReplSet#topologyOpening\n * @fires ReplSet#topologyClosed\n * @fires ReplSet#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar ReplSet = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Validate seedlist\n  if (!Array.isArray(seedlist)) throw new MongoError('seedlist must be an array');\n  // Validate list\n  if (seedlist.length === 0) throw new MongoError('seedlist must contain at least one entry');\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if (typeof e.host !== 'string' || typeof e.port !== 'number')\n      throw new MongoError('seedlist entry must contain a host and port');\n  });\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Get the localThresholdMS\n  var localThresholdMS = options.localThresholdMS || 15;\n  // Backward compatibility\n  if (options.acceptableLatency) localThresholdMS = options.acceptableLatency;\n\n  // Create a logger\n  var logger = Logger('ReplSet', options);\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: logger,\n    // Seedlist\n    seedlist: seedlist,\n    // Replicaset state\n    replicaSetState: new ReplSetState({\n      id: this.id,\n      setName: options.setName,\n      acceptableLatency: localThresholdMS,\n      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,\n      logger: logger\n    }),\n    // Current servers we are connecting to\n    connectingServers: [],\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Minimum heartbeat frequency used if we detect a server close\n    minHeartbeatFrequencyMS: 500,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // Client info\n    clientInfo: createClientInfo(options),\n    // Authentication context\n    authenticationContexts: []\n  };\n\n  // Add handler for topology change\n  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) {\n    self.emit('topologyDescriptionChanged', r);\n  });\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(this.s.bson);\n\n  // Add forwarding of events from state handler\n  var types = ['joined', 'left'];\n  types.forEach(function(x) {\n    self.s.replicaSetState.on(x, function(t, s) {\n      self.emit(x, t, s);\n    });\n  });\n\n  // Connect stat\n  this.initialConnectState = {\n    connect: false,\n    fullsetup: false,\n    all: false\n  };\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n  this.haTimeoutId = null;\n  // Are we authenticating\n  this.authenticating = false;\n  // Last ismaster\n  this.ismaster = null;\n  // Contains the intervalId\n  this.intervalIds = [];\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n};\n\ninherits(ReplSet, EventEmitter);\nObject.assign(ReplSet.prototype, SessionMixins);\n\nObject.defineProperty(ReplSet.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'replset';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.replicaSetState.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nfunction rexecuteOperations(self) {\n  // If we have a primary and a disconnect handler, execute\n  // buffered operations\n  if (self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute();\n  } else if (self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executePrimary: true });\n  } else if (self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executeSecondary: true });\n  }\n}\n\nfunction connectNewServers(self, servers, callback) {\n  // Count lefts\n  var count = servers.length;\n  var error = null;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function(err) {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return this.destroy({ force: true });\n      }\n\n      if (event === 'connect' && !self.authenticating) {\n        // Destroyed\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _self.destroy({ force: true });\n        }\n\n        // Do we have authentication contexts that need to be applied\n        applyAuthenticationContexts(self, _self, function() {\n          // Destroy the instance\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            return _self.destroy({ force: true });\n          }\n\n          // Update the state\n          var result = self.s.replicaSetState.update(_self);\n          // Update the state with the new server\n          if (result) {\n            // Primary lastIsMaster store it\n            if (_self.lastIsMaster() && _self.lastIsMaster().ismaster) {\n              self.ismaster = _self.lastIsMaster();\n            }\n\n            // Remove the handlers\n            for (var i = 0; i < handlers.length; i++) {\n              _self.removeAllListeners(handlers[i]);\n            }\n\n            // Add stable state handlers\n            _self.on('error', handleEvent(self, 'error'));\n            _self.on('close', handleEvent(self, 'close'));\n            _self.on('timeout', handleEvent(self, 'timeout'));\n            _self.on('parseError', handleEvent(self, 'parseError'));\n\n            // Enalbe the monitoring of the new server\n            monitorServer(_self.lastIsMaster().me, self, {});\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n          } else {\n            _self.destroy({ force: true });\n          }\n        });\n      } else if (event === 'connect' && self.authenticating) {\n        this.destroy({ force: true });\n      } else if (event === 'error') {\n        error = err;\n      }\n\n      // Rexecute any stalled operation\n      rexecuteOperations(self);\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback(error);\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) return callback();\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.split(':')[0],\n          port: parseInt(_server.split(':')[1], 10),\n          authProviders: self.authProviders,\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < servers.length; i++) {\n    execute(servers[i], i);\n  }\n}\n\n// Ping the server\nvar pingServer = function(self, server, cb) {\n  // Measure running time\n  var start = new Date().getTime();\n\n  // Emit the server heartbeat start\n  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });\n\n  // Execute ismaster\n  // Set the socketTimeout for a monitoring message to a low number\n  // Ensuring ismaster calls are timed out quickly\n  server.command(\n    'admin.$cmd',\n    {\n      ismaster: true\n    },\n    {\n      monitoring: true,\n      socketTimeout: self.s.options.connectionTimeout || 2000\n    },\n    function(err, r) {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        server.destroy({ force: true });\n        return cb(err, r);\n      }\n\n      // Calculate latency\n      var latencyMS = new Date().getTime() - start;\n      // Set the last updatedTime\n      var hrTime = process.hrtime();\n      // Calculate the last update time\n      server.lastUpdateTime = hrTime[0] * 1000 + Math.round(hrTime[1] / 1000);\n\n      // We had an error, remove it from the state\n      if (err) {\n        // Emit the server heartbeat failure\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: server.name\n        });\n\n        // Remove server from the state\n        self.s.replicaSetState.remove(server);\n      } else {\n        // Update the server ismaster\n        server.ismaster = r.result;\n\n        // Check if we have a lastWriteDate convert it to MS\n        // and store on the server instance for later use\n        if (server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {\n          server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();\n        }\n\n        // Do we have a brand new server\n        if (server.lastIsMasterMS === -1) {\n          server.lastIsMasterMS = latencyMS;\n        } else if (server.lastIsMasterMS) {\n          // After the first measurement, average RTT MUST be computed using an\n          // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.\n          // If the prior average is denoted old_rtt, then the new average (new_rtt) is\n          // computed from a new RTT measurement (x) using the following formula:\n          // alpha = 0.2\n          // new_rtt = alpha * x + (1 - alpha) * old_rtt\n          server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;\n        }\n\n        if (self.s.replicaSetState.update(server)) {\n          // Primary lastIsMaster store it\n          if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n            self.ismaster = server.lastIsMaster();\n          }\n        }\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: server.name\n        });\n      }\n\n      // Calculate the staleness for this server\n      self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);\n\n      // Callback\n      cb(err, r);\n    }\n  );\n};\n\n// Each server is monitored in parallel in their own timeout loop\nvar monitorServer = function(host, self, options) {\n  // If this is not the initial scan\n  // Is this server already being monitoried, then skip monitoring\n  if (!options.haInterval) {\n    for (var i = 0; i < self.intervalIds.length; i++) {\n      if (self.intervalIds[i].__host === host) {\n        return;\n      }\n    }\n  }\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  // Create the interval\n  var intervalId = new _process(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      // clearInterval(intervalId);\n      intervalId.stop();\n      return;\n    }\n\n    // Do we already have server connection available for this host\n    var _server = self.s.replicaSetState.get(host);\n\n    // Check if we have a known server connection and reuse\n    if (_server) {\n      // Ping the server\n      return pingServer(self, _server, function(err) {\n        if (err) {\n          // NOTE: should something happen here?\n          return;\n        }\n\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          intervalId.stop();\n          return;\n        }\n\n        // Filter out all called intervaliIds\n        self.intervalIds = self.intervalIds.filter(function(intervalId) {\n          return intervalId.isRunning();\n        });\n\n        // Initial sweep\n        if (_process === Timeout) {\n          if (\n            self.state === CONNECTING &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            // Start topology interval check\n            topologyMonitor(self, {});\n          }\n        } else {\n          if (\n            self.state === DISCONNECTED &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('reconnect', self);\n            });\n          }\n        }\n\n        if (\n          self.initialConnectState.connect &&\n          !self.initialConnectState.fullsetup &&\n          self.s.replicaSetState.hasPrimaryAndSecondary()\n        ) {\n          // Set initial connect state\n          self.initialConnectState.fullsetup = true;\n          self.initialConnectState.all = true;\n\n          process.nextTick(function() {\n            self.emit('fullsetup', self);\n            self.emit('all', self);\n          });\n        }\n      });\n    }\n  }, _haInterval);\n\n  // Start the interval\n  intervalId.start();\n  // Add the intervalId host name\n  intervalId.__host = host;\n  // Add the intervalId to our list of intervalIds\n  self.intervalIds.push(intervalId);\n};\n\nfunction topologyMonitor(self, options) {\n  if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n  options = options || {};\n\n  // Get the servers\n  var servers = Object.keys(self.s.replicaSetState.set);\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  if (_process === Timeout) {\n    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {\n      // Don't emit errors if the connection was already\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no primary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      } else if (\n        !self.s.replicaSetState.hasSecondary() &&\n        self.s.options.secondaryOnlyConnectionAllowed\n      ) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no secondary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      }\n\n      for (var i = 0; i < servers.length; i++) {\n        monitorServer(servers[i], self, options);\n      }\n    });\n  } else {\n    for (var i = 0; i < servers.length; i++) {\n      monitorServer(servers[i], self, options);\n    }\n  }\n\n  // Run the reconnect process\n  function executeReconnect(self) {\n    return function() {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {\n        var monitoringFrequencey = self.s.replicaSetState.hasPrimary()\n          ? _haInterval\n          : self.s.minHeartbeatFrequencyMS;\n\n        // Create a timeout\n        self.intervalIds.push(new Timeout(executeReconnect(self), monitoringFrequencey).start());\n      });\n    };\n  }\n\n  // Decide what kind of interval to use\n  var intervalTime = !self.s.replicaSetState.hasPrimary()\n    ? self.s.minHeartbeatFrequencyMS\n    : _haInterval;\n\n  self.intervalIds.push(new Timeout(executeReconnect(self), intervalTime).start());\n}\n\nfunction addServerToList(list, server) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].name.toLowerCase() === server.name.toLowerCase()) return true;\n  }\n\n  list.push(server);\n}\n\nfunction handleEvent(self, event) {\n  return function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id)\n      );\n    }\n\n    // Remove from the replicaset state\n    self.s.replicaSetState.remove(this);\n\n    // Are we in a destroyed state return\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n    // If no primary and secondary available\n    if (\n      !self.s.replicaSetState.hasPrimary() &&\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      stateTransition(self, DISCONNECTED);\n    } else if (!self.s.replicaSetState.hasPrimary()) {\n      stateTransition(self, DISCONNECTED);\n    }\n\n    addServerToList(self.s.connectingServers, this);\n  };\n}\n\nfunction applyAuthenticationContexts(self, server, callback) {\n  if (self.s.authenticationContexts.length === 0) {\n    return callback();\n  }\n\n  // Do not apply any auth contexts if it's an arbiter\n  if (server.lastIsMaster() && server.lastIsMaster().arbiterOnly) {\n    return callback();\n  }\n\n  // Copy contexts to ensure no modificiation in the middle of\n  // auth process.\n  var authContexts = self.s.authenticationContexts.slice(0);\n\n  // Apply one of the contexts\n  function applyAuth(authContexts, server, callback) {\n    if (authContexts.length === 0) return callback();\n    // Get the first auth context\n    var authContext = authContexts.shift();\n    // Copy the params\n    var customAuthContext = authContext.slice(0);\n    // Push our callback handler\n    customAuthContext.push(function(/* err */) {\n      applyAuth(authContexts, server, callback);\n    });\n\n    // Attempt authentication\n    server.auth.apply(server, customAuthContext);\n  }\n\n  // Apply all auth contexts\n  applyAuth(authContexts, server, callback);\n}\n\nfunction shouldTriggerConnect(self) {\n  const isConnecting = self.state === CONNECTING;\n  const hasPrimary = self.s.replicaSetState.hasPrimary();\n  const hasSecondary = self.s.replicaSetState.hasSecondary();\n  const secondaryOnlyConnectionAllowed = self.s.options.secondaryOnlyConnectionAllowed;\n  const readPreferenceSecondary =\n    self.s.connectOptions.readPreference &&\n    self.s.connectOptions.readPreference.equals(ReadPreference.secondary);\n\n  return (\n    (isConnecting &&\n      ((readPreferenceSecondary && hasSecondary) || (!readPreferenceSecondary && hasPrimary))) ||\n    (hasSecondary && secondaryOnlyConnectionAllowed)\n  );\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f(\n          'handleInitialConnectEvent %s from server %s in replset with id %s',\n          event,\n          this.name,\n          self.id\n        )\n      );\n    }\n\n    // Destroy the instance\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      return this.destroy({ force: true });\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Do we have authentication contexts that need to be applied\n      applyAuthenticationContexts(self, _this, function() {\n        // Destroy the instance\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _this.destroy({ force: true });\n        }\n\n        // Update the state\n        var result = self.s.replicaSetState.update(_this);\n        if (result === true) {\n          // Primary lastIsMaster store it\n          if (_this.lastIsMaster() && _this.lastIsMaster().ismaster) {\n            self.ismaster = _this.lastIsMaster();\n          }\n\n          // Debug log\n          if (self.s.logger.isDebug()) {\n            self.s.logger.debug(\n              f(\n                'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]',\n                event,\n                _this.name,\n                self.id,\n                JSON.stringify(self.s.replicaSetState.set)\n              )\n            );\n          }\n\n          // Remove the handlers\n          for (var i = 0; i < handlers.length; i++) {\n            _this.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _this.on('error', handleEvent(self, 'error'));\n          _this.on('close', handleEvent(self, 'close'));\n          _this.on('timeout', handleEvent(self, 'timeout'));\n          _this.on('parseError', handleEvent(self, 'parseError'));\n\n          // Do we have a primary or primaryAndSecondary\n          if (shouldTriggerConnect(self)) {\n            // We are connected\n            self.state = CONNECTED;\n\n            // Set initial connect state\n            self.initialConnectState.connect = true;\n            // Emit connect event\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            topologyMonitor(self, {});\n          }\n        } else if (result instanceof MongoError) {\n          _this.destroy({ force: true });\n          self.destroy({ force: true });\n          return self.emit('error', result);\n        } else {\n          _this.destroy({ force: true });\n        }\n      });\n    } else {\n      // Emit failure to connect\n      self.emit('failed', this);\n\n      addServerToList(self.s.connectingServers, this);\n      // Remove from the state\n      self.s.replicaSetState.remove(this);\n    }\n\n    if (\n      self.initialConnectState.connect &&\n      !self.initialConnectState.fullsetup &&\n      self.s.replicaSetState.hasPrimaryAndSecondary()\n    ) {\n      // Set initial connect state\n      self.initialConnectState.fullsetup = true;\n      self.initialConnectState.all = true;\n\n      process.nextTick(function() {\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      });\n    }\n\n    // Remove from the list from connectingServers\n    for (var i = 0; i < self.s.connectingServers.length; i++) {\n      if (self.s.connectingServers[i].equals(this)) {\n        self.s.connectingServers.splice(i, 1);\n      }\n    }\n\n    // Trigger topologyMonitor\n    if (self.s.connectingServers.length === 0 && self.state === CONNECTING) {\n      topologyMonitor(self, { haInterval: 1 });\n    }\n  };\n}\n\nfunction connectServers(self, servers) {\n  // Update connectingServers\n  self.s.connectingServers = self.s.connectingServers.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Add the server to the state\n      if (self.s.replicaSetState.update(server)) {\n        // Primary lastIsMaster store it\n        if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n          self.ismaster = server.lastIsMaster();\n        }\n      }\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nReplSet.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, {\n        authProviders: self.authProviders,\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n  });\n\n  // Error out as high availbility interval must be < than socketTimeout\n  if (\n    this.s.options.socketTimeout > 0 &&\n    this.s.options.socketTimeout <= this.s.options.haInterval\n  ) {\n    return self.emit(\n      'error',\n      new MongoError(\n        f(\n          'haInterval [%s] MS must be set to less than socketTimeout [%s] MS',\n          this.s.options.haInterval,\n          this.s.options.socketTimeout\n        )\n      )\n    );\n  }\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n  // Start all server connections\n  connectServers(self, servers);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nReplSet.prototype.destroy = function(options) {\n  options = options || {};\n  // Transition state\n  stateTransition(this, DESTROYED);\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n  // Destroy the replicaset\n  this.s.replicaSetState.destroy(options);\n  // Clear out authentication contexts\n  this.s.authenticationContexts = [];\n\n  // Destroy all connecting servers\n  this.s.connectingServers.forEach(function(x) {\n    x.destroy(options);\n  });\n\n  // Clear out all monitoring\n  for (var i = 0; i < this.intervalIds.length; i++) {\n    this.intervalIds[i].stop();\n    this.intervalIds[i].stop();\n  }\n\n  // Reset list of intervalIds\n  this.intervalIds = [];\n\n  // Emit toplogy closing event\n  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nReplSet.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n\n  this.s.replicaSetState.allServers().forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nReplSet.prototype.lastIsMaster = function() {\n  // If secondaryOnlyConnectionAllowed and no primary but secondary\n  // return the secondaries ismaster result.\n  if (\n    this.s.options.secondaryOnlyConnectionAllowed &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.replicaSetState.hasSecondary()\n  ) {\n    return this.s.replicaSetState.secondaries[0].lastIsMaster();\n  }\n\n  return this.s.replicaSetState.primary\n    ? this.s.replicaSetState.primary.lastIsMaster()\n    : this.ismaster;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nReplSet.prototype.connections = function() {\n  var servers = this.s.replicaSetState.allServers();\n  var connections = [];\n  for (var i = 0; i < servers.length; i++) {\n    connections = connections.concat(servers[i].connections());\n  }\n\n  return connections;\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {boolean}\n */\nReplSet.prototype.isConnected = function(options) {\n  options = options || {};\n\n  // If we are authenticating signal not connected\n  // To avoid interleaving of operations\n  if (this.authenticating) return false;\n\n  // If we specified a read preference check if we are connected to something\n  // than can satisfy this\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondary)) {\n    return this.s.replicaSetState.hasSecondary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primary)) {\n    return this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (this.s.options.secondaryOnlyConnectionAllowed && this.s.replicaSetState.hasSecondary()) {\n    return true;\n  }\n\n  return this.s.replicaSetState.hasPrimary();\n};\n\n/**\n * Figure out if the replicaset instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nReplSet.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n/**\n * Get server\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Server}\n */\nReplSet.prototype.getServer = function(options) {\n  // Ensure we have no options\n  options = options || {};\n  // Pick the right server based on readPreference\n  var server = this.s.replicaSetState.pickServer(options.readPreference);\n  if (this.s.debug) this.emit('pickedServer', options.readPreference, server);\n  return server;\n};\n\n/**\n * Get a direct connection\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Connection}\n */\nReplSet.prototype.getConnection = function(options) {\n  var server = this.getServer(options);\n  if (server) return server.getConnection();\n};\n\n/**\n * Get all connected servers\n * @method\n * @return {Server[]}\n */\nReplSet.prototype.getServers = function() {\n  return this.s.replicaSetState.allServers();\n};\n\nfunction ensureTransactionAutostart(session) {\n  if (!session) return;\n  if (!session.inTransaction() && session.autoStartTransaction) {\n    session.startTransaction();\n  }\n}\n\n//\n// Execute write operation\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  if (self.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  const willRetryWrite =\n    !args.retrying &&\n    options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction();\n\n  if (!self.s.replicaSetState.hasPrimary()) {\n    if (self.s.disconnectHandler) {\n      // Not connected but we have a disconnecthandler\n      return self.s.disconnectHandler.add(op, ns, ops, options, callback);\n    } else if (!willRetryWrite) {\n      // No server returned we had an error\n      return callback(new MongoError('no primary server found'));\n    }\n  }\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!(err instanceof errors.MongoNetworkError) && !err.message.match(/not master/)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newArgs = Object.assign({}, args, { retrying: true });\n      return executeWriteOperation(newArgs, options, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (self.s.replicaSetState.primary) {\n      self.s.replicaSetState.remove(self.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // optionally autostart transaction if requested\n  ensureTransactionAutostart(options.session);\n\n  self.s.replicaSetState.primary[op](ns, ops, options, handler);\n\n  // We need to increment the statement id if we're in a transaction\n  if (options.session && options.session.inTransaction()) {\n    options.session.incrementStatementId(ops.length);\n  }\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.insert = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.update = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.remove = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Establish readPreference\n  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;\n\n  // optionally autostart transaction if requested\n  ensureTransactionAutostart(options.session);\n\n  if (\n    options.session &&\n    options.session.inTransaction() &&\n    !readPreference.equals(ReadPreference.primary)\n  ) {\n    return callback(new MongoError('Read preference in a transaction must be primary'));\n  }\n\n  // If the readPreference is primary and we have no primary, store it\n  if (\n    readPreference.preference === 'primary' &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference === 'secondary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference !== 'primary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // Pick a server\n  var server = this.s.replicaSetState.pickServer(readPreference);\n  // We received an error, return it\n  if (!(server instanceof Server)) return callback(server);\n  // Emit debug event\n  if (self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(\n      new MongoError(\n        f('no server found that matches the provided readPreference %s', readPreference)\n      )\n    );\n  }\n\n  // Execute the command\n  server.command(ns, cmd, options, callback);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n  var currentContextIndex = 0;\n\n  // If we don't have the mechanism fail\n  if (this.authProviders[mechanism] == null && mechanism !== 'default') {\n    return callback(new MongoError(f('auth provider %s does not exist', mechanism)));\n  }\n\n  // Are we already authenticating, throw\n  if (this.authenticating) {\n    return callback(new MongoError('authentication or logout allready in process'));\n  }\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (!this.isConnected() && self.s.disconnectHandler != null) {\n    if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n    } else if (\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n    }\n  }\n\n  // Set to authenticating\n  this.authenticating = true;\n  // All errors\n  var errors = [];\n\n  // Get all the servers\n  var servers = this.s.replicaSetState.allServers();\n  // No servers return\n  if (servers.length === 0) {\n    this.authenticating = false;\n    callback(null, true);\n  }\n\n  // Authenticate\n  function auth(server) {\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([\n      function(err) {\n        count = count - 1;\n        // Save all the errors\n        if (err) errors.push({ name: server.name, err: err });\n        // We are done\n        if (count === 0) {\n          // Auth is done\n          self.authenticating = false;\n\n          // Return the auth error\n          if (errors.length) {\n            // Remove the entry from the stored authentication contexts\n            self.s.authenticationContexts.splice(currentContextIndex, 0);\n            // Return error\n            return callback(\n              new MongoError({\n                message: 'authentication fail',\n                errors: errors\n              }),\n              false\n            );\n          }\n\n          // Successfully authenticated session\n          callback(null, self);\n        }\n      }\n    ]);\n\n    if (!server.lastIsMaster().arbiterOnly) {\n      // Execute the auth only against non arbiter servers\n      server.auth.apply(server, finalArguments);\n    } else {\n      // If we are authenticating against an arbiter just ignore it\n      finalArguments.pop()(null);\n    }\n  }\n\n  // Get total count\n  var count = servers.length;\n\n  // Save current context index\n  currentContextIndex = this.s.authenticationContexts.length;\n\n  // Store the auth context and return the last index\n  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));\n\n  // Authenticate against all servers\n  while (servers.length > 0) {\n    auth(servers.shift());\n  }\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.logout = function(dbName, callback) {\n  var self = this;\n  // Are we authenticating or logging out, throw\n  if (this.authenticating) {\n    throw new MongoError('authentication or logout allready in process');\n  }\n\n  // Ensure no new members are processed while logging out\n  this.authenticating = true;\n\n  // Remove from all auth providers (avoid any reaplication of the auth details)\n  var providers = Object.keys(this.authProviders);\n  for (var i = 0; i < providers.length; i++) {\n    this.authProviders[providers[i]].logout(dbName);\n  }\n\n  // Clear out any contexts associated with the db\n  self.s.authenticationContexts = self.s.authenticationContexts.filter(function(context) {\n    return context[1] !== dbName;\n  });\n\n  // Now logout all the servers\n  var servers = this.s.replicaSetState.allServers();\n  var count = servers.length;\n  if (count === 0) return callback();\n  var errors = [];\n\n  function logoutServer(_server, cb) {\n    _server.logout(dbName, function(err) {\n      if (err) errors.push({ name: _server.name, err: err });\n      cb();\n    });\n  }\n\n  // Execute logout on all server instances\n  for (i = 0; i < servers.length; i++) {\n    logoutServer(servers[i], function() {\n      count = count - 1;\n\n      if (count === 0) {\n        // Do not block new operations\n        self.authenticating = false;\n        // If we have one or more errors\n        if (errors.length)\n          return callback(\n            new MongoError({\n              message: f('logout failed against db %s', dbName),\n              errors: errors\n            }),\n            false\n          );\n\n        // No errors\n        callback();\n      }\n    });\n  }\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nReplSet.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * A replset reconnect event, used to verify that the topology reconnected\n *\n * @event ReplSet#reconnect\n * @type {ReplSet}\n */\n\n/**\n * A replset fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#fullsetup\n * @type {ReplSet}\n */\n\n/**\n * A replset all event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#all\n * @type {ReplSet}\n */\n\n/**\n * A replset failed event, used to signal that initial replset connection failed.\n *\n * @event ReplSet#failed\n * @type {ReplSet}\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event ReplSet#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event ReplSet#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event ReplSet#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event ReplSet#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event ReplSet#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event ReplSet#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event ReplSet#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event ReplSet#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event ReplSet#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  diff = require('./shared').diff,\n  EventEmitter = require('events').EventEmitter,\n  Logger = require('../connection/logger'),\n  ReadPreference = require('./read_preference'),\n  MongoError = require('../error').MongoError;\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\nvar ReplSetState = function(options) {\n  options = options || {};\n  // Add event listener\n  EventEmitter.call(this);\n  // Topology state\n  this.topologyType = TopologyType.ReplicaSetNoPrimary;\n  this.setName = options.setName;\n\n  // Server set\n  this.set = {};\n\n  // Unpacked options\n  this.id = options.id;\n  this.setName = options.setName;\n\n  // Replicaset logger\n  this.logger = options.logger || Logger('ReplSet', options);\n\n  // Server selection index\n  this.index = 0;\n  // Acceptable latency\n  this.acceptableLatency = options.acceptableLatency || 15;\n\n  // heartbeatFrequencyMS\n  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n\n  // Server side\n  this.primary = null;\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  // Current unknown hosts\n  this.unknownServers = [];\n  // In set status\n  this.set = {};\n  // Status\n  this.maxElectionId = null;\n  this.maxSetVersion = 0;\n  // Description of the Replicaset\n  this.replicasetDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  this.logicalSessionTimeoutMinutes = undefined;\n};\n\ninherits(ReplSetState, EventEmitter);\n\nReplSetState.prototype.hasPrimaryAndSecondary = function() {\n  return this.primary != null && this.secondaries.length > 0;\n};\n\nReplSetState.prototype.hasPrimaryOrSecondary = function() {\n  return this.hasPrimary() || this.hasSecondary();\n};\n\nReplSetState.prototype.hasPrimary = function() {\n  return this.primary != null;\n};\n\nReplSetState.prototype.hasSecondary = function() {\n  return this.secondaries.length > 0;\n};\n\nReplSetState.prototype.get = function(host) {\n  var servers = this.allServers();\n\n  for (var i = 0; i < servers.length; i++) {\n    if (servers[i].name.toLowerCase() === host.toLowerCase()) {\n      return servers[i];\n    }\n  }\n\n  return null;\n};\n\nReplSetState.prototype.allServers = function(options) {\n  options = options || {};\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  if (!options.ignoreArbiters) servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n  return servers;\n};\n\nReplSetState.prototype.destroy = function(options) {\n  // Destroy all sockets\n  if (this.primary) this.primary.destroy(options);\n  this.secondaries.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.arbiters.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.passives.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.ghosts.forEach(function(x) {\n    x.destroy(options);\n  });\n  // Clear out the complete state\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  this.unknownServers = [];\n  this.set = {};\n  this.primary = null;\n  // Emit the topology changed\n  emitTopologyDescriptionChanged(this);\n};\n\nReplSetState.prototype.remove = function(server, options) {\n  options = options || {};\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  // Only remove if the current server is not connected\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n\n  // Check if it's active and this is just a failed connection attempt\n  for (var i = 0; i < servers.length; i++) {\n    if (\n      !options.force &&\n      servers[i].equals(server) &&\n      servers[i].isConnected &&\n      servers[i].isConnected()\n    ) {\n      return;\n    }\n  }\n\n  // If we have it in the set remove it\n  if (this.set[serverName]) {\n    this.set[serverName].type = ServerType.Unknown;\n    this.set[serverName].electionId = null;\n    this.set[serverName].setName = null;\n    this.set[serverName].setVersion = null;\n  }\n\n  // Remove type\n  var removeType = null;\n\n  // Remove from any lists\n  if (this.primary && this.primary.equals(server)) {\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    removeType = 'primary';\n  }\n\n  // Remove from any other server lists\n  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;\n  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;\n  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;\n  removeFrom(server, this.ghosts);\n  removeFrom(server, this.unknownServers);\n\n  // Push to unknownServers\n  this.unknownServers.push(serverName);\n\n  // Do we have a removeType\n  if (removeType) {\n    this.emit('left', removeType, server);\n  }\n};\n\nconst isArbiter = ismaster => ismaster.arbiterOnly && ismaster.setName;\n\nReplSetState.prototype.update = function(server) {\n  var self = this;\n  // Get the current ismaster\n  var ismaster = server.lastIsMaster();\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  //\n  // Add any hosts\n  //\n  if (ismaster) {\n    // Join all the possible new hosts\n    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];\n    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);\n    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);\n    hosts = hosts.map(function(s) {\n      return s.toLowerCase();\n    });\n\n    // Add all hosts as unknownServers\n    for (var i = 0; i < hosts.length; i++) {\n      // Add to the list of unknown server\n      if (\n        this.unknownServers.indexOf(hosts[i]) === -1 &&\n        (!this.set[hosts[i]] || this.set[hosts[i]].type === ServerType.Unknown)\n      ) {\n        this.unknownServers.push(hosts[i].toLowerCase());\n      }\n\n      if (!this.set[hosts[i]]) {\n        this.set[hosts[i]] = {\n          type: ServerType.Unknown,\n          electionId: null,\n          setName: null,\n          setVersion: null\n        };\n      }\n    }\n  }\n\n  //\n  // Unknown server\n  //\n  if (!ismaster && !inList(ismaster, server, this.unknownServers)) {\n    self.set[serverName] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n    // Update set information about the server instance\n    self.set[serverName].type = ServerType.Unknown;\n    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n\n    if (self.unknownServers.indexOf(server.name) === -1) {\n      self.unknownServers.push(serverName);\n    }\n\n    // Set the topology\n    return false;\n  }\n\n  // Update logicalSessionTimeoutMinutes\n  if (ismaster.logicalSessionTimeoutMinutes !== undefined && !isArbiter(ismaster)) {\n    if (\n      self.logicalSessionTimeoutMinutes === undefined ||\n      ismaster.logicalSessionTimeoutMinutes === null\n    ) {\n      self.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    } else {\n      self.logicalSessionTimeoutMinutes = Math.min(\n        self.logicalSessionTimeoutMinutes,\n        ismaster.logicalSessionTimeoutMinutes\n      );\n    }\n  }\n\n  //\n  // Is this a mongos\n  //\n  if (ismaster && ismaster.msg === 'isdbgrid') {\n    return false;\n  }\n\n  // A RSOther instance\n  if (\n    (ismaster.setName && ismaster.hidden) ||\n    (ismaster.setName &&\n      !ismaster.ismaster &&\n      !ismaster.secondary &&\n      !ismaster.arbiterOnly &&\n      !ismaster.passive)\n  ) {\n    self.set[serverName] = {\n      type: ServerType.RSOther,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    return false;\n  }\n\n  // A RSGhost instance\n  if (ismaster.isreplicaset) {\n    self.set[serverName] = {\n      type: ServerType.RSGhost,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n\n    // Set the topology\n    return false;\n  }\n\n  //\n  // Standalone server, destroy and return\n  //\n  if (ismaster && ismaster.ismaster && !ismaster.setName) {\n    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // Server in maintanance mode\n  //\n  if (ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // If the .me field does not match the passed in server\n  //\n  if (ismaster.me && ismaster.me.toLowerCase() !== serverName) {\n    if (this.logger.isWarn()) {\n      this.logger.warn(\n        f(\n          'the seedlist server was removed due to its address %s not matching its ismaster.me address %s',\n          server.name,\n          ismaster.me\n        )\n      );\n    }\n\n    // Delete from the set\n    delete this.set[serverName];\n    // Delete unknown servers\n    removeFrom(server, self.unknownServers);\n\n    // Destroy the instance\n    server.destroy();\n\n    // Set the type of topology we have\n    if (this.primary && !this.primary.equals(server)) {\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    //\n    // We have a potential primary\n    //\n    if (!this.primary && ismaster.primary) {\n      this.set[ismaster.primary.toLowerCase()] = {\n        type: ServerType.PossiblePrimary,\n        setName: null,\n        electionId: null,\n        setVersion: null\n      };\n    }\n\n    return false;\n  }\n\n  //\n  // Primary handling\n  //\n  if (!this.primary && ismaster.ismaster && ismaster.setName) {\n    var ismasterElectionId = server.lastIsMaster().electionId;\n    if (this.setName && this.setName !== ismaster.setName) {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      return new MongoError(\n        f(\n          'setName from ismaster does not match provided connection setName [%s] != [%s]',\n          ismaster.setName,\n          this.setName\n        )\n      );\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n      // Get the electionIds\n      var ismasterSetVersion = server.lastIsMaster().setVersion;\n\n      if (result === 1) {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n        return false;\n      } else if (result === 0 && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          this.topologyType = TopologyType.ReplicaSetNoPrimary;\n          return false;\n        }\n      }\n\n      this.maxSetVersion = ismasterSetVersion;\n      this.maxElectionId = ismasterElectionId;\n    }\n\n    // Hande normalization of server names\n    var normalizedHosts = ismaster.hosts.map(function(x) {\n      return x.toLowerCase();\n    });\n    var locationIndex = normalizedHosts.indexOf(serverName);\n\n    // Validate that the server exists in the host list\n    if (locationIndex !== -1) {\n      self.primary = server;\n      self.set[serverName] = {\n        type: ServerType.RSPrimary,\n        setVersion: ismaster.setVersion,\n        electionId: ismaster.electionId,\n        setName: ismaster.setName\n      };\n\n      // Set the topology\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      if (ismaster.setName) this.setName = ismaster.setName;\n      removeFrom(server, self.unknownServers);\n      removeFrom(server, self.secondaries);\n      removeFrom(server, self.passives);\n      self.emit('joined', 'primary', server);\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    emitTopologyDescriptionChanged(self);\n    return true;\n  } else if (ismaster.ismaster && ismaster.setName) {\n    // Get the electionIds\n    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;\n    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;\n    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;\n    ismasterElectionId = server.lastIsMaster().electionId;\n    ismasterSetVersion = server.lastIsMaster().setVersion;\n    var ismasterSetName = server.lastIsMaster().setName;\n\n    // Is it the same server instance\n    if (this.primary.equals(server) && currentSetName === ismasterSetName) {\n      return false;\n    }\n\n    // If we do not have the same rs name\n    if (currentSetName && currentSetName !== ismasterSetName) {\n      if (!this.primary.equals(server)) {\n        this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      } else {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      }\n\n      return false;\n    }\n\n    // Check if we need to replace the server\n    if (currentElectionId && ismasterElectionId) {\n      result = compareObjectIds(currentElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion > ismasterSetVersion) {\n        return false;\n      }\n    } else if (!currentElectionId && ismasterElectionId && ismasterSetVersion) {\n      if (ismasterSetVersion < this.maxSetVersion) {\n        return false;\n      }\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      } else {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      }\n\n      this.maxElectionId = ismasterElectionId;\n      this.maxSetVersion = ismasterSetVersion;\n    } else {\n      this.maxSetVersion = ismasterSetVersion;\n    }\n\n    // Modify the entry to unknown\n    self.set[self.primary.name.toLowerCase()] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Signal primary left\n    self.emit('left', 'primary', this.primary);\n    // Destroy the instance\n    self.primary.destroy();\n    // Set the new instance\n    self.primary = server;\n    // Set the set information\n    self.set[serverName] = {\n      type: ServerType.RSPrimary,\n      setVersion: ismaster.setVersion,\n      electionId: ismaster.electionId,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    removeFrom(server, self.secondaries);\n    removeFrom(server, self.passives);\n    self.emit('joined', 'primary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  // A possible instance\n  if (!this.primary && ismaster.primary) {\n    self.set[ismaster.primary.toLowerCase()] = {\n      type: ServerType.PossiblePrimary,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n  }\n\n  //\n  // Secondary handling\n  //\n  if (\n    ismaster.secondary &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.secondaries) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    // Emit secondary joined replicaset\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Arbiter handling\n  //\n  if (\n    isArbiter(ismaster) &&\n    !inList(ismaster, server, this.arbiters) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    self.emit('joined', 'arbiter', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Passive handling\n  //\n  if (\n    ismaster.passive &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.passives) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Remove the primary\n  //\n  if (this.set[serverName] && this.set[serverName].type === ServerType.RSPrimary) {\n    self.emit('left', 'primary', this.primary);\n    this.primary.destroy();\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    return false;\n  }\n\n  this.topologyType = this.primary\n    ? TopologyType.ReplicaSetWithPrimary\n    : TopologyType.ReplicaSetNoPrimary;\n  return false;\n};\n\n/**\n * Recalculate single server max staleness\n * @method\n */\nReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {\n  // Locate the max secondary lastwrite\n  var max = 0;\n  // Go over all secondaries\n  for (var i = 0; i < this.secondaries.length; i++) {\n    max = Math.max(max, this.secondaries[i].lastWriteDate);\n  }\n\n  // Perform this servers staleness calculation\n  if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary && this.hasPrimary()) {\n    server.staleness =\n      server.lastUpdateTime -\n      server.lastWriteDate -\n      (this.primary.lastUpdateTime - this.primary.lastWriteDate) +\n      haInterval;\n  } else if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary) {\n    server.staleness = max - server.lastWriteDate + haInterval;\n  }\n};\n\n/**\n * Recalculate all the staleness values for secodaries\n * @method\n */\nReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {\n  for (var i = 0; i < this.secondaries.length; i++) {\n    this.updateServerMaxStaleness(this.secondaries[i], haInterval);\n  }\n};\n\n/**\n * Pick a server by the passed in ReadPreference\n * @method\n * @param {ReadPreference} readPreference The ReadPreference instance to use\n */\nReplSetState.prototype.pickServer = function(readPreference) {\n  // If no read Preference set to primary by default\n  readPreference = readPreference || ReadPreference.primary;\n\n  // maxStalenessSeconds is not allowed with a primary read\n  if (readPreference.preference === 'primary' && readPreference.maxStalenessSeconds != null) {\n    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');\n  }\n\n  // Check if we have any non compatible servers for maxStalenessSeconds\n  var allservers = this.primary ? [this.primary] : [];\n  allservers = allservers.concat(this.secondaries);\n\n  // Does any of the servers not support the right wire protocol version\n  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out\n  if (readPreference.maxStalenessSeconds != null) {\n    for (var i = 0; i < allservers.length; i++) {\n      if (allservers[i].ismaster.maxWireVersion < 5) {\n        return new MongoError(\n          'maxStalenessSeconds not supported by at least one of the replicaset members'\n        );\n      }\n    }\n  }\n\n  // Do we have the nearest readPreference\n  if (readPreference.preference === 'nearest' && readPreference.maxStalenessSeconds == null) {\n    return pickNearest(this, readPreference);\n  } else if (\n    readPreference.preference === 'nearest' &&\n    readPreference.maxStalenessSeconds != null\n  ) {\n    return pickNearestMaxStalenessSeconds(this, readPreference);\n  }\n\n  // Get all the secondaries\n  var secondaries = this.secondaries;\n\n  // Check if we can satisfy and of the basic read Preferences\n  if (readPreference.equals(ReadPreference.secondary) && secondaries.length === 0) {\n    return new MongoError('no secondary server available');\n  }\n\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) &&\n    secondaries.length === 0 &&\n    this.primary == null\n  ) {\n    return new MongoError('no secondary or primary server available');\n  }\n\n  if (readPreference.equals(ReadPreference.primary) && this.primary == null) {\n    return new MongoError('no primary server available');\n  }\n\n  // Secondary preferred or just secondaries\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) ||\n    readPreference.equals(ReadPreference.secondary)\n  ) {\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      // Pick nearest of any other servers available\n      var server = pickNearest(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      // Pick nearest of any other servers available\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    }\n\n    if (readPreference.equals(ReadPreference.secondaryPreferred)) {\n      return this.primary;\n    }\n\n    return null;\n  }\n\n  // Primary preferred\n  if (readPreference.equals(ReadPreference.primaryPreferred)) {\n    server = null;\n\n    // We prefer the primary if it's available\n    if (this.primary) {\n      return this.primary;\n    }\n\n    // Pick a secondary\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      server = pickNearest(this, readPreference);\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n    }\n\n    //  Did we find a server\n    if (server) return server;\n  }\n\n  // Return the primary\n  return this.primary;\n};\n\n//\n// Filter serves by tags\nvar filterByTags = function(readPreference, servers) {\n  if (readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];\n\n  // Iterate over the tags\n  for (var j = 0; j < tagsArray.length; j++) {\n    var tags = tagsArray[j];\n\n    // Iterate over all the servers\n    for (var i = 0; i < servers.length; i++) {\n      var serverTag = servers[i].lastIsMaster().tags || {};\n\n      // Did we find the a matching server\n      var found = true;\n      // Check if the server is valid\n      for (var name in tags) {\n        if (serverTag[name] !== tags[name]) {\n          found = false;\n        }\n      }\n\n      // Add to candidate list\n      if (found) {\n        filteredServers.push(servers[i]);\n      }\n    }\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n};\n\nfunction pickNearestMaxStalenessSeconds(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Get the maxStalenessMS\n  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;\n\n  // Check if the maxStalenessMS > 90 seconds\n  if (maxStalenessMS < 90 * 1000) {\n    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');\n  }\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (self.primary && servers.length === 0 && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  //\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  // var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.staleness <= maxStalenessMS;\n  });\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    // return a.time > b.time;\n    return a.lastIsMasterMS > b.lastIsMasterMS;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction pickNearest(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (servers.length === 0 && self.primary && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    // return a.time > b.time;\n    return a.lastIsMasterMS > b.lastIsMasterMS;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.lastIsMasterMS <= lowest + self.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction inList(ismaster, server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] && list[i].name && list[i].name.toLowerCase() === server.name.toLowerCase())\n      return true;\n  }\n\n  return false;\n}\n\nfunction addToList(self, type, ismaster, server, list) {\n  var serverName = server.name.toLowerCase();\n  // Update set information about the server instance\n  self.set[serverName].type = type;\n  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n  // Add to the list\n  list.push(server);\n}\n\nfunction compareObjectIds(id1, id2) {\n  var a = new Buffer(id1.toHexString(), 'hex');\n  var b = new Buffer(id2.toHexString(), 'hex');\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (typeof Buffer.compare === 'function') {\n    return Buffer.compare(a, b);\n  }\n\n  var x = a.length;\n  var y = b.length;\n  var len = Math.min(x, y);\n\n  for (var i = 0; i < len; i++) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction removeFrom(server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].equals && list[i].equals(server)) {\n      list.splice(i, 1);\n      return true;\n    } else if (typeof list[i] === 'string' && list[i].toLowerCase() === server.name.toLowerCase()) {\n      list.splice(i, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    var setName = self.setName;\n\n    if (self.hasPrimaryAndSecondary()) {\n      topology = 'ReplicaSetWithPrimary';\n    } else if (!self.hasPrimary() && self.hasSecondary()) {\n      topology = 'ReplicaSetNoPrimary';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      setName: setName,\n      servers: []\n    };\n\n    // Add the primary to the list\n    if (self.hasPrimary()) {\n      var desc = self.primary.getDescription();\n      desc.type = 'RSPrimary';\n      description.servers.push(desc);\n    }\n\n    // Add all the secondaries\n    description.servers = description.servers.concat(\n      self.secondaries.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Add all the arbiters\n    description.servers = description.servers.concat(\n      self.arbiters.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSArbiter';\n        return description;\n      })\n    );\n\n    // Add all the passives\n    description.servers = description.servers.concat(\n      self.passives.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.replicasetDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.replicasetDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    // if(diffResult.servers.length > 0) {\n    self.emit('topologyDescriptionChanged', result);\n    // }\n\n    // Set the new description\n    self.replicasetDescription = description;\n  }\n}\n\nmodule.exports = ReplSetState;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  EventEmitter = require('events').EventEmitter,\n  ReadPreference = require('./read_preference'),\n  Logger = require('../connection/logger'),\n  debugOptions = require('../connection/utils').debugOptions,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Pool = require('../connection/pool'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  TwoSixWireProtocolSupport = require('../wireprotocol/2_6_support'),\n  ThreeTwoWireProtocolSupport = require('../wireprotocol/3_2_support'),\n  BasicCursor = require('../cursor'),\n  sdam = require('./shared'),\n  createClientInfo = require('./shared').createClientInfo,\n  createCompressionInfo = require('./shared').createCompressionInfo,\n  resolveClusterTime = require('./shared').resolveClusterTime,\n  SessionMixins = require('./shared').SessionMixins,\n  relayEvents = require('./shared').relayEvents;\n\nfunction getSaslSupportedMechs(options) {\n  if (!options) {\n    return {};\n  }\n\n  const authArray = options.auth || [];\n  const authMechanism = authArray[0] || options.authMechanism;\n  const authSource = authArray[1] || options.authSource || options.dbName || 'admin';\n  const user = authArray[2] || options.user;\n\n  if (typeof authMechanism === 'string' && authMechanism.toUpperCase() !== 'DEFAULT') {\n    return {};\n  }\n\n  if (!user) {\n    return {};\n  }\n\n  return { saslSupportedMechs: `${authSource}.${user}` };\n}\n\nfunction getDefaultAuthMechanism(ismaster) {\n  if (ismaster) {\n    // If ismaster contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(ismaster.saslSupportedMechs)) {\n      return ismaster.saslSupportedMechs.indexOf('SCRAM-SHA-256') >= 0\n        ? 'scram-sha-256'\n        : 'scram-sha-1';\n    }\n\n    // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n    if (ismaster.maxWireVersion >= 3) {\n      return 'scram-sha-1';\n    }\n  }\n\n  // Default for wireprotocol < 3\n  return 'mongocr';\n}\n\nfunction extractIsMasterError(err, result) {\n  if (err) {\n    return err;\n  }\n\n  if (result && result.result && result.result.ok === 0) {\n    return new MongoError(result.result);\n  }\n}\n\n// Used for filtering out fields for loggin\nvar debugFields = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'singleBufferSerializtion',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\n// Server instance id\nvar id = 0;\nvar serverAccounting = false;\nvar servers = {};\nvar BSON = retrieveBSON();\n\n/**\n * Creates a new Server instance\n * @class\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {number} [options.monitoring=true] Enable the server state monitoring (calling ismaster at monitoringInterval)\n * @param {number} [options.monitoringInterval=5000] The interval of calling ismaster when monitoring is enabled.\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {string} [options.appname=null] Application name, passed in on ismaster call and logged in mongod server logs. Maximum size 128 bytes.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Server} A cursor instance\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#reconnectFailed\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n * @fires Server#topologyOpening\n * @fires Server#topologyClosed\n * @fires Server#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Server = function(options) {\n  options = options || {};\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Server instance id\n  this.id = id++;\n\n  // Internal state\n  this.s = {\n    // Options\n    options: options,\n    // Logger\n    logger: Logger('Server', options),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Pool\n    pool: null,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Monitor thread (keeps the connection alive)\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : true,\n    // Is the server in a topology\n    inTopology: !!options.parent,\n    // Monitoring timeout\n    monitoringInterval:\n      typeof options.monitoringInterval === 'number' ? options.monitoringInterval : 5000,\n    // Topology id\n    topologyId: -1,\n    compression: { compressors: createCompressionInfo(options) },\n    // Optional parent topology\n    parent: options.parent\n  };\n\n  // If this is a single deployment we need to track the clusterTime here\n  if (!this.s.parent) {\n    this.s.clusterTime = null;\n  }\n\n  // Curent ismaster\n  this.ismaster = null;\n  // Current ping time\n  this.lastIsMasterMS = -1;\n  // The monitoringProcessId\n  this.monitoringProcessId = null;\n  // Initial connection\n  this.initialConnect = true;\n  // Wire protocol handler, default to oldest known protocol handler\n  // this gets changed when the first ismaster is called.\n  this.wireProtocolHandler = new TwoSixWireProtocolSupport();\n  // Default type\n  this._type = 'server';\n  // Set the client info\n  this.clientInfo = createClientInfo(options);\n\n  // Max Stalleness values\n  // last time we updated the ismaster state\n  this.lastUpdateTime = 0;\n  // Last write time\n  this.lastWriteDate = 0;\n  // Stalleness\n  this.staleness = 0;\n};\n\ninherits(Server, EventEmitter);\nObject.assign(Server.prototype, SessionMixins);\n\nObject.defineProperty(Server.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this._type;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Server.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\n// In single server deployments we track the clusterTime directly on the topology, however\n// in Mongos and ReplSet deployments we instead need to delegate the clusterTime up to the\n// tracking objects so we can ensure we are gossiping the maximum time received from the\n// server.\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  enumerable: true,\n  set: function(clusterTime) {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    resolveClusterTime(settings, clusterTime);\n  },\n  get: function() {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    return settings.clusterTime || null;\n  }\n});\n\nServer.enableServerAccounting = function() {\n  serverAccounting = true;\n  servers = {};\n};\n\nServer.disableServerAccounting = function() {\n  serverAccounting = false;\n};\n\nServer.servers = function() {\n  return servers;\n};\n\nObject.defineProperty(Server.prototype, 'name', {\n  enumerable: true,\n  get: function() {\n    return this.s.options.host + ':' + this.s.options.port;\n  }\n});\n\nfunction isSupportedServer(response) {\n  return response && typeof response.maxWireVersion === 'number' && response.maxWireVersion >= 2;\n}\n\nfunction configureWireProtocolHandler(self, ismaster) {\n  // 3.2 wire protocol handler\n  if (ismaster.maxWireVersion >= 4) {\n    return new ThreeTwoWireProtocolSupport(new TwoSixWireProtocolSupport());\n  }\n\n  // default to 2.6 wire protocol handler\n  return new TwoSixWireProtocolSupport();\n}\n\nfunction disconnectHandler(self, type, ns, cmd, options, callback) {\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (\n    !self.s.pool.isConnected() &&\n    self.s.options.reconnect &&\n    self.s.disconnectHandler != null &&\n    !options.monitoring\n  ) {\n    self.s.disconnectHandler.add(type, ns, cmd, options, callback);\n    return true;\n  }\n\n  // If we have no connection error\n  if (!self.s.pool.isConnected()) {\n    callback(new MongoError(f('no connection available to server %s', self.name)));\n    return true;\n  }\n}\n\nfunction monitoringProcess(self) {\n  return function() {\n    // Pool was destroyed do not continue process\n    if (self.s.pool.isDestroyed()) return;\n    // Emit monitoring Process event\n    self.emit('monitoring', self);\n    // Perform ismaster call\n    // Query options\n    var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };\n    // Create a query instance\n    var query = new Query(self.s.bson, 'admin.$cmd', { ismaster: true }, queryOptions);\n    // Get start time\n    var start = new Date().getTime();\n\n    // Execute the ismaster query\n    self.s.pool.write(\n      query,\n      {\n        socketTimeout:\n          typeof self.s.options.connectionTimeout !== 'number'\n            ? 2000\n            : self.s.options.connectionTimeout,\n        monitoring: true\n      },\n      function(err, result) {\n        // Set initial lastIsMasterMS\n        self.lastIsMasterMS = new Date().getTime() - start;\n        if (self.s.pool.isDestroyed()) return;\n        // Update the ismaster view if we have a result\n        if (result) {\n          self.ismaster = result.result;\n        }\n        // Re-schedule the monitoring process\n        self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);\n      }\n    );\n  };\n}\n\nvar eventHandler = function(self, event) {\n  return function(err) {\n    // Log information of received information if in info mode\n    if (self.s.logger.isInfo()) {\n      var object = err instanceof MongoError ? JSON.stringify(err) : {};\n      self.s.logger.info(\n        f('server %s fired event %s out with message %s', self.name, event, object)\n      );\n    }\n\n    // Handle connect event\n    if (event === 'connect') {\n      // Issue an ismaster command at connect\n      // Query options\n      var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };\n      // Create a query instance\n      var compressors =\n        self.s.compression && self.s.compression.compressors ? self.s.compression.compressors : [];\n      var query = new Query(\n        self.s.bson,\n        'admin.$cmd',\n        Object.assign(\n          { ismaster: true, client: self.clientInfo, compression: compressors },\n          getSaslSupportedMechs(self.s.options)\n        ),\n        queryOptions\n      );\n      // Get start time\n      var start = new Date().getTime();\n      // Execute the ismaster query\n      self.s.pool.write(\n        query,\n        {\n          socketTimeout: self.s.options.connectionTimeout || 2000\n        },\n        function(err, result) {\n          // Set initial lastIsMasterMS\n          self.lastIsMasterMS = new Date().getTime() - start;\n\n          const serverError = extractIsMasterError(err, result);\n\n          if (serverError) {\n            self.destroy();\n            return self.emit('error', serverError);\n          }\n\n          if (!isSupportedServer(result.result)) {\n            self.destroy();\n            const latestSupportedVersion = '2.6';\n            const message =\n              'Server at ' +\n              self.s.options.host +\n              ':' +\n              self.s.options.port +\n              ' reports wire version ' +\n              (result.result.maxWireVersion || 0) +\n              ', but this version of Node.js Driver requires at least 2 (MongoDB' +\n              latestSupportedVersion +\n              ').';\n            return self.emit('error', new MongoError(message), self);\n          }\n\n          // Determine whether the server is instructing us to use a compressor\n          if (result.result && result.result.compression) {\n            for (var i = 0; i < self.s.compression.compressors.length; i++) {\n              if (result.result.compression.indexOf(self.s.compression.compressors[i]) > -1) {\n                self.s.pool.options.agreedCompressor = self.s.compression.compressors[i];\n                break;\n              }\n            }\n\n            if (self.s.compression.zlibCompressionLevel) {\n              self.s.pool.options.zlibCompressionLevel = self.s.compression.zlibCompressionLevel;\n            }\n          }\n\n          // Ensure no error emitted after initial connect when reconnecting\n          self.initialConnect = false;\n          // Save the ismaster\n          self.ismaster = result.result;\n\n          // It's a proxy change the type so\n          // the wireprotocol will send $readPreference\n          if (self.ismaster.msg === 'isdbgrid') {\n            self._type = 'mongos';\n          }\n          // Add the correct wire protocol handler\n          self.wireProtocolHandler = configureWireProtocolHandler(self, self.ismaster);\n          // Have we defined self monitoring\n          if (self.s.monitoring) {\n            self.monitoringProcessId = setTimeout(\n              monitoringProcess(self),\n              self.s.monitoringInterval\n            );\n          }\n\n          // Emit server description changed if something listening\n          sdam.emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: sdam.getTopologyType(self)\n          });\n\n          if (!self.s.inTopology) {\n            // Emit topology description changed if something listening\n            sdam.emitTopologyDescriptionChanged(self, {\n              topologyType: 'Single',\n              servers: [\n                {\n                  address: self.name,\n                  arbiters: [],\n                  hosts: [],\n                  passives: [],\n                  type: sdam.getTopologyType(self)\n                }\n              ]\n            });\n          }\n\n          // Log the ismaster if available\n          if (self.s.logger.isInfo()) {\n            self.s.logger.info(\n              f('server %s connected with ismaster [%s]', self.name, JSON.stringify(self.ismaster))\n            );\n          }\n\n          // Emit connect\n          self.emit('connect', self);\n        }\n      );\n    } else if (\n      event === 'error' ||\n      event === 'parseError' ||\n      event === 'close' ||\n      event === 'timeout' ||\n      event === 'reconnect' ||\n      event === 'attemptReconnect' ||\n      'reconnectFailed'\n    ) {\n      // Remove server instance from accounting\n      if (\n        serverAccounting &&\n        ['close', 'timeout', 'error', 'parseError', 'reconnectFailed'].indexOf(event) !== -1\n      ) {\n        // Emit toplogy opening event if not in topology\n        if (!self.s.inTopology) {\n          self.emit('topologyOpening', { topologyId: self.id });\n        }\n\n        delete servers[self.id];\n      }\n\n      if (event === 'close') {\n        // Closing emits a server description changed event going to unknown.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        });\n      }\n\n      // Reconnect failed return error\n      if (event === 'reconnectFailed') {\n        self.emit('reconnectFailed', err);\n        // Emit error if any listeners\n        if (self.listeners('error').length > 0) {\n          self.emit('error', err);\n        }\n        // Terminate\n        return;\n      }\n\n      // On first connect fail\n      if (\n        self.s.pool.state === 'disconnected' &&\n        self.initialConnect &&\n        ['close', 'timeout', 'error', 'parseError'].indexOf(event) !== -1\n      ) {\n        self.initialConnect = false;\n        return self.emit(\n          'error',\n          new MongoNetworkError(\n            f('failed to connect to server [%s] on first connect [%s]', self.name, err)\n          )\n        );\n      }\n\n      // Reconnect event, emit the server\n      if (event === 'reconnect') {\n        // Reconnecting emits a server description changed event going from unknown to the\n        // current server type.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: sdam.getTopologyType(self)\n        });\n        return self.emit(event, self);\n      }\n\n      // Emit the event\n      self.emit(event, err);\n    }\n  };\n};\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nServer.prototype.connect = function(options) {\n  var self = this;\n  options = options || {};\n\n  // Set the connections\n  if (serverAccounting) servers[this.id] = this;\n\n  // Do not allow connect to be called on anything that's not disconnected\n  if (self.s.pool && !self.s.pool.isDisconnected() && !self.s.pool.isDestroyed()) {\n    throw new MongoError(f('server instance in invalid state %s', self.s.pool.state));\n  }\n\n  // Create a pool\n  self.s.pool = new Pool(this, Object.assign(self.s.options, options, { bson: this.s.bson }));\n\n  // Set up listeners\n  self.s.pool.on('close', eventHandler(self, 'close'));\n  self.s.pool.on('error', eventHandler(self, 'error'));\n  self.s.pool.on('timeout', eventHandler(self, 'timeout'));\n  self.s.pool.on('parseError', eventHandler(self, 'parseError'));\n  self.s.pool.on('connect', eventHandler(self, 'connect'));\n  self.s.pool.on('reconnect', eventHandler(self, 'reconnect'));\n  self.s.pool.on('reconnectFailed', eventHandler(self, 'reconnectFailed'));\n\n  // Set up listeners for command monitoring\n  relayEvents(self.s.pool, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n  // Emit toplogy opening event if not in topology\n  if (!self.s.inTopology) {\n    this.emit('topologyOpening', { topologyId: self.id });\n  }\n\n  // Emit opening server event\n  self.emit('serverOpening', {\n    topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n    address: self.name\n  });\n\n  // Connect with optional auth settings\n  if (options.auth) {\n    self.s.pool.connect.apply(self.s.pool, options.auth);\n  } else {\n    self.s.pool.connect();\n  }\n};\n\n/**\n * Get the server description\n * @method\n * @return {object}\n */\nServer.prototype.getDescription = function() {\n  var ismaster = this.ismaster || {};\n  var description = {\n    type: sdam.getTopologyType(this),\n    address: this.name\n  };\n\n  // Add fields if available\n  if (ismaster.hosts) description.hosts = ismaster.hosts;\n  if (ismaster.arbiters) description.arbiters = ismaster.arbiters;\n  if (ismaster.passives) description.passives = ismaster.passives;\n  if (ismaster.setName) description.setName = ismaster.setName;\n  return description;\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nServer.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nServer.prototype.unref = function() {\n  this.s.pool.unref();\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nServer.prototype.isConnected = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isConnected();\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nServer.prototype.isDestroyed = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isDestroyed();\n};\n\nfunction basicWriteValidations(self) {\n  if (!self.s.pool) return new MongoError('server instance is not connected');\n  if (self.s.pool.isDestroyed()) return new MongoError('server instance pool was destroyed');\n}\n\nfunction basicReadValidations(self, options) {\n  basicWriteValidations(self, options);\n\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    throw new Error('readPreference must be an instance of ReadPreference');\n  }\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.command = function(ns, cmd, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicReadValidations(self, options);\n  if (result) return callback(result);\n\n  // Clone the options\n  options = Object.assign({}, options, { wireProtocolCommand: false });\n\n  // Debug log\n  if (self.s.logger.isDebug())\n    self.s.logger.debug(\n      f(\n        'executing command [%s] against %s',\n        JSON.stringify({\n          ns: ns,\n          cmd: cmd,\n          options: debugOptions(debugFields, options)\n        }),\n        self.name\n      )\n    );\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'command', ns, cmd, options, callback)) return;\n\n  // Check if we have collation support\n  if (this.ismaster && this.ismaster.maxWireVersion < 5 && cmd.collation) {\n    return callback(new MongoError(f('server %s does not support collation', this.name)));\n  }\n\n  // Are we executing against a specific topology\n  var topology = options.topology || {};\n  // Create the query object\n  var query = self.wireProtocolHandler.command(self.s.bson, ns, cmd, {}, topology, options);\n  // Set slave OK of the query\n  query.slaveOk = options.readPreference ? options.readPreference.slaveOk() : false;\n\n  // Write options\n  var writeOptions = {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    command: true,\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : false,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false,\n    requestId: query.requestId,\n    socketTimeout: typeof options.socketTimeout === 'number' ? options.socketTimeout : null,\n    session: options.session || null\n  };\n\n  // Write the operation to the pool\n  self.s.pool.write(query, writeOptions, callback);\n};\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.insert = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'insert', ns, ops, options, callback)) return;\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n\n  // Execute write\n  return self.wireProtocolHandler.insert(\n    self.s.pool,\n    self.ismaster,\n    ns,\n    self.s.bson,\n    ops,\n    options,\n    callback\n  );\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.update = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'update', ns, ops, options, callback)) return;\n\n  // Check if we have collation support\n  if (this.ismaster && this.ismaster.maxWireVersion < 5 && options.collation) {\n    return callback(new MongoError(f('server %s does not support collation', this.name)));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.wireProtocolHandler.update(\n    self.s.pool,\n    self.ismaster,\n    ns,\n    self.s.bson,\n    ops,\n    options,\n    callback\n  );\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.remove = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'remove', ns, ops, options, callback)) return;\n\n  // Check if we have collation support\n  if (this.ismaster && this.ismaster.maxWireVersion < 5 && options.collation) {\n    return callback(new MongoError(f('server %s does not support collation', this.name)));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.wireProtocolHandler.remove(\n    self.s.pool,\n    self.ismaster,\n    ns,\n    self.s.bson,\n    ops,\n    options,\n    callback\n  );\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nServer.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.logout = function(dbName, callback) {\n  this.s.pool.logout(dbName, callback);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.auth = function(mechanism, db) {\n  var self = this;\n\n  if (mechanism === 'default') {\n    mechanism = getDefaultAuthMechanism(self.ismaster);\n  }\n\n  // Slice all the arguments off\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Set the mechanism\n  args[0] = mechanism;\n  // Get the callback\n  var callback = args[args.length - 1];\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'auth', db, args, {}, callback)) {\n    return;\n  }\n\n  // Do not authenticate if we are an arbiter\n  if (this.lastIsMaster() && this.lastIsMaster().arbiterOnly) {\n    return callback(null, true);\n  }\n\n  // Apply the arguments to the pool\n  self.s.pool.auth.apply(self.s.pool, args);\n};\n\n/**\n * Compare two server instances\n * @method\n * @param {Server} server Server to compare equality against\n * @return {boolean}\n */\nServer.prototype.equals = function(server) {\n  if (typeof server === 'string') return this.name.toLowerCase() === server.toLowerCase();\n  if (server.name) return this.name.toLowerCase() === server.name.toLowerCase();\n  return false;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nServer.prototype.connections = function() {\n  return this.s.pool.allConnections();\n};\n\n/**\n * Get server\n * @method\n * @return {Server}\n */\nServer.prototype.getServer = function() {\n  return this;\n};\n\n/**\n * Get connection\n * @method\n * @return {Connection}\n */\nServer.prototype.getConnection = function() {\n  return this.s.pool.get();\n};\n\nvar listeners = ['close', 'error', 'timeout', 'parseError', 'connect'];\n\n/**\n * Destroy the server connection\n * @method\n * @param {boolean} [options.emitClose=false] Emit close event on destroy\n * @param {boolean} [options.emitDestroy=false] Emit destroy event on destroy\n * @param {boolean} [options.force=false] Force destroy the pool\n */\nServer.prototype.destroy = function(options) {\n  options = options || {};\n  var self = this;\n\n  // Set the connections\n  if (serverAccounting) delete servers[this.id];\n\n  // Destroy the monitoring process if any\n  if (this.monitoringProcessId) {\n    clearTimeout(this.monitoringProcessId);\n  }\n\n  // No pool, return\n  if (!self.s.pool) return;\n\n  // Emit close event\n  if (options.emitClose) {\n    self.emit('close', self);\n  }\n\n  // Emit destroy event\n  if (options.emitDestroy) {\n    self.emit('destroy', self);\n  }\n\n  // Remove all listeners\n  listeners.forEach(function(event) {\n    self.s.pool.removeAllListeners(event);\n  });\n\n  // Emit opening server event\n  if (self.listeners('serverClosed').length > 0)\n    self.emit('serverClosed', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name\n    });\n\n  // Emit toplogy opening event if not in topology\n  if (self.listeners('topologyClosed').length > 0 && !self.s.inTopology) {\n    self.emit('topologyClosed', { topologyId: self.id });\n  }\n\n  if (self.s.logger.isDebug()) {\n    self.s.logger.debug(f('destroy called on server %s', self.name));\n  }\n\n  // Destroy the pool\n  this.s.pool.destroy(options.force);\n};\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Server#connect\n * @type {Server}\n */\n\n/**\n * A server reconnect event, used to verify that the server topology has reconnected\n *\n * @event Server#reconnect\n * @type {Server}\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Server#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Server#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Server#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Server#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Server#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Server#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * Server reconnect failed\n *\n * @event Server#reconnectFailed\n * @type {Error}\n */\n\n/**\n * Server connection pool closed\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server connection pool caused an error\n *\n * @event Server#error\n * @type {Error}\n */\n\n/**\n * Server destroyed was called\n *\n * @event Server#destroy\n * @type {Server}\n */\n\nmodule.exports = Server;\n","'use strict';\n\nconst os = require('os');\nconst f = require('util').format;\nconst ReadPreference = require('./read_preference');\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n// Get package.json variable\nvar driverVersion = require('../../package.json').version;\nvar nodejsversion = f('Node.js %s, %s', process.version, os.endianness());\nvar type = os.type();\nvar name = process.platform;\nvar architecture = process.arch;\nvar release = os.release();\n\nfunction createClientInfo(options) {\n  // Build default client information\n  var clientInfo = options.clientInfo\n    ? clone(options.clientInfo)\n    : {\n        driver: {\n          name: 'nodejs-core',\n          version: driverVersion\n        },\n        os: {\n          type: type,\n          name: name,\n          architecture: architecture,\n          version: release\n        }\n      };\n\n  // Is platform specified\n  if (clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') === -1) {\n    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);\n  } else if (!clientInfo.platform) {\n    clientInfo.platform = nodejsversion;\n  }\n\n  // Do we have an application specific string\n  if (options.appname) {\n    // Cut at 128 bytes\n    var buffer = new Buffer(options.appname);\n    // Return the truncated appname\n    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;\n    // Add to the clientInfo\n    clientInfo.application = { name: appname };\n  }\n\n  return clientInfo;\n}\n\nfunction createCompressionInfo(options) {\n  if (!options.compression || !options.compression.compressors) {\n    return [];\n  }\n\n  // Check that all supplied compressors are valid\n  options.compression.compressors.forEach(function(compressor) {\n    if (compressor !== 'snappy' && compressor !== 'zlib') {\n      throw new Error('compressors must be at least one of snappy or zlib');\n    }\n  });\n\n  return options.compression.compressors;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if (!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [],\n      hosts: [],\n      passives: [],\n      type: 'Unknown'\n    };\n  }\n\n  return self.s.serverDescription;\n};\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if (self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar getPreviousTopologyDescription = function(self) {\n  if (!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [\n        {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        }\n      ]\n    };\n  }\n\n  return self.s.topologyDescription;\n};\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if (newType !== currentType) return true;\n  return false;\n};\n\nvar getTopologyType = function(self, ismaster) {\n  if (!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if (!ismaster) return 'Unknown';\n  if (ismaster.ismaster && ismaster.msg === 'isdbgrid') return 'Mongos';\n  if (ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if (ismaster.ismaster) return 'RSPrimary';\n  if (ismaster.secondary) return 'RSSecondary';\n  if (ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n};\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if (self.s.state === 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster: true }, { monitoring: true }, function(err, r) {\n      if (!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: self.name\n        });\n\n        // Did the server change\n        if (changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: self.name\n        });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if (typeof callback === 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for (var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n};\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function() {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setTimeout(fn, time);\n    }\n    return this;\n  };\n\n  this.stop = function() {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    if (timer && timer._called) return false;\n    return timer !== false;\n  };\n}\n\nfunction diff(previous, current) {\n  // Difference document\n  var diff = {\n    servers: []\n  };\n\n  // Previous entry\n  if (!previous) {\n    previous = { servers: [] };\n  }\n\n  // Check if we have any previous servers missing in the current ones\n  for (var i = 0; i < previous.servers.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < current.servers.length; j++) {\n      if (current.servers[j].address.toLowerCase() === previous.servers[i].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // Add to the diff\n      diff.servers.push({\n        address: previous.servers[i].address,\n        from: previous.servers[i].type,\n        to: 'Unknown'\n      });\n    }\n  }\n\n  // Check if there are any severs that don't exist\n  for (j = 0; j < current.servers.length; j++) {\n    found = false;\n\n    // Go over all the previous servers\n    for (i = 0; i < previous.servers.length; i++) {\n      if (previous.servers[i].address.toLowerCase() === current.servers[j].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    // Add the server to the diff\n    if (!found) {\n      diff.servers.push({\n        address: current.servers[j].address,\n        from: 'Unknown',\n        to: current.servers[j].type\n      });\n    }\n  }\n\n  // Got through all the servers\n  for (i = 0; i < previous.servers.length; i++) {\n    var prevServer = previous.servers[i];\n\n    // Go through all current servers\n    for (j = 0; j < current.servers.length; j++) {\n      var currServer = current.servers[j];\n\n      // Matching server\n      if (prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {\n        // We had a change in state\n        if (prevServer.type !== currServer.type) {\n          diff.servers.push({\n            address: prevServer.address,\n            from: prevServer.type,\n            to: currServer.type\n          });\n        }\n      }\n    }\n  }\n\n  // Return difference\n  return diff;\n}\n\n/**\n * Shared function to determine clusterTime for a given topology\n *\n * @param {*} topology\n * @param {*} clusterTime\n */\nfunction resolveClusterTime(topology, $clusterTime) {\n  if (topology.clusterTime == null) {\n    topology.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(topology.clusterTime.clusterTime)) {\n      topology.clusterTime = $clusterTime;\n    }\n  }\n}\n\n// NOTE: this is a temporary move until the topologies can be more formally refactored\n//       to share code.\nconst SessionMixins = {\n  endSessions: function(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    // TODO:\n    //   When connected to a sharded cluster the endSessions command\n    //   can be sent to any mongos. When connected to a replica set the\n    //   endSessions command MUST be sent to the primary if the primary\n    //   is available, otherwise it MUST be sent to any available secondary.\n    //   Is it enough to use: ReadPreference.primaryPreferred ?\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n};\n\nconst RETRYABLE_WIRE_VERSION = 6;\n\n/**\n * Determines whether the provided topology supports retryable writes\n *\n * @param {Mongos|Replset} topology\n */\nconst isRetryableWritesSupported = function(topology) {\n  const maxWireVersion = topology.lastIsMaster().maxWireVersion;\n  if (maxWireVersion < RETRYABLE_WIRE_VERSION) {\n    return false;\n  }\n\n  if (!topology.logicalSessionTimeoutMinutes) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Relays events for a given listener and emitter\n *\n * @param {EventEmitter} listener the EventEmitter to listen to the events for\n * @param {EventEmitter} emitter the EventEmitter to relay the events on\n */\nfunction relayEvents(listener, emitter, events) {\n  events.forEach(eventName => listener.on(eventName, event => emitter.emit(eventName, event)));\n}\n\nmodule.exports.SessionMixins = SessionMixins;\nmodule.exports.resolveClusterTime = resolveClusterTime;\nmodule.exports.inquireServerState = inquireServerState;\nmodule.exports.getTopologyType = getTopologyType;\nmodule.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;\nmodule.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;\nmodule.exports.cloneOptions = cloneOptions;\nmodule.exports.createClientInfo = createClientInfo;\nmodule.exports.createCompressionInfo = createCompressionInfo;\nmodule.exports.clone = clone;\nmodule.exports.diff = diff;\nmodule.exports.Interval = Interval;\nmodule.exports.Timeout = Timeout;\nmodule.exports.isRetryableWritesSupported = isRetryableWritesSupported;\nmodule.exports.relayEvents = relayEvents;\n","'use strict';\nconst URL = require('url');\nconst qs = require('querystring');\nconst dns = require('dns');\nconst MongoParseError = require('./error').MongoParseError;\n\n/**\n * The following regular expression validates a connection string and breaks the\n * provide string into the following capture groups: [protocol, username, password, hosts]\n */\nconst HOSTS_RX = /(mongodb(?:\\+srv|)):\\/\\/(?: (?:[^:]*) (?: : ([^@]*) )? @ )?([^/?]*)(?:\\/|)(.*)/;\n\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param {String} srvAddress The address to check against a domain\n * @param {String} parentDomain The domain to check the provided address against\n * @return {Boolean} Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\n/**\n * Lookup an `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param {string} uri The connection string to parse\n * @param {object} options Optional user provided connection string options\n * @param {function} callback\n */\nfunction parseSrvConnectionString(uri, options, callback) {\n  const result = URL.parse(uri, true);\n\n  if (result.hostname.split('.').length < 3) {\n    return callback(new MongoParseError('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new MongoParseError('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new MongoParseError(`Ports not accepted with '${PROTOCOL_MONGODB_SRV}' URIs`));\n  }\n\n  let srvAddress = `_mongodb._tcp.${result.host}`;\n  dns.resolveSrv(srvAddress, (err, addresses) => {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new MongoParseError('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(\n          new MongoParseError('Server record does not share hostname with parent URI')\n        );\n      }\n    }\n\n    let base = result.auth ? `mongodb://${result.auth}@` : `mongodb://`;\n    let connectionStrings = addresses.map(\n      (address, i) =>\n        i === 0 ? `${base}${address.name}:${address.port}` : `${address.name}:${address.port}`\n    );\n\n    let connectionString = `${connectionStrings.join(',')}/`;\n    let connectionStringOptions = [];\n\n    // Add the default database if needed\n    if (result.path) {\n      let defaultDb = result.path.slice(1);\n      if (defaultDb.indexOf('?') !== -1) {\n        defaultDb = defaultDb.slice(0, defaultDb.indexOf('?'));\n      }\n\n      connectionString += defaultDb;\n    }\n\n    // Default to SSL true\n    if (!options.ssl && (!result.search || result.query['ssl'] == null)) {\n      connectionStringOptions.push('ssl=true');\n    }\n\n    // Keep original uri options\n    if (result.search) {\n      connectionStringOptions.push(result.search.replace('?', ''));\n    }\n\n    dns.resolveTxt(result.host, (err, record) => {\n      if (err) {\n        if (err.code !== 'ENODATA') {\n          return callback(err);\n        }\n        record = null;\n      }\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        record = record[0];\n        record = record.length > 1 ? record.join('') : record[0];\n        if (!record.includes('authSource') && !record.includes('replicaSet')) {\n          return callback(\n            new MongoParseError('Text record must only set `authSource` or `replicaSet`')\n          );\n        }\n\n        connectionStringOptions.push(record);\n      }\n\n      // Add any options to the connection string\n      if (connectionStringOptions.length) {\n        connectionString += `?${connectionStringOptions.join('&')}`;\n      }\n\n      parseConnectionString(connectionString, callback);\n    });\n  });\n}\n\n/**\n * Parses a query string item according to the connection string spec\n *\n * @param {Array|String} value The value to parse\n * @return {Array|Object|String} The parsed value\n */\nfunction parseQueryStringItemValue(value) {\n  if (Array.isArray(value)) {\n    // deduplicate and simplify arrays\n    value = value.filter((value, idx) => value.indexOf(value) === idx);\n    if (value.length === 1) value = value[0];\n  } else if (value.indexOf(':') > 0) {\n    value = value.split(',').reduce((result, pair) => {\n      const parts = pair.split(':');\n      result[parts[0]] = parseQueryStringItemValue(parts[1]);\n      return result;\n    }, {});\n  } else if (value.toLowerCase() === 'true' || value.toLowerCase() === 'false') {\n    value = value.toLowerCase() === 'true';\n  } else if (!Number.isNaN(value)) {\n    const numericValue = parseFloat(value);\n    if (!Number.isNaN(numericValue)) {\n      value = parseFloat(value);\n    }\n  }\n\n  return value;\n}\n\n/**\n * Parses a query string according the connection string spec.\n *\n * @param {String} query The query string to parse\n * @return {Object|Error} The parsed query string as an object, or an error if one was encountered\n */\nfunction parseQueryString(query) {\n  const result = {};\n  let parsedQueryString = qs.parse(query);\n\n  for (const key in parsedQueryString) {\n    const value = parsedQueryString[key];\n    if (value === '' || value == null) {\n      return new MongoParseError('Incomplete key value pair for option');\n    }\n\n    result[key.toLowerCase()] = parseQueryStringItemValue(value);\n  }\n\n  // special cases for known deprecated options\n  if (result.wtimeout && result.wtimeoutms) {\n    delete result.wtimeout;\n    console.warn('Unsupported option `wtimeout` specified');\n  }\n\n  return Object.keys(result).length ? result : null;\n}\n\nconst PROTOCOL_MONGODB = 'mongodb';\nconst PROTOCOL_MONGODB_SRV = 'mongodb+srv';\nconst SUPPORTED_PROTOCOLS = [PROTOCOL_MONGODB, PROTOCOL_MONGODB_SRV];\n\n/**\n * Parses a MongoDB connection string\n *\n * @param {*} uri the MongoDB connection string to parse\n * @param {object} [options] Optional settings.\n * @param {parseCallback} callback\n */\nfunction parseConnectionString(uri, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Check for bad uris before we parse\n  try {\n    URL.parse(uri);\n  } catch (e) {\n    return callback(new MongoParseError('URI malformed, cannot be parsed'));\n  }\n\n  const cap = uri.match(HOSTS_RX);\n  if (!cap) {\n    return callback(new MongoParseError('Invalid connection string'));\n  }\n\n  const protocol = cap[1];\n  if (SUPPORTED_PROTOCOLS.indexOf(protocol) === -1) {\n    return callback(new MongoParseError('Invalid protocol provided'));\n  }\n\n  if (protocol === PROTOCOL_MONGODB_SRV) {\n    return parseSrvConnectionString(uri, options, callback);\n  }\n\n  const dbAndQuery = cap[4].split('?');\n  const db = dbAndQuery.length > 0 ? dbAndQuery[0] : null;\n  const query = dbAndQuery.length > 1 ? dbAndQuery[1] : null;\n  let parsedOptions = parseQueryString(query);\n  if (parsedOptions instanceof MongoParseError) {\n    return callback(parsedOptions);\n  }\n\n  parsedOptions = Object.assign({}, parsedOptions, options);\n  const auth = { username: null, password: null, db: db && db !== '' ? qs.unescape(db) : null };\n  if (cap[4].split('?')[0].indexOf('@') !== -1) {\n    return callback(new MongoParseError('Unescaped slash in userinfo section'));\n  }\n\n  const authorityParts = cap[3].split('@');\n  if (authorityParts.length > 2) {\n    return callback(new MongoParseError('Unescaped at-sign in authority section'));\n  }\n\n  if (authorityParts.length > 1) {\n    const authParts = authorityParts.shift().split(':');\n    if (authParts.length > 2) {\n      return callback(new MongoParseError('Unescaped colon in authority section'));\n    }\n\n    auth.username = qs.unescape(authParts[0]);\n    auth.password = authParts[1] ? qs.unescape(authParts[1]) : null;\n  }\n\n  let hostParsingError = null;\n  const hosts = authorityParts\n    .shift()\n    .split(',')\n    .map(host => {\n      let parsedHost = URL.parse(`mongodb://${host}`);\n      if (parsedHost.path === '/:') {\n        hostParsingError = new MongoParseError('Double colon in host identifier');\n        return null;\n      }\n\n      // heuristically determine if we're working with a domain socket\n      if (host.match(/\\.sock/)) {\n        parsedHost.hostname = qs.unescape(host);\n        parsedHost.port = null;\n      }\n\n      if (Number.isNaN(parsedHost.port)) {\n        hostParsingError = new MongoParseError('Invalid port (non-numeric string)');\n        return;\n      }\n\n      const result = {\n        host: parsedHost.hostname,\n        port: parsedHost.port ? parseInt(parsedHost.port) : null\n      };\n\n      if (result.port === 0) {\n        hostParsingError = new MongoParseError('Invalid port (zero) with hostname');\n        return;\n      }\n\n      if (result.port > 65535) {\n        hostParsingError = new MongoParseError('Invalid port (larger than 65535) with hostname');\n        return;\n      }\n\n      if (result.port < 0) {\n        hostParsingError = new MongoParseError('Invalid port (negative number)');\n        return;\n      }\n\n      return result;\n    })\n    .filter(host => !!host);\n\n  if (hostParsingError) {\n    return callback(hostParsingError);\n  }\n\n  if (hosts.length === 0 || hosts[0].host === '' || hosts[0].host === null) {\n    return callback(new MongoParseError('No hostname or hostnames provided in connection string'));\n  }\n\n  callback(null, {\n    hosts: hosts,\n    auth: auth.db || auth.username ? auth : null,\n    options: Object.keys(parsedOptions).length ? parsedOptions : null\n  });\n}\n\nmodule.exports = parseConnectionString;\n","'use strict';\n\nconst crypto = require('crypto');\n\nconst uuidV4 = () => {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n};\n\nmodule.exports = {\n  uuidV4: uuidV4\n};\n","'use strict';\n\nvar copy = require('../connection/utils').copy,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  KillCursor = require('../connection/commands').KillCursor,\n  GetMore = require('../connection/commands').GetMore,\n  Query = require('../connection/commands').Query,\n  f = require('util').format,\n  MongoError = require('../error').MongoError,\n  getReadPreference = require('./shared').getReadPreference;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\nvar WireProtocol = function() {};\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split('.');\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (typeof options.bypassDocumentValidation === 'boolean') {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  var queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = false;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f('%s.$cmd', d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n};\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  var cursorId = cursorState.cursorId;\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, ns, [cursorId]);\n\n  // Build killCursor options\n  const options = {\n    immediateRelease: true,\n    noResponse: true\n  };\n\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(killCursor, options, callback);\n    } catch (err) {\n      if (typeof callback === 'function') {\n        callback(err, null);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoError('cursor does not exist, was killed or timed out'), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId === 'number' ? Long.fromNumber(r.cursorId) : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  };\n\n  // Contains any query options\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(getMore, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if (cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options);\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f('command %s does not return a cursor', JSON.stringify(cmd)));\n  }\n};\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if (cursorState.limit === 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if (\n    cursorState.limit < 0 ||\n    cursorState.limit < cursorState.batchSize ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  // Add special modifiers to the query\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  // Add the query\n  findCmd['$query'] = cmd.query;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f('server find command does not support a readConcern level of %s', cmd.readConcern.level)\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if (typeof cmd.tailable === 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if (typeof cmd.oplogReplay === 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if (typeof cmd.noCursorTimeout === 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if (typeof cmd.awaitData === 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if (typeof cmd.partial === 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n};\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for (var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f(\n        'server %s command does not support a readConcern level of %s',\n        JSON.stringify(cmd),\n        cmd.readConcern.level\n      )\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\nmodule.exports = WireProtocol;\n","'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst f = require('util').format;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\n\nvar WireProtocol = function(legacyWireProtocol) {\n  this.legacyWireProtocol = legacyWireProtocol;\n};\n\n/**\n * Optionally decorate a command with transactions specific keys\n *\n * @param {Object} command the command to decorate\n * @param {ClientSession} session the session tracking transaction state\n * @param {boolean} [isRetryableWrite=false] if true, will be decorated for retryable writes\n */\nfunction decorateWithTransactionsData(command, session, isRetryableWrite) {\n  if (!session) {\n    return;\n  }\n\n  // first apply non-transaction-specific sessions data\n  const serverSession = session.serverSession;\n  const inTransaction = session.inTransaction();\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now try to apply tansaction-specific data\n  if (!inTransaction) {\n    return;\n  }\n\n  command.stmtId = serverSession.stmtId;\n  command.autocommit = false;\n\n  if (serverSession.stmtId === 0) {\n    command.startTransaction = true;\n\n    const readConcern = session.transactionOptions.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  } else {\n    // Drivers MUST add this readConcern to the first command in a transaction and MUST NOT\n    // automatically add any readConcern to subsequent commands. Drivers MUST ignore all other\n    // readConcerns.\n    if (command.readConcern) {\n      delete command.readConcern;\n    }\n  }\n}\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split('.');\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // If we have collation passed in\n  if (options.collation) {\n    for (var i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (typeof options.bypassDocumentValidation === 'boolean') {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // optionally decorate command with transactions data\n  decorateWithTransactionsData(writeCommand, options.session, options.willRetryWrite);\n\n  // Options object\n  var opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  var queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = false;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f('%s.$cmd', d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n};\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n  const cursorId = cursorState.cursorId;\n  // Create killCursor command\n  var killcursorCmd = {\n    killCursors: parts.join('.'),\n    cursors: [cursorId]\n  };\n\n  // Build Query object\n  var query = new Query(bson, commandns, killcursorCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Kill cursor callback\n  var killCursorCallback = function(err, result) {\n    if (err) {\n      if (typeof callback !== 'function') return;\n      return callback(err);\n    }\n\n    // Result\n    var r = result.message;\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      if (typeof callback !== 'function') return;\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(r.documents) || r.documents.length === 0) {\n      if (typeof callback !== 'function') return;\n      return callback(\n        new MongoError(f('invalid killCursors result returned for cursor id %s', cursorId))\n      );\n    }\n\n    // Return the result\n    if (typeof callback === 'function') {\n      callback(null, r.documents[0]);\n    }\n  };\n\n  const options = { command: true };\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(query, options, killCursorCallback);\n    } catch (err) {\n      killCursorCallback(err, null);\n    }\n\n    return;\n  }\n\n  // Callback\n  if (typeof callback === 'function') callback(null, null);\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  options = options || {};\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n\n  // Create getMore command\n  var getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: parts.join('.'),\n    batchSize: Math.abs(batchSize)\n  };\n\n  // optionally decorate command with transactions data\n  decorateWithTransactionsData(getMoreCmd, options.session);\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  // Build Query object\n  var query = new Query(bson, commandns, getMoreCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    // Raw, return all the extracted documents\n    if (raw) {\n      cursorState.documents = r.documents;\n      cursorState.cursorId = r.cursorId;\n      return callback(null, r.documents);\n    }\n\n    // We have an error detected\n    if (r.documents[0].ok === 0) {\n      return callback(new MongoError(r.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    var cursorId =\n      typeof r.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(r.documents[0].cursor.id)\n        : r.documents[0].cursor.id;\n\n    // Set all the values\n    cursorState.documents = r.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    // Return the result\n    callback(null, r.documents[0], r.connection);\n  };\n\n  // Query options\n  var queryOptions = { command: true };\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Add the result field needed\n  queryOptions.documentsReturnedIn = 'nextBatch';\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // We need to increment the statement id if we're in a transaction\n  if (options.session && options.session.inTransaction()) {\n    options.session.incrementStatementId();\n  }\n\n  // Write out the getMore command\n  connection.write(query, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  options = options || {};\n  // Check if this is a wire protocol command or not\n  var wireProtocolCommand =\n    typeof options.wireProtocolCommand === 'boolean' ? options.wireProtocolCommand : true;\n\n  // Establish type of command\n  let query;\n  if (cmd.find && wireProtocolCommand) {\n    // Create the find command\n    query = executeFindCommand(bson, ns, cmd, cursorState, topology, options);\n    // Mark the cmd as virtual\n    cmd.virtual = false;\n    // Signal the documents are in the firstBatch value\n    query.documentsReturnedIn = 'firstBatch';\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    query = setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f('command %s does not return a cursor', JSON.stringify(cmd)));\n  }\n\n  // optionally decorate query with transaction data\n  decorateWithTransactionsData(query.query, options.session);\n\n  // We need to increment the statement id if we're in a transaction\n  if (options.session && options.session.inTransaction()) {\n    options.session.incrementStatementId();\n  }\n\n  return query;\n};\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n// FIND/GETMORE SPEC\n// {\n//     “find”: <string>,\n//     “filter”: { ... },\n//     “sort”: { ... },\n//     “projection”: { ... },\n//     “hint”: { ... },\n//     “skip”: <int>,\n//     “limit”: <int>,\n//     “batchSize”: <int>,\n//     “singleBatch”: <bool>,\n//     “comment”: <string>,\n//     “maxScan”: <int>,\n//     “maxTimeMS”: <int>,\n//     “max”: { ... },\n//     “min”: { ... },\n//     “returnKey”: <bool>,\n//     “showRecordId”: <bool>,\n//     “snapshot”: <bool>,\n//     “tailable”: <bool>,\n//     “oplogReplay”: <bool>,\n//     “noCursorTimeout”: <bool>,\n//     “awaitData”: <bool>,\n//     “partial”: <bool>,\n//     “$readPreference”: { ... }\n// }\n\n//\n// Execute a find command\nvar executeFindCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n\n  // Build actual find command\n  var findCmd = {\n    find: parts.join('.')\n  };\n\n  // I we provided a filter\n  if (cmd.query) {\n    // Check if the user is passing in the $query parameter\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  // Sort value\n  var sortValue = cmd.sort;\n\n  // Handle issue of sort being an Array\n  if (Array.isArray(sortValue)) {\n    var sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      var sortDirection = sortValue[1];\n      // Translate the sort order text\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      // Set the sort order\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (var i = 0; i < sortValue.length; i++) {\n        sortDirection = sortValue[i][1];\n        // Translate the sort order text\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        // Set the sort order\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  // Add sort to command\n  if (cmd.sort) findCmd.sort = sortValue;\n  // Add a projection to the command\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  // Add a hint to the command\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  // Add a skip\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  // Add a limit\n  if (cmd.limit) findCmd.limit = cmd.limit;\n\n  // Check if we wish to have a singleBatch\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  // Add a batchSize\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  // If we have comment set\n  if (cmd.comment) findCmd.comment = cmd.comment;\n\n  // If we have maxScan\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n\n  // If we have maxTimeMS set\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n\n  // If we have min\n  if (cmd.min) findCmd.min = cmd.min;\n\n  // If we have max\n  if (cmd.max) findCmd.max = cmd.max;\n\n  // If we have returnKey set\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n\n  // If we have showDiskLoc set\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n\n  // If we have snapshot set\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n\n  // If we have tailable set\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n\n  // If we have oplogReplay set\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n\n  // If we have noCursorTimeout set\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n\n  // If we have awaitData set\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n\n  // If we have partial set\n  if (cmd.partial) findCmd.partial = cmd.partial;\n\n  // If we have collation passed in\n  if (cmd.collation) findCmd.collation = cmd.collation;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  // Did we provide a readConcern\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // Set up the serialize and ignoreUndefined fields\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    findCmd = {\n      $query: findCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  decorateWithTransactionsData(findCmd, options.session);\n\n  // Build Query object\n  var query = new Query(bson, commandns, findCmd, {\n    numberToSkip: 0,\n    numberToReturn: 1,\n    checkKeys: false,\n    returnFieldSelector: null,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for (var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  decorateWithTransactionsData(finalCmd, options.session);\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\nmodule.exports = WireProtocol;\n","'use strict';\n\nvar Snappy = require('../connection/utils').retrieveSnappy(),\n  zlib = require('zlib');\n\nvar compressorIDs = {\n  snappy: 1,\n  zlib: 2\n};\n\nvar uncompressibleCommands = [\n  'ismaster',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n];\n\n// Facilitate compressing a message using an agreed compressor\nvar compress = function(self, dataToBeCompressed, callback) {\n  switch (self.options.agreedCompressor) {\n    case 'snappy':\n      Snappy.compress(dataToBeCompressed, callback);\n      break;\n    case 'zlib':\n      // Determine zlibCompressionLevel\n      var zlibOptions = {};\n      if (self.options.zlibCompressionLevel) {\n        zlibOptions.level = self.options.zlibCompressionLevel;\n      }\n      zlib.deflate(dataToBeCompressed, zlibOptions, callback);\n      break;\n    default:\n      throw new Error(\n        'Attempt to compress message using unknown compressor \"' +\n          self.options.agreedCompressor +\n          '\".'\n      );\n  }\n};\n\n// Decompress a message using the given compressor\nvar decompress = function(compressorID, compressedData, callback) {\n  if (compressorID < 0 || compressorID > compressorIDs.length) {\n    throw new Error(\n      'Server sent message compressed using an unsupported compressor. (Received compressor ID ' +\n        compressorID +\n        ')'\n    );\n  }\n  switch (compressorID) {\n    case compressorIDs.snappy:\n      Snappy.uncompress(compressedData, callback);\n      break;\n    case compressorIDs.zlib:\n      zlib.inflate(compressedData, callback);\n      break;\n    default:\n      callback(null, compressedData);\n  }\n};\n\nmodule.exports = {\n  compressorIDs: compressorIDs,\n  uncompressibleCommands: uncompressibleCommands,\n  compress: compress,\n  decompress: decompress\n};\n","'use strict';\n\nvar ReadPreference = require('../topologies/read_preference'),\n  MongoError = require('../error').MongoError;\n\nvar MESSAGE_HEADER_SIZE = 16;\n\n// OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012\n};\n\nvar getReadPreference = function(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary');\n  // If we have an option readPreference override the command one\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  if (\n    options.session &&\n    options.session.inTransaction() &&\n    !readPreference.equals(ReadPreference.primary)\n  ) {\n    throw new MongoError('read preference in a transaction must be primary');\n  }\n\n  return readPreference;\n};\n\n// Parses the header of a wire protocol message\nvar parseHeader = function(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nmodule.exports = {\n  getReadPreference: getReadPreference,\n  MESSAGE_HEADER_SIZE: MESSAGE_HEADER_SIZE,\n  opcodes: opcodes,\n  parseHeader: parseHeader\n};\n","'use strict';\n\n// Core module\nconst core = require('mongodb-core');\nconst Instrumentation = require('./lib/apm');\n\n// Set up the connect function\nconst connect = require('./lib/mongo_client').connect;\n\n// Expose error class\nconnect.MongoError = core.MongoError;\nconnect.MongoNetworkError = core.MongoNetworkError;\n\n// Actual driver classes exported\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/topologies/server');\nconnect.ReplSet = require('./lib/topologies/replset');\nconnect.Mongos = require('./lib/topologies/mongos');\nconnect.ReadPreference = require('mongodb-core').ReadPreference;\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream');\n// Exported to be used in tests not to be used anywhere else\nconnect.CoreServer = require('mongodb-core').Server;\nconnect.CoreConnection = require('mongodb-core').Connection;\n\n// BSON types exported\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Int32 = core.BSON.Int32;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\nconnect.BSONRegExp = core.BSON.BSONRegExp;\nconnect.Decimal128 = core.BSON.Decimal128;\n\n// Add connect method\nconnect.connect = connect;\n\n// Set up the instrumentation method\nconnect.instrument = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const instrumentation = new Instrumentation();\n  instrumentation.instrument(connect.MongoClient, callback);\n  return instrumentation;\n};\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n","'use strict';\n\nconst toError = require('./utils').toError;\nconst shallowClone = require('./utils').shallowClone;\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\n\n/**\n * @fileOverview The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n *\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Use the admin database for the operation\n *   const adminDb = client.db(dbName).admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     test.equal(null, err);\n *     test.ok(dbs.databases.length > 0);\n *     client.close();\n *   });\n * });\n */\n\n/**\n * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {Admin} a collection instance.\n */\nvar Admin = function(db, topology, promiseLibrary) {\n  if (!(this instanceof Admin)) return new Admin(db, topology);\n\n  // Internal state\n  this.s = {\n    db: db,\n    topology: topology,\n    promiseLibrary: promiseLibrary\n  };\n};\n\n/**\n * The callback format for results\n * @callback Admin~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.command = function(command, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.s.db.s.topology, this.s.db.executeDbAdminCommand.bind(this.s.db), [\n    command,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.buildInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n  return executeOperation(this.s.db.s.topology, this.s.db.executeDbAdminCommand.bind(this.s.db), [\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n  return executeOperation(this.s.db.s.topology, this.s.db.executeDbAdminCommand.bind(this.s.db), [\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve this db's server status.\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, serverStatus, [this, options, callback]);\n};\n\nvar serverStatus = function(self, options, callback) {\n  self.s.db.executeDbAdminCommand({ serverStatus: 1 }, options, function(err, doc) {\n    if (err == null && doc.ok === 1) {\n      callback(null, doc);\n    } else {\n      if (err) return callback(err, false);\n      return callback(toError(doc), false);\n    }\n  });\n};\n\n/**\n * Ping the MongoDB server and retrieve results\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.ping = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { ping: 1 };\n  return executeOperation(this.s.db.s.topology, this.s.db.executeDbAdminCommand.bind(this.s.db), [\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.addUser = function(username, password, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() : {};\n  options = options || {};\n  // Get the options\n  options = applyWriteConcern(shallowClone(options), { db: self.s.db });\n  // Set the db name to admin\n  options.dbName = 'admin';\n\n  return executeOperation(this.s.db.s.topology, this.s.db.addUser.bind(this.s.db), [\n    username,\n    password,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.removeUser = function(username, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() : {};\n  options = options || {};\n  // Get the options\n  options = applyWriteConcern(shallowClone(options), { db: self.s.db });\n  // Set the db name\n  options.dbName = 'admin';\n\n  return executeOperation(this.s.db.s.topology, this.s.db.removeUser.bind(this.s.db), [\n    username,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Validate an existing collection\n *\n * @param {string} collectionName The name of the collection to validate.\n * @param {object} [options=null] Optional settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.validateCollection = function(collectionName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, validateCollection, [\n    this,\n    collectionName,\n    options,\n    callback\n  ]);\n};\n\nvar validateCollection = function(self, collectionName, options, callback) {\n  var command = { validate: collectionName };\n  var keys = Object.keys(options);\n\n  // Decorate command with extra options\n  for (var i = 0; i < keys.length; i++) {\n    if (options.hasOwnProperty(keys[i]) && keys[i] !== 'session') {\n      command[keys[i]] = options[keys[i]];\n    }\n  }\n\n  self.s.db.command(command, options, function(err, doc) {\n    if (err != null) return callback(err, null);\n\n    if (doc.ok === 0) return callback(new Error('Error with validate command'), null);\n    if (doc.result != null && doc.result.constructor !== String)\n      return callback(new Error('Error with validation data'), null);\n    if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n      return callback(new Error('Error: invalid collection ' + collectionName), null);\n    if (doc.valid != null && !doc.valid)\n      return callback(new Error('Error: invalid collection ' + collectionName), null);\n\n    return callback(null, doc);\n  });\n};\n\n/**\n * List the available databases\n *\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.nameOnly=false] Whether the command should return only db names, or names and size info.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.listDatabases = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var cmd = { listDatabases: 1 };\n  if (options.nameOnly) cmd.nameOnly = Number(cmd.nameOnly);\n  return executeOperation(this.s.db.s.topology, this.s.db.executeDbAdminCommand.bind(this.s.db), [\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Get ReplicaSet status\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.replSetGetStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, replSetGetStatus, [this, options, callback]);\n};\n\nvar replSetGetStatus = function(self, options, callback) {\n  self.s.db.executeDbAdminCommand({ replSetGetStatus: 1 }, options, function(err, doc) {\n    if (err == null && doc.ok === 1) return callback(null, doc);\n    if (err) return callback(err, false);\n    callback(toError(doc), false);\n  });\n};\n\nmodule.exports = Admin;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('./cursor');\n\n/**\n * @fileOverview The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **AGGREGATIONCURSOR Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.aggregation({}, {cursor: {}}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class AggregationCursor\n * @extends external:Readable\n * @fires AggregationCursor#data\n * @fires AggregationCursor#end\n * @fires AggregationCursor#close\n * @fires AggregationCursor#readable\n * @return {AggregationCursor} an AggregationCursor instance.\n */\nvar AggregationCursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var state = AggregationCursor.INIT;\n  var streamOptions = {};\n\n  // MaxTimeMS\n  var maxTimeMS = null;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal state\n  this.s = {\n    // MaxTimeMS\n    maxTimeMS: maxTimeMS,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology Options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Optional ClientSession\n    session: options.session\n  };\n};\n\n/**\n * AggregationCursor stream data event, fired for each document in the cursor.\n *\n * @event AggregationCursor#data\n * @type {object}\n */\n\n/**\n * AggregationCursor stream end event\n *\n * @event AggregationCursor#end\n * @type {null}\n */\n\n/**\n * AggregationCursor stream close event\n *\n * @event AggregationCursor#close\n * @type {null}\n */\n\n/**\n * AggregationCursor stream readable event\n *\n * @event AggregationCursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(AggregationCursor, Readable);\n\n// Extend the Cursor\nfor (var name in CoreCursor.prototype) {\n  AggregationCursor.prototype[name] = CoreCursor.prototype[name];\n}\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.batchSize = function(value) {\n  if (this.s.state === AggregationCursor.CLOSED || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  if (typeof value !== 'number')\n    throw MongoError.create({ message: 'batchSize requires an integer', drvier: true });\n  if (this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Add a geoNear stage to the aggregation pipeline\n * @method\n * @param {object} document The geoNear stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.geoNear = function(document) {\n  this.s.cmd.pipeline.push({ $geoNear: document });\n  return this;\n};\n\n/**\n * Add a group stage to the aggregation pipeline\n * @method\n * @param {object} document The group stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.group = function(document) {\n  this.s.cmd.pipeline.push({ $group: document });\n  return this;\n};\n\n/**\n * Add a limit stage to the aggregation pipeline\n * @method\n * @param {number} value The state limit value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.limit = function(value) {\n  this.s.cmd.pipeline.push({ $limit: value });\n  return this;\n};\n\n/**\n * Add a match stage to the aggregation pipeline\n * @method\n * @param {object} document The match stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.match = function(document) {\n  this.s.cmd.pipeline.push({ $match: document });\n  return this;\n};\n\n/**\n * Add a maxTimeMS stage to the aggregation pipeline\n * @method\n * @param {number} value The state maxTimeMS value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.maxTimeMS = function(value) {\n  if (this.s.topology.lastIsMaster().minWireVersion > 2) {\n    this.s.cmd.maxTimeMS = value;\n  }\n  return this;\n};\n\n/**\n * Add a out stage to the aggregation pipeline\n * @method\n * @param {number} destination The destination name.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.out = function(destination) {\n  this.s.cmd.pipeline.push({ $out: destination });\n  return this;\n};\n\n/**\n * Add a project stage to the aggregation pipeline\n * @method\n * @param {object} document The project stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.project = function(document) {\n  this.s.cmd.pipeline.push({ $project: document });\n  return this;\n};\n\n/**\n * Add a lookup stage to the aggregation pipeline\n * @method\n * @param {object} document The lookup stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.lookup = function(document) {\n  this.s.cmd.pipeline.push({ $lookup: document });\n  return this;\n};\n\n/**\n * Add a redact stage to the aggregation pipeline\n * @method\n * @param {object} document The redact stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.redact = function(document) {\n  this.s.cmd.pipeline.push({ $redact: document });\n  return this;\n};\n\n/**\n * Add a skip stage to the aggregation pipeline\n * @method\n * @param {number} value The state skip value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.skip = function(value) {\n  this.s.cmd.pipeline.push({ $skip: value });\n  return this;\n};\n\n/**\n * Add a sort stage to the aggregation pipeline\n * @method\n * @param {object} document The sort stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.sort = function(document) {\n  this.s.cmd.pipeline.push({ $sort: document });\n  return this;\n};\n\n/**\n * Add a unwind stage to the aggregation pipeline\n * @method\n * @param {number} field The unwind field name.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.unwind = function(field) {\n  this.s.cmd.pipeline.push({ $unwind: field });\n  return this;\n};\n\nAggregationCursor.prototype.get = AggregationCursor.prototype.toArray;\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function AggregationCursor.prototype.next\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function AggregationCursor.prototype.hasNext\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method AggregationCursor.prototype.toArray\n * @param {AggregationCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method AggregationCursor.prototype.each\n * @param {AggregationCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a AggregationCursor command and emitting close.\n * @method AggregationCursor.prototype.close\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method AggregationCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Execute the explain for the cursor\n * @method AggregationCursor.prototype.explain\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Clone the cursor\n * @function AggregationCursor.prototype.clone\n * @return {AggregationCursor}\n */\n\n/**\n * Resets the cursor\n * @function AggregationCursor.prototype.rewind\n * @return {AggregationCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback AggregationCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback AggregationCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method AggregationCursor.prototype.forEach\n * @param {AggregationCursor~iteratorCallback} iterator The iteration callback.\n * @param {AggregationCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nAggregationCursor.INIT = 0;\nAggregationCursor.OPEN = 1;\nAggregationCursor.CLOSED = 2;\n\nmodule.exports = AggregationCursor;\n","'use strict';\nconst EventEmitter = require('events').EventEmitter;\n\nclass Instrumentation extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  instrument(MongoClient, callback) {\n    // store a reference to the original functions\n    this.$MongoClient = MongoClient;\n    const $prototypeConnect = this.$prototypeConnect = MongoClient.prototype.connect; // eslint-disable-line\n\n    const instrumentation = this;\n    MongoClient.prototype.connect = function(callback) {\n      this.s.options.monitorCommands = true;\n      this.on('commandStarted', event => instrumentation.emit('started', event));\n      this.on('commandSucceeded', event => instrumentation.emit('succeeded', event));\n      this.on('commandFailed', event => instrumentation.emit('failed', event));\n      return $prototypeConnect.call(this, callback);\n    };\n\n    if (typeof callback === 'function') callback(null, this);\n  }\n\n  uninstrument() {\n    this.$MongoClient.prototype.connect = this.$prototypeConnect;\n  }\n}\n\nmodule.exports = Instrumentation;\n","'use strict';\n\nvar shallowClone = require('./utils').shallowClone,\n  handleCallback = require('./utils').handleCallback,\n  MongoError = require('mongodb-core').MongoError,\n  f = require('util').format;\n\nvar authenticate = function(client, username, password, options, callback) {\n  // Did the user destroy the topology\n  if (client.topology && client.topology.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  var authdb = options.dbName;\n  authdb = options.authdb ? options.authdb : authdb;\n  authdb = options.authSource ? options.authSource : authdb;\n\n  // Callback\n  var _callback = function(err, result) {\n    if (client.listeners('authenticated').length > 0) {\n      client.emit('authenticated', err, result);\n    }\n\n    // Return to caller\n    handleCallback(callback, err, result);\n  };\n\n  // authMechanism\n  var authMechanism = options.authMechanism || '';\n  authMechanism = authMechanism.toUpperCase();\n\n  // If classic auth delegate to auth command\n  if (authMechanism === 'MONGODB-CR') {\n    client.topology.auth('mongocr', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'PLAIN') {\n    client.topology.auth('plain', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'MONGODB-X509') {\n    client.topology.auth('x509', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'SCRAM-SHA-1') {\n    client.topology.auth('scram-sha-1', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'SCRAM-SHA-256') {\n    client.topology.auth('scram-sha-256', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'GSSAPI') {\n    if (process.platform === 'win32') {\n      client.topology.auth('sspi', authdb, username, password, options, function(err) {\n        if (err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    } else {\n      client.topology.auth('gssapi', authdb, username, password, options, function(err) {\n        if (err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    }\n  } else if (authMechanism === 'DEFAULT') {\n    client.topology.auth('default', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else {\n    handleCallback(\n      callback,\n      MongoError.create({\n        message: f('authentication mechanism %s not supported', options.authMechanism),\n        driver: true\n      })\n    );\n  }\n};\n\nmodule.exports = function(self, username, password, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Shallow copy the options\n  options = shallowClone(options);\n\n  // Set default mechanism\n  if (!options.authMechanism) {\n    options.authMechanism = 'DEFAULT';\n  } else if (\n    options.authMechanism !== 'GSSAPI' &&\n    options.authMechanism !== 'DEFAULT' &&\n    options.authMechanism !== 'MONGODB-CR' &&\n    options.authMechanism !== 'MONGODB-X509' &&\n    options.authMechanism !== 'SCRAM-SHA-1' &&\n    options.authMechanism !== 'SCRAM-SHA-256' &&\n    options.authMechanism !== 'PLAIN'\n  ) {\n    return handleCallback(\n      callback,\n      MongoError.create({\n        message:\n          'only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism',\n        driver: true\n      })\n    );\n  }\n\n  // If we have a callback fallback\n  if (typeof callback === 'function')\n    return authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if (err && err.message && err.message.indexOf('saslStart') !== -1) err.code = 59;\n      // Reject error\n      if (err) return callback(err, r);\n      callback(null, r);\n    });\n\n  // Return a promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if (err && err.message && err.message.indexOf('saslStart') !== -1) err.code = 59;\n      // Reject error\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n","'use strict';\n\nvar Long = require('mongodb-core').BSON.Long,\n  MongoError = require('mongodb-core').MongoError,\n  util = require('util');\n\n// Error codes\nvar UNKNOWN_ERROR = 8;\nvar INVALID_BSON_ERROR = 22;\nvar WRITE_CONCERN_ERROR = 64;\nvar MULTIPLE_ERROR = 65;\n\n// Insert types\nvar INSERT = 1;\nvar UPDATE = 2;\nvar REMOVE = 3;\n\n/**\n * Helper function to define properties\n * @ignore\n */\nvar defineReadOnlyProperty = function(self, name, value) {\n  Object.defineProperty(self, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n * @ignore\n */\nvar Batch = function(batchType, originalZeroIndex) {\n  this.originalZeroIndex = originalZeroIndex;\n  this.currentIndex = 0;\n  this.originalIndexes = [];\n  this.batchType = batchType;\n  this.operations = [];\n  this.size = 0;\n  this.sizeBytes = 0;\n};\n\n/**\n * Wraps a legacy operation so we can correctly rewrite it's error\n * @ignore\n */\nvar LegacyOp = function(batchType, operation, index) {\n  this.batchType = batchType;\n  this.index = index;\n  this.operation = operation;\n};\n\n/**\n * Create a new BulkWriteResult instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {boolean} ok Did bulk operation correctly execute\n * @property {number} nInserted number of inserted documents\n * @property {number} nUpdated number of documents updated logically\n * @property {number} nUpserted Number of upserted documents\n * @property {number} nModified Number of documents updated physically on disk\n * @property {number} nRemoved Number of removed documents\n * @return {BulkWriteResult} a BulkWriteResult instance\n */\nvar BulkWriteResult = function(bulkResult) {\n  defineReadOnlyProperty(this, 'ok', bulkResult.ok);\n  defineReadOnlyProperty(this, 'nInserted', bulkResult.nInserted);\n  defineReadOnlyProperty(this, 'nUpserted', bulkResult.nUpserted);\n  defineReadOnlyProperty(this, 'nMatched', bulkResult.nMatched);\n  defineReadOnlyProperty(this, 'nModified', bulkResult.nModified);\n  defineReadOnlyProperty(this, 'nRemoved', bulkResult.nRemoved);\n\n  /**\n   * Return an array of inserted ids\n   *\n   * @return {object[]}\n   */\n  this.getInsertedIds = function() {\n    return bulkResult.insertedIds;\n  };\n\n  /**\n   * Return an array of upserted ids\n   *\n   * @return {object[]}\n   */\n  this.getUpsertedIds = function() {\n    return bulkResult.upserted;\n  };\n\n  /**\n   * Return the upserted id at position x\n   *\n   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index\n   * @return {object}\n   */\n  this.getUpsertedIdAt = function(index) {\n    return bulkResult.upserted[index];\n  };\n\n  /**\n   * Return raw internal result\n   *\n   * @return {object}\n   */\n  this.getRawResponse = function() {\n    return bulkResult;\n  };\n\n  /**\n   * Returns true if the bulk operation contains a write error\n   *\n   * @return {boolean}\n   */\n  this.hasWriteErrors = function() {\n    return bulkResult.writeErrors.length > 0;\n  };\n\n  /**\n   * Returns the number of write errors off the bulk operation\n   *\n   * @return {number}\n   */\n  this.getWriteErrorCount = function() {\n    return bulkResult.writeErrors.length;\n  };\n\n  /**\n   * Returns a specific write error object\n   *\n   * @param {number} index of the write error to return, returns null if there is no result for passed in index\n   * @return {WriteError}\n   */\n  this.getWriteErrorAt = function(index) {\n    if (index < bulkResult.writeErrors.length) {\n      return bulkResult.writeErrors[index];\n    }\n    return null;\n  };\n\n  /**\n   * Retrieve all write errors\n   *\n   * @return {object[]}\n   */\n  this.getWriteErrors = function() {\n    return bulkResult.writeErrors;\n  };\n\n  /**\n   * Retrieve lastOp if available\n   *\n   * @return {object}\n   */\n  this.getLastOp = function() {\n    return bulkResult.lastOp;\n  };\n\n  /**\n   * Retrieve the write concern error if any\n   *\n   * @return {WriteConcernError}\n   */\n  this.getWriteConcernError = function() {\n    if (bulkResult.writeConcernErrors.length === 0) {\n      return null;\n    } else if (bulkResult.writeConcernErrors.length === 1) {\n      // Return the error\n      return bulkResult.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      var errmsg = '';\n      for (var i = 0; i < bulkResult.writeConcernErrors.length; i++) {\n        var err = bulkResult.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg: errmsg, code: WRITE_CONCERN_ERROR });\n    }\n  };\n\n  this.toJSON = function() {\n    return bulkResult;\n  };\n\n  this.toString = function() {\n    return 'BulkWriteResult(' + this.toJSON(bulkResult) + ')';\n  };\n\n  this.isOk = function() {\n    return bulkResult.ok === 1;\n  };\n};\n\n/**\n * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {number} code Write concern error code.\n * @property {string} errmsg Write concern error message.\n * @return {WriteConcernError} a WriteConcernError instance\n */\nvar WriteConcernError = function(err) {\n  if (!(this instanceof WriteConcernError)) return new WriteConcernError(err);\n\n  // Define properties\n  defineReadOnlyProperty(this, 'code', err.code);\n  defineReadOnlyProperty(this, 'errmsg', err.errmsg);\n\n  this.toJSON = function() {\n    return { code: err.code, errmsg: err.errmsg };\n  };\n\n  this.toString = function() {\n    return 'WriteConcernError(' + err.errmsg + ')';\n  };\n};\n\n/**\n * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {number} code Write concern error code.\n * @property {number} index Write concern error original bulk operation index.\n * @property {string} errmsg Write concern error message.\n * @return {WriteConcernError} a WriteConcernError instance\n */\nvar WriteError = function(err) {\n  if (!(this instanceof WriteError)) return new WriteError(err);\n\n  // Define properties\n  defineReadOnlyProperty(this, 'code', err.code);\n  defineReadOnlyProperty(this, 'index', err.index);\n  defineReadOnlyProperty(this, 'errmsg', err.errmsg);\n\n  //\n  // Define access methods\n  this.getOperation = function() {\n    return err.op;\n  };\n\n  this.toJSON = function() {\n    return { code: err.code, index: err.index, errmsg: err.errmsg, op: err.op };\n  };\n\n  this.toString = function() {\n    return 'WriteError(' + JSON.stringify(this.toJSON()) + ')';\n  };\n};\n\n/**\n * Merges results into shared data structure\n * @ignore\n */\nvar mergeBatchResults = function(ordered, batch, bulkResult, err, result) {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  } else if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    var writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // Deal with opTime if available\n  if (result.opTime || result.lastOp) {\n    var opTime = result.lastOp || result.opTime;\n    var lastOpTS = null;\n    var lastOpT = null;\n\n    // We have a time stamp\n    if (opTime && opTime._bsontype === 'Timestamp') {\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTime.greaterThan(bulkResult.lastOp)) {\n        bulkResult.lastOp = opTime;\n      }\n    } else {\n      // Existing TS\n      if (bulkResult.lastOp) {\n        lastOpTS =\n          typeof bulkResult.lastOp.ts === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.ts)\n            : bulkResult.lastOp.ts;\n        lastOpT =\n          typeof bulkResult.lastOp.t === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.t)\n            : bulkResult.lastOp.t;\n      }\n\n      // Current OpTime TS\n      var opTimeTS = typeof opTime.ts === 'number' ? Long.fromNumber(opTime.ts) : opTime.ts;\n      var opTimeT = typeof opTime.t === 'number' ? Long.fromNumber(opTime.t) : opTime.t;\n\n      // Compare the opTime's\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.greaterThan(lastOpTS)) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.equals(lastOpTS)) {\n        if (opTimeT.greaterThan(lastOpT)) {\n          bulkResult.lastOp = opTime;\n        }\n      }\n    }\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === INSERT && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === REMOVE && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  var nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (var i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (batch.batchType === UPDATE && result.n) {\n    var nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = null;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (i = 0; i < result.writeErrors.length; i++) {\n      writeError = {\n        index: batch.originalZeroIndex + result.writeErrors[i].index,\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var clone = {};\n  var keys = Object.keys(options);\n  for (var i = 0; i < keys.length; i++) {\n    clone[keys[i]] = options[keys[i]];\n  }\n\n  return clone;\n};\n\n/**\n * Creates a new BulkWriteError\n *\n * @class\n * @param {Error|string|object} message The error message\n * @param {BulkWriteResult} result The result of the bulk write operation\n * @return {BulkWriteError} A BulkWriteError instance\n * @extends {MongoError}\n */\nconst BulkWriteError = function(error, result) {\n  var message = error.err || error.errmsg || error.errMessage || error;\n  MongoError.call(this, message);\n\n  var keys = typeof error === 'object' ? Object.keys(error) : [];\n  for (var i = 0; i < keys.length; i++) {\n    this[keys[i]] = error[keys[i]];\n  }\n\n  this.name = 'BulkWriteError';\n  this.result = result;\n};\nutil.inherits(BulkWriteError, MongoError);\n\n// Exports symbols\nexports.BulkWriteError = BulkWriteError;\nexports.BulkWriteResult = BulkWriteResult;\nexports.WriteError = WriteError;\nexports.Batch = Batch;\nexports.LegacyOp = LegacyOp;\nexports.mergeBatchResults = mergeBatchResults;\nexports.cloneOptions = cloneOptions;\nexports.INVALID_BSON_ERROR = INVALID_BSON_ERROR;\nexports.WRITE_CONCERN_ERROR = WRITE_CONCERN_ERROR;\nexports.MULTIPLE_ERROR = MULTIPLE_ERROR;\nexports.UNKNOWN_ERROR = UNKNOWN_ERROR;\nexports.INSERT = INSERT;\nexports.UPDATE = UPDATE;\nexports.REMOVE = REMOVE;\n","'use strict';\n\nconst common = require('./common');\nconst utils = require('../utils');\nconst toError = require('../utils').toError;\nconst handleCallback = require('../utils').handleCallback;\nconst shallowClone = utils.shallowClone;\nconst BulkWriteResult = common.BulkWriteResult;\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst BSON = require('mongodb-core').BSON;\nconst Batch = common.Batch;\nconst mergeBatchResults = common.mergeBatchResults;\nconst executeOperation = utils.executeOperation;\nconst BulkWriteError = require('./common').BulkWriteError;\nconst applyWriteConcern = utils.applyWriteConcern;\n\nvar bson = new BSON([\n  BSON.Binary,\n  BSON.Code,\n  BSON.DBRef,\n  BSON.Decimal128,\n  BSON.Double,\n  BSON.Int32,\n  BSON.Long,\n  BSON.Map,\n  BSON.MaxKey,\n  BSON.MinKey,\n  BSON.ObjectId,\n  BSON.BSONRegExp,\n  BSON.Symbol,\n  BSON.Timestamp\n]);\n\n/**\n * Create a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {FindOperatorsOrdered} a FindOperatorsOrdered instance.\n */\nvar FindOperatorsOrdered = function(self) {\n  this.s = self.s;\n};\n\n/**\n * Add a single update document to the bulk operation\n *\n * @method\n * @param {object} doc update operations\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.update = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    u: updateDocument,\n    multi: true,\n    upsert: upsert\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n};\n\n/**\n * Add a single update one document to the bulk operation\n *\n * @method\n * @param {object} doc update operations\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.updateOne = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    u: updateDocument,\n    multi: false,\n    upsert: upsert\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n};\n\n/**\n * Add a replace one operation to the bulk operation\n *\n * @method\n * @param {object} doc the new document to replace the existing one with\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.replaceOne = function(updateDocument) {\n  this.updateOne(updateDocument);\n};\n\n/**\n * Upsert modifier for update bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {FindOperatorsOrdered}\n */\nFindOperatorsOrdered.prototype.upsert = function() {\n  this.s.currentOp.upsert = true;\n  return this;\n};\n\n/**\n * Add a remove one operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.deleteOne = function() {\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    limit: 1\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n};\n\n// Backward compatibility\nFindOperatorsOrdered.prototype.removeOne = FindOperatorsOrdered.prototype.deleteOne;\n\n/**\n * Add a remove operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.delete = function() {\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    limit: 0\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n};\n\n// Backward compatibility\nFindOperatorsOrdered.prototype.remove = FindOperatorsOrdered.prototype.delete;\n\n// Add to internal list of documents\nvar addToOperationsList = function(_self, docType, document) {\n  // Get the bsonSize\n  var bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false\n  });\n\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= _self.s.maxBatchSizeBytes) {\n    throw toError('document is larger than the maximum size ' + _self.s.maxBatchSizeBytes);\n  }\n\n  // Create a new batch object if we don't have a current one\n  if (_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if (\n    _self.s.currentBatchSize + 1 >= _self.s.maxWriteBatchSize ||\n    _self.s.currentBatchSizeBytes + _self.s.currentBatchSizeBytes >= _self.s.maxBatchSizeBytes ||\n    _self.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    _self.s.batches.push(_self.s.currentBatch);\n\n    // Create a new batch\n    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n    // Reset the current size trackers\n    _self.s.currentBatchSize = 0;\n    _self.s.currentBatchSizeBytes = 0;\n  } else {\n    // Update current batch size\n    _self.s.currentBatchSize = _self.s.currentBatchSize + 1;\n    _self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;\n  }\n\n  if (docType === common.INSERT) {\n    _self.s.bulkResult.insertedIds.push({ index: _self.s.currentIndex, _id: document._id });\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  } else {\n    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);\n    _self.s.currentBatch.operations.push(document);\n    _self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;\n    _self.s.currentIndex = _self.s.currentIndex + 1;\n  }\n\n  // Return self\n  return _self;\n};\n\n/**\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {OrderedBulkOperation} a OrderedBulkOperation instance.\n */\nfunction OrderedBulkOperation(topology, collection, options) {\n  options = options == null ? {} : options;\n  // TODO Bring from driver information in isMaster\n  var executed = false;\n\n  // Current item\n  var currentOp = null;\n\n  // Handle to the bson serializer, used to calculate running sizes\n  var bson = topology.bson;\n\n  // Namespace for the operation\n  var namespace = collection.collectionName;\n\n  // Set max byte size\n  var maxBatchSizeBytes =\n    topology.isMasterDoc && topology.isMasterDoc.maxBsonObjectSize\n      ? topology.isMasterDoc.maxBsonObjectSize\n      : 1024 * 1025 * 16;\n  var maxWriteBatchSize =\n    topology.isMasterDoc && topology.isMasterDoc.maxWriteBatchSize\n      ? topology.isMasterDoc.maxWriteBatchSize\n      : 1000;\n\n  // Get the write concern\n  var writeConcern = applyWriteConcern(shallowClone(options), { collection: collection }, options);\n  writeConcern = writeConcern.writeConcern;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Final results\n  var bulkResult = {\n    ok: 1,\n    writeErrors: [],\n    writeConcernErrors: [],\n    insertedIds: [],\n    nInserted: 0,\n    nUpserted: 0,\n    nMatched: 0,\n    nModified: 0,\n    nRemoved: 0,\n    upserted: []\n  };\n\n  // Internal state\n  this.s = {\n    // Final result\n    bulkResult: bulkResult,\n    // Current batch state\n    currentBatch: null,\n    currentIndex: 0,\n    currentBatchSize: 0,\n    currentBatchSizeBytes: 0,\n    batches: [],\n    // Write concern\n    writeConcern: writeConcern,\n    // Max batch size options\n    maxBatchSizeBytes: maxBatchSizeBytes,\n    maxWriteBatchSize: maxWriteBatchSize,\n    // Namespace\n    namespace: namespace,\n    // BSON\n    bson: bson,\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Current operation\n    currentOp: currentOp,\n    // Executed\n    executed: executed,\n    // Collection\n    collection: collection,\n    // Promise Library\n    promiseLibrary: promiseLibrary,\n    // Fundamental error\n    err: null,\n    // Bypass validation\n    bypassDocumentValidation:\n      typeof options.bypassDocumentValidation === 'boolean'\n        ? options.bypassDocumentValidation\n        : false,\n    // check keys\n    checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : true\n  };\n}\n\nOrderedBulkOperation.prototype.raw = function(op) {\n  var key = Object.keys(op)[0];\n\n  // Set up the force server object id\n  var forceServerObjectId =\n    typeof this.s.options.forceServerObjectId === 'boolean'\n      ? this.s.options.forceServerObjectId\n      : this.s.collection.s.db.options.forceServerObjectId;\n\n  // Update operations\n  if (\n    (op.updateOne && op.updateOne.q) ||\n    (op.updateMany && op.updateMany.q) ||\n    (op.replaceOne && op.replaceOne.q)\n  ) {\n    op[key].multi = op.updateOne || op.replaceOne ? false : true;\n    return addToOperationsList(this, common.UPDATE, op[key]);\n  }\n\n  // Crud spec update format\n  if (op.updateOne || op.updateMany || op.replaceOne) {\n    var multi = op.updateOne || op.replaceOne ? false : true;\n    var operation = { q: op[key].filter, u: op[key].update || op[key].replacement, multi: multi };\n    operation.upsert = op[key].upsert ? true : false;\n    if (op.collation) operation.collation = op.collation;\n    if (op[key].arrayFilters) operation.arrayFilters = op[key].arrayFilters;\n    return addToOperationsList(this, common.UPDATE, operation);\n  }\n\n  // Remove operations\n  if (\n    op.removeOne ||\n    op.removeMany ||\n    (op.deleteOne && op.deleteOne.q) ||\n    (op.deleteMany && op.deleteMany.q)\n  ) {\n    op[key].limit = op.removeOne ? 1 : 0;\n    return addToOperationsList(this, common.REMOVE, op[key]);\n  }\n\n  // Crud spec delete operations, less efficient\n  if (op.deleteOne || op.deleteMany) {\n    var limit = op.deleteOne ? 1 : 0;\n    operation = { q: op[key].filter, limit: limit };\n    if (op.collation) operation.collation = op.collation;\n    return addToOperationsList(this, common.REMOVE, operation);\n  }\n\n  // Insert operations\n  if (op.insertOne && op.insertOne.document == null) {\n    if (forceServerObjectId !== true && op.insertOne._id == null) op.insertOne._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne);\n  } else if (op.insertOne && op.insertOne.document) {\n    if (forceServerObjectId !== true && op.insertOne.document._id == null)\n      op.insertOne.document._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne.document);\n  }\n\n  if (op.insertMany) {\n    for (var i = 0; i < op.insertMany.length; i++) {\n      if (forceServerObjectId !== true && op.insertMany[i]._id == null)\n        op.insertMany[i]._id = new ObjectID();\n      addToOperationsList(this, common.INSERT, op.insertMany[i]);\n    }\n\n    return;\n  }\n\n  // No valid type of operation\n  throw toError(\n    'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany'\n  );\n};\n\n/**\n * Add a single insert document to the bulk operation\n *\n * @param {object} doc the document to insert\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nOrderedBulkOperation.prototype.insert = function(document) {\n  if (this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null)\n    document._id = new ObjectID();\n  return addToOperationsList(this, common.INSERT, document);\n};\n\n/**\n * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n *\n * @method\n * @param {object} selector The selector for the bulk operation.\n * @throws {MongoError}\n * @return {FindOperatorsOrdered}\n */\nOrderedBulkOperation.prototype.find = function(selector) {\n  if (!selector) {\n    throw toError('Bulk find operation must specify a selector');\n  }\n\n  // Save a current selector\n  this.s.currentOp = {\n    selector: selector\n  };\n\n  return new FindOperatorsOrdered(this);\n};\n\nObject.defineProperty(OrderedBulkOperation.prototype, 'length', {\n  enumerable: true,\n  get: function() {\n    return this.s.currentIndex;\n  }\n});\n\n//\n// Execute next write command in a chain\nvar executeCommands = function(self, options, callback) {\n  if (self.s.batches.length === 0) {\n    return handleCallback(callback, null, new BulkWriteResult(self.s.bulkResult));\n  }\n\n  // Ordered execution of the command\n  var batch = self.s.batches.shift();\n\n  var resultHandler = function(err, result) {\n    // Error is a driver related error not a bulk op error, terminate\n    if ((err && err.driver) || (err && err.message)) {\n      return handleCallback(callback, err);\n    }\n\n    // If we have and error\n    if (err) err.ok = 0;\n    // Merge the results together\n    var mergeResult = mergeBatchResults(true, batch, self.s.bulkResult, err, result);\n    const writeResult = new BulkWriteResult(self.s.bulkResult);\n    if (mergeResult != null) {\n      return handleCallback(callback, null, writeResult);\n    }\n\n    // If we are ordered and have errors and they are\n    // not all replication errors terminate the operation\n    if (self.s.bulkResult.writeErrors.length > 0) {\n      if (self.s.bulkResult.writeErrors.length === 1) {\n        return handleCallback(\n          callback,\n          new BulkWriteError(toError(self.s.bulkResult.writeErrors[0]), writeResult),\n          null\n        );\n      }\n\n      return handleCallback(\n        callback,\n        new BulkWriteError(\n          toError({\n            message: 'write operation failed',\n            code: self.s.bulkResult.writeErrors[0].code,\n            writeErrors: self.s.bulkResult.writeErrors\n          }),\n          writeResult\n        ),\n        null\n      );\n    } else if (writeResult.getWriteConcernError()) {\n      return handleCallback(\n        callback,\n        new BulkWriteError(toError(writeResult.getWriteConcernError()), writeResult),\n        null\n      );\n    }\n\n    // Execute the next command in line\n    executeCommands(self, options, callback);\n  };\n\n  var finalOptions = Object.assign({ ordered: true }, options);\n  if (self.s.writeConcern != null) {\n    finalOptions.writeConcern = self.s.writeConcern;\n  }\n\n  // Set an operationIf if provided\n  if (self.operationId) {\n    resultHandler.operationId = self.operationId;\n  }\n\n  // Serialize functions\n  if (self.s.options.serializeFunctions) {\n    finalOptions.serializeFunctions = true;\n  }\n\n  // Ignore undefined\n  if (self.s.options.ignoreUndefined) {\n    finalOptions.ignoreUndefined = true;\n  }\n\n  // Is the bypassDocumentValidation options specific\n  if (self.s.bypassDocumentValidation === true) {\n    finalOptions.bypassDocumentValidation = true;\n  }\n\n  // Is the checkKeys option disabled\n  if (self.s.checkKeys === false) {\n    finalOptions.checkKeys = false;\n  }\n\n  try {\n    if (batch.batchType === common.INSERT) {\n      self.s.topology.insert(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    } else if (batch.batchType === common.UPDATE) {\n      self.s.topology.update(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    } else if (batch.batchType === common.REMOVE) {\n      self.s.topology.remove(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    }\n  } catch (err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return\n    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));\n  }\n};\n\n/**\n * The callback format for results\n * @callback OrderedBulkOperation~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {BulkWriteResult} result The bulk write result.\n */\n\n/**\n * Execute the ordered bulk operation\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {OrderedBulkOperation~resultCallback} [callback] The result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nOrderedBulkOperation.prototype.execute = function(_writeConcern, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.s.executed) {\n    var executedError = toError('batch cannot be re-executed');\n    return typeof callback === 'function'\n      ? callback(executedError, null)\n      : this.s.promiseLibrary.reject(executedError);\n  }\n\n  if (typeof _writeConcern === 'function') {\n    callback = _writeConcern;\n  } else if (_writeConcern && typeof _writeConcern === 'object') {\n    this.s.writeConcern = _writeConcern;\n  }\n\n  // If we have current batch\n  if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n\n  // If we have no operations in the bulk raise an error\n  if (this.s.batches.length === 0) {\n    var emptyBatchError = toError('Invalid Operation, no operations specified');\n    return typeof callback === 'function'\n      ? callback(emptyBatchError, null)\n      : this.s.promiseLibrary.reject(emptyBatchError);\n  }\n\n  return executeOperation(this.s.topology, executeCommands, [this, options, callback]);\n};\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nvar initializeOrderedBulkOp = function(topology, collection, options) {\n  return new OrderedBulkOperation(topology, collection, options);\n};\n\ninitializeOrderedBulkOp.OrderedBulkOperation = OrderedBulkOperation;\nmodule.exports = initializeOrderedBulkOp;\nmodule.exports.Bulk = OrderedBulkOperation;\n","'use strict';\n\nconst common = require('./common');\nconst utils = require('../utils');\nconst toError = require('../utils').toError;\nconst handleCallback = require('../utils').handleCallback;\nconst shallowClone = utils.shallowClone;\nconst BulkWriteResult = common.BulkWriteResult;\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst BSON = require('mongodb-core').BSON;\nconst Batch = common.Batch;\nconst mergeBatchResults = common.mergeBatchResults;\nconst executeOperation = utils.executeOperation;\nconst BulkWriteError = require('./common').BulkWriteError;\nconst applyWriteConcern = utils.applyWriteConcern;\n\nvar bson = new BSON([\n  BSON.Binary,\n  BSON.Code,\n  BSON.DBRef,\n  BSON.Decimal128,\n  BSON.Double,\n  BSON.Int32,\n  BSON.Long,\n  BSON.Map,\n  BSON.MaxKey,\n  BSON.MinKey,\n  BSON.ObjectId,\n  BSON.BSONRegExp,\n  BSON.Symbol,\n  BSON.Timestamp\n]);\n\n/**\n * Create a FindOperatorsUnordered instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {FindOperatorsUnordered} a FindOperatorsUnordered instance.\n */\nvar FindOperatorsUnordered = function(self) {\n  this.s = self.s;\n};\n\n/**\n * Add a single update document to the bulk operation\n *\n * @method\n * @param {object} updateDocument update operations\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.update = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    u: updateDocument,\n    multi: true,\n    upsert: upsert\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n};\n\n/**\n * Add a single update one document to the bulk operation\n *\n * @method\n * @param {object} updateDocument update operations\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.updateOne = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    u: updateDocument,\n    multi: false,\n    upsert: upsert\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n};\n\n/**\n * Add a replace one operation to the bulk operation\n *\n * @method\n * @param {object} updateDocument the new document to replace the existing one with\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.replaceOne = function(updateDocument) {\n  this.updateOne(updateDocument);\n};\n\n/**\n * Upsert modifier for update bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.upsert = function() {\n  this.s.currentOp.upsert = true;\n  return this;\n};\n\n/**\n * Add a remove one operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.removeOne = function() {\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    limit: 1\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n};\n\n/**\n * Add a remove operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nFindOperatorsUnordered.prototype.remove = function() {\n  // Establish the update command\n  var document = {\n    q: this.s.currentOp.selector,\n    limit: 0\n  };\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n};\n\n//\n// Add to the operations list\n//\nvar addToOperationsList = function(_self, docType, document) {\n  // Get the bsonSize\n  var bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false\n  });\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= _self.s.maxBatchSizeBytes)\n    throw toError('document is larger than the maximum size ' + _self.s.maxBatchSizeBytes);\n  // Holds the current batch\n  _self.s.currentBatch = null;\n  // Get the right type of batch\n  if (docType === common.INSERT) {\n    _self.s.currentBatch = _self.s.currentInsertBatch;\n  } else if (docType === common.UPDATE) {\n    _self.s.currentBatch = _self.s.currentUpdateBatch;\n  } else if (docType === common.REMOVE) {\n    _self.s.currentBatch = _self.s.currentRemoveBatch;\n  }\n\n  // Create a new batch object if we don't have a current one\n  if (_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if (\n    _self.s.currentBatch.size + 1 >= _self.s.maxWriteBatchSize ||\n    _self.s.currentBatch.sizeBytes + bsonSize >= _self.s.maxBatchSizeBytes ||\n    _self.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    _self.s.batches.push(_self.s.currentBatch);\n\n    // Create a new batch\n    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  } else {\n    _self.s.currentBatch.operations.push(document);\n    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);\n    _self.s.currentIndex = _self.s.currentIndex + 1;\n  }\n\n  // Save back the current Batch to the right type\n  if (docType === common.INSERT) {\n    _self.s.currentInsertBatch = _self.s.currentBatch;\n    _self.s.bulkResult.insertedIds.push({\n      index: _self.s.bulkResult.insertedIds.length,\n      _id: document._id\n    });\n  } else if (docType === common.UPDATE) {\n    _self.s.currentUpdateBatch = _self.s.currentBatch;\n  } else if (docType === common.REMOVE) {\n    _self.s.currentRemoveBatch = _self.s.currentBatch;\n  }\n\n  // Update current batch size\n  _self.s.currentBatch.size = _self.s.currentBatch.size + 1;\n  _self.s.currentBatch.sizeBytes = _self.s.currentBatch.sizeBytes + bsonSize;\n\n  // Return self\n  return _self;\n};\n\n/**\n * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {UnorderedBulkOperation} a UnorderedBulkOperation instance.\n */\nvar UnorderedBulkOperation = function(topology, collection, options) {\n  options = options == null ? {} : options;\n\n  // Get the namesspace for the write operations\n  var namespace = collection.collectionName;\n  // Used to mark operation as executed\n  var executed = false;\n\n  // Current item\n  // var currentBatch = null;\n  var currentOp = null;\n\n  // Handle to the bson serializer, used to calculate running sizes\n  var bson = topology.bson;\n\n  // Set max byte size\n  var maxBatchSizeBytes =\n    topology.isMasterDoc && topology.isMasterDoc.maxBsonObjectSize\n      ? topology.isMasterDoc.maxBsonObjectSize\n      : 1024 * 1025 * 16;\n  var maxWriteBatchSize =\n    topology.isMasterDoc && topology.isMasterDoc.maxWriteBatchSize\n      ? topology.isMasterDoc.maxWriteBatchSize\n      : 1000;\n\n  // Get the write concern\n  var writeConcern = applyWriteConcern(shallowClone(options), { collection: collection }, options);\n  writeConcern = writeConcern.writeConcern;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Final results\n  var bulkResult = {\n    ok: 1,\n    writeErrors: [],\n    writeConcernErrors: [],\n    insertedIds: [],\n    nInserted: 0,\n    nUpserted: 0,\n    nMatched: 0,\n    nModified: 0,\n    nRemoved: 0,\n    upserted: []\n  };\n\n  // Internal state\n  this.s = {\n    // Final result\n    bulkResult: bulkResult,\n    // Current batch state\n    currentInsertBatch: null,\n    currentUpdateBatch: null,\n    currentRemoveBatch: null,\n    currentBatch: null,\n    currentIndex: 0,\n    batches: [],\n    // Write concern\n    writeConcern: writeConcern,\n    // Max batch size options\n    maxBatchSizeBytes: maxBatchSizeBytes,\n    maxWriteBatchSize: maxWriteBatchSize,\n    // Namespace\n    namespace: namespace,\n    // BSON\n    bson: bson,\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Current operation\n    currentOp: currentOp,\n    // Executed\n    executed: executed,\n    // Collection\n    collection: collection,\n    // Promise Library\n    promiseLibrary: promiseLibrary,\n    // Bypass validation\n    bypassDocumentValidation:\n      typeof options.bypassDocumentValidation === 'boolean'\n        ? options.bypassDocumentValidation\n        : false,\n    // check keys\n    checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : true\n  };\n};\n\n/**\n * Add a single insert document to the bulk operation\n *\n * @param {object} document the document to insert\n * @throws {MongoError}\n * @return {UnorderedBulkOperation}\n */\nUnorderedBulkOperation.prototype.insert = function(document) {\n  if (this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null)\n    document._id = new ObjectID();\n  return addToOperationsList(this, common.INSERT, document);\n};\n\n/**\n * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n *\n * @method\n * @param {object} selector The selector for the bulk operation.\n * @throws {MongoError}\n * @return {FindOperatorsUnordered}\n */\nUnorderedBulkOperation.prototype.find = function(selector) {\n  if (!selector) {\n    throw toError('Bulk find operation must specify a selector');\n  }\n\n  // Save a current selector\n  this.s.currentOp = {\n    selector: selector\n  };\n\n  return new FindOperatorsUnordered(this);\n};\n\nObject.defineProperty(UnorderedBulkOperation.prototype, 'length', {\n  enumerable: true,\n  get: function() {\n    return this.s.currentIndex;\n  }\n});\n\nUnorderedBulkOperation.prototype.raw = function(op) {\n  var key = Object.keys(op)[0];\n\n  // Set up the force server object id\n  var forceServerObjectId =\n    typeof this.s.options.forceServerObjectId === 'boolean'\n      ? this.s.options.forceServerObjectId\n      : this.s.collection.s.db.options.forceServerObjectId;\n\n  // Update operations\n  if (\n    (op.updateOne && op.updateOne.q) ||\n    (op.updateMany && op.updateMany.q) ||\n    (op.replaceOne && op.replaceOne.q)\n  ) {\n    op[key].multi = op.updateOne || op.replaceOne ? false : true;\n    return addToOperationsList(this, common.UPDATE, op[key]);\n  }\n\n  // Crud spec update format\n  if (op.updateOne || op.updateMany || op.replaceOne) {\n    var multi = op.updateOne || op.replaceOne ? false : true;\n    var operation = { q: op[key].filter, u: op[key].update || op[key].replacement, multi: multi };\n    if (op[key].upsert) operation.upsert = true;\n    if (op[key].arrayFilters) operation.arrayFilters = op[key].arrayFilters;\n    return addToOperationsList(this, common.UPDATE, operation);\n  }\n\n  // Remove operations\n  if (\n    op.removeOne ||\n    op.removeMany ||\n    (op.deleteOne && op.deleteOne.q) ||\n    (op.deleteMany && op.deleteMany.q)\n  ) {\n    op[key].limit = op.removeOne ? 1 : 0;\n    return addToOperationsList(this, common.REMOVE, op[key]);\n  }\n\n  // Crud spec delete operations, less efficient\n  if (op.deleteOne || op.deleteMany) {\n    var limit = op.deleteOne ? 1 : 0;\n    operation = { q: op[key].filter, limit: limit };\n    return addToOperationsList(this, common.REMOVE, operation);\n  }\n\n  // Insert operations\n  if (op.insertOne && op.insertOne.document == null) {\n    if (forceServerObjectId !== true && op.insertOne._id == null) op.insertOne._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne);\n  } else if (op.insertOne && op.insertOne.document) {\n    if (forceServerObjectId !== true && op.insertOne.document._id == null)\n      op.insertOne.document._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne.document);\n  }\n\n  if (op.insertMany) {\n    for (var i = 0; i < op.insertMany.length; i++) {\n      if (forceServerObjectId !== true && op.insertMany[i]._id == null)\n        op.insertMany[i]._id = new ObjectID();\n      addToOperationsList(this, common.INSERT, op.insertMany[i]);\n    }\n\n    return;\n  }\n\n  // No valid type of operation\n  throw toError(\n    'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany'\n  );\n};\n\n//\n// Execute the command\nvar executeBatch = function(self, batch, options, callback) {\n  var finalOptions = Object.assign({ ordered: false }, options);\n  if (self.s.writeConcern != null) {\n    finalOptions.writeConcern = self.s.writeConcern;\n  }\n\n  var resultHandler = function(err, result) {\n    // Error is a driver related error not a bulk op error, terminate\n    if ((err && err.driver) || (err && err.message)) {\n      return handleCallback(callback, err);\n    }\n\n    // If we have and error\n    if (err) err.ok = 0;\n    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, result));\n  };\n\n  // Set an operationIf if provided\n  if (self.operationId) {\n    resultHandler.operationId = self.operationId;\n  }\n\n  // Serialize functions\n  if (self.s.options.serializeFunctions) {\n    finalOptions.serializeFunctions = true;\n  }\n\n  // Ignore undefined\n  if (self.s.options.ignoreUndefined) {\n    finalOptions.ignoreUndefined = true;\n  }\n\n  // Is the bypassDocumentValidation options specific\n  if (self.s.bypassDocumentValidation === true) {\n    finalOptions.bypassDocumentValidation = true;\n  }\n\n  // Is the checkKeys option disabled\n  if (self.s.checkKeys === false) {\n    finalOptions.checkKeys = false;\n  }\n\n  try {\n    if (batch.batchType === common.INSERT) {\n      self.s.topology.insert(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    } else if (batch.batchType === common.UPDATE) {\n      self.s.topology.update(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    } else if (batch.batchType === common.REMOVE) {\n      self.s.topology.remove(\n        self.s.collection.namespace,\n        batch.operations,\n        finalOptions,\n        resultHandler\n      );\n    }\n  } catch (err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return\n    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));\n  }\n};\n\n//\n// Execute all the commands\nvar executeBatches = function(self, options, callback) {\n  var numberOfCommandsToExecute = self.s.batches.length;\n  // Execute over all the batches\n  for (var i = 0; i < self.s.batches.length; i++) {\n    executeBatch(self, self.s.batches[i], options, function(err) {\n      // Count down the number of commands left to execute\n      numberOfCommandsToExecute = numberOfCommandsToExecute - 1;\n\n      // Execute\n      if (numberOfCommandsToExecute === 0) {\n        // Driver level error\n        if (err) return handleCallback(callback, err);\n\n        const writeResult = new BulkWriteResult(self.s.bulkResult);\n        if (self.s.bulkResult.writeErrors.length > 0) {\n          if (self.s.bulkResult.writeErrors.length === 1) {\n            return handleCallback(\n              callback,\n              new BulkWriteError(toError(self.s.bulkResult.writeErrors[0]), writeResult),\n              null\n            );\n          }\n\n          return handleCallback(\n            callback,\n            new BulkWriteError(\n              toError({\n                message: 'write operation failed',\n                code: self.s.bulkResult.writeErrors[0].code,\n                writeErrors: self.s.bulkResult.writeErrors\n              }),\n              writeResult\n            ),\n            null\n          );\n        } else if (writeResult.getWriteConcernError()) {\n          return handleCallback(\n            callback,\n            new BulkWriteError(toError(writeResult.getWriteConcernError()), writeResult),\n            null\n          );\n        }\n\n        return handleCallback(callback, null, writeResult);\n      }\n    });\n  }\n};\n\n/**\n * The callback format for results\n * @callback UnorderedBulkOperation~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {BulkWriteResult} result The bulk write result.\n */\n\n/**\n * Execute the ordered bulk operation\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {UnorderedBulkOperation~resultCallback} [callback] The result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nUnorderedBulkOperation.prototype.execute = function(_writeConcern, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.s.executed) {\n    var executedError = toError('batch cannot be re-executed');\n    return typeof callback === 'function'\n      ? callback(executedError, null)\n      : this.s.promiseLibrary.reject(executedError);\n  }\n\n  if (typeof _writeConcern === 'function') {\n    callback = _writeConcern;\n  } else if (_writeConcern && typeof _writeConcern === 'object') {\n    this.s.writeConcern = _writeConcern;\n  }\n\n  // If we have current batch\n  if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n  if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n  if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n\n  // If we have no operations in the bulk raise an error\n  if (this.s.batches.length === 0) {\n    var emptyBatchError = toError('Invalid Operation, no operations specified');\n    return typeof callback === 'function'\n      ? callback(emptyBatchError, null)\n      : this.s.promiseLibrary.reject(emptyBatchError);\n  }\n\n  return executeOperation(this.s.topology, executeBatches, [this, options, callback]);\n};\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nvar initializeUnorderedBulkOp = function(topology, collection, options) {\n  return new UnorderedBulkOperation(topology, collection, options);\n};\n\ninitializeUnorderedBulkOp.UnorderedBulkOperation = UnorderedBulkOperation;\nmodule.exports = initializeUnorderedBulkOp;\nmodule.exports.Bulk = UnorderedBulkOperation;\n","'use strict';\n\nvar EventEmitter = require('events'),\n  inherits = require('util').inherits,\n  MongoNetworkError = require('mongodb-core').MongoNetworkError;\n\nvar cursorOptionNames = ['maxAwaitTimeMS', 'collation', 'readPreference'];\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @class ChangeStream\n * @since 3.0.0\n * @param {(Db|Collection)} changeDomain The collection against which to create the change stream\n * @param {Array} pipeline An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n * @param {object} [options=null] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {object} [options.resumeAfter=null] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.batchSize=null] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation=null] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference=null] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @fires ChangeStream#close\n * @fires ChangeStream#change\n * @fires ChangeStream#end\n * @fires ChangeStream#error\n * @return {ChangeStream} a ChangeStream instance.\n */\nvar ChangeStream = function(collection, pipeline, options) {\n  var Collection = require('./collection');\n\n  // Ensure the provided collection is actually a collection\n  if (!(collection instanceof Collection)) {\n    throw new Error(\n      'collection provided to ChangeStream constructor is not an instance of Collection'\n    );\n  }\n\n  var self = this;\n  self.pipeline = pipeline || [];\n  self.options = options || {};\n  self.promiseLibrary = collection.s.promiseLibrary;\n\n  // Extract namespace and serverConfig from the collection\n  self.namespace = {\n    collection: collection.collectionName,\n    database: collection.s.db.databaseName\n  };\n\n  self.serverConfig = collection.s.db.serverConfig;\n\n  // Determine correct read preference\n  self.options.readPreference = self.options.readPreference || collection.s.readPreference;\n\n  // Create contained Change Stream cursor\n  self.cursor = createChangeStreamCursor(self);\n\n  // Listen for any `change` listeners being added to ChangeStream\n  self.on('newListener', function(eventName) {\n    if (eventName === 'change' && self.cursor && self.cursor.listenerCount('change') === 0) {\n      self.cursor.on('data', function(change) {\n        processNewChange(self, null, change);\n      });\n    }\n  });\n\n  // Listen for all `change` listeners being removed from ChangeStream\n  self.on('removeListener', function(eventName) {\n    if (eventName === 'change' && self.listenerCount('change') === 0 && self.cursor) {\n      self.cursor.removeAllListeners('data');\n    }\n  });\n};\n\ninherits(ChangeStream, EventEmitter);\n\n// Create a new change stream cursor based on self's configuration\nvar createChangeStreamCursor = function(self) {\n  if (self.resumeToken) {\n    self.options.resumeAfter = self.resumeToken;\n  }\n\n  var changeStreamCursor = buildChangeStreamAggregationCommand(\n    self.serverConfig,\n    self.namespace,\n    self.pipeline,\n    self.resumeToken,\n    self.options\n  );\n\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change` event listener to a Change Stream will switch the stream into flowing mode. Data will then be passed as soon as it is available.\n   *\n   * @event ChangeStream#change\n   * @type {object}\n   */\n  if (self.listenerCount('change') > 0) {\n    changeStreamCursor.on('data', function(change) {\n      processNewChange(self, null, change);\n    });\n  }\n\n  /**\n   * Change stream close event\n   *\n   * @event ChangeStream#close\n   * @type {null}\n   */\n  changeStreamCursor.on('close', function() {\n    self.emit('close');\n  });\n\n  /**\n   * Change stream end event\n   *\n   * @event ChangeStream#end\n   * @type {null}\n   */\n  changeStreamCursor.on('end', function() {\n    self.emit('end');\n  });\n\n  /**\n   * Fired when the stream encounters an error.\n   *\n   * @event ChangeStream#error\n   * @type {Error}\n   */\n  changeStreamCursor.on('error', function(error) {\n    self.emit('error', error);\n  });\n\n  return changeStreamCursor;\n};\n\nvar buildChangeStreamAggregationCommand = function(\n  serverConfig,\n  namespace,\n  pipeline,\n  resumeToken,\n  options\n) {\n  var changeStreamStageOptions = {};\n  if (options.fullDocument) {\n    changeStreamStageOptions.fullDocument = options.fullDocument;\n  }\n\n  if (resumeToken || options.resumeAfter) {\n    changeStreamStageOptions.resumeAfter = resumeToken || options.resumeAfter;\n  }\n\n  // Map cursor options\n  var cursorOptions = {};\n  cursorOptionNames.forEach(function(optionName) {\n    if (options[optionName]) {\n      cursorOptions[optionName] = options[optionName];\n    }\n  });\n\n  var changeStreamPipeline = [{ $changeStream: changeStreamStageOptions }];\n\n  changeStreamPipeline = changeStreamPipeline.concat(pipeline);\n\n  var command = {\n    aggregate: namespace.collection,\n    pipeline: changeStreamPipeline,\n    readConcern: { level: 'majority' },\n    cursor: {\n      batchSize: options.batchSize || 1\n    }\n  };\n\n  // Create and return the cursor\n  return serverConfig.cursor(\n    namespace.database + '.' + namespace.collection,\n    command,\n    cursorOptions\n  );\n};\n\n/**\n * Check if there is any document still available in the Change Stream\n * @function ChangeStream.prototype.hasNext\n * @param {ChangeStream~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nChangeStream.prototype.hasNext = function(callback) {\n  return this.cursor.hasNext(callback);\n};\n\n/**\n * Get the next available document from the Change Stream, returns null if no more documents are available.\n * @function ChangeStream.prototype.next\n * @param {ChangeStream~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nChangeStream.prototype.next = function(callback) {\n  var self = this;\n  if (this.isClosed()) {\n    if (callback) return callback(new Error('Change Stream is not open.'), null);\n    return self.promiseLibrary.reject(new Error('Change Stream is not open.'));\n  }\n  return this.cursor\n    .next()\n    .then(function(change) {\n      return processNewChange(self, null, change, callback);\n    })\n    .catch(function(err) {\n      return processNewChange(self, err, null, callback);\n    });\n};\n\n/**\n * Is the cursor closed\n * @method ChangeStream.prototype.isClosed\n * @return {boolean}\n */\nChangeStream.prototype.isClosed = function() {\n  if (this.cursor) {\n    return this.cursor.isClosed();\n  }\n  return true;\n};\n\n/**\n * Close the Change Stream\n * @method ChangeStream.prototype.close\n * @param {ChangeStream~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nChangeStream.prototype.close = function(callback) {\n  if (!this.cursor) {\n    if (callback) return callback();\n    return this.promiseLibrary.resolve();\n  }\n\n  // Tidy up the existing cursor\n  var cursor = this.cursor;\n  delete this.cursor;\n  return cursor.close(callback);\n};\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @method\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] {@link https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options|Pipe options}\n * @return {null}\n */\nChangeStream.prototype.pipe = function(destination, options) {\n  if (!this.pipeDestinations) {\n    this.pipeDestinations = [];\n  }\n  this.pipeDestinations.push(destination);\n  return this.cursor.pipe(destination, options);\n};\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\nChangeStream.prototype.unpipe = function(destination) {\n  if (this.pipeDestinations && this.pipeDestinations.indexOf(destination) > -1) {\n    this.pipeDestinations.splice(this.pipeDestinations.indexOf(destination), 1);\n  }\n  return this.cursor.unpipe(destination);\n};\n\n/**\n * This method will cause a stream in flowing mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @return {null}\n */\nChangeStream.prototype.pause = function() {\n  return this.cursor.pause();\n};\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @return {null}\n */\nChangeStream.prototype.resume = function() {\n  return this.cursor.resume();\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n */\nChangeStream.prototype.stream = function(options) {\n  this.streamOptions = options;\n  return this.cursor.stream(options);\n};\n\n// Handle new change events. This method brings together the routes from the callback, event emitter, and promise ways of using ChangeStream.\nvar processNewChange = function(self, err, change, callback) {\n  // Handle errors\n  if (err) {\n    // Handle resumable MongoNetworkErrors\n    if (err instanceof MongoNetworkError && !self.attemptingResume) {\n      self.attemptingResume = true;\n      return self.cursor.close(function(closeErr) {\n        if (closeErr) {\n          if (callback) return callback(err, null);\n          return self.promiseLibrary.reject(err);\n        }\n\n        // Establish a new cursor\n        self.cursor = createChangeStreamCursor(self);\n\n        // Attempt to reconfigure piping\n        if (self.pipeDestinations) {\n          var cursorStream = self.cursor.stream(self.streamOptions);\n          for (var pipeDestination in self.pipeDestinations) {\n            cursorStream.pipe(pipeDestination);\n          }\n        }\n\n        // Attempt the next() operation again\n        if (callback) return self.next(callback);\n        return self.next();\n      });\n    }\n\n    if (typeof callback === 'function') return callback(err, null);\n    if (self.listenerCount('error')) return self.emit('error', err);\n    return self.promiseLibrary.reject(err);\n  }\n  self.attemptingResume = false;\n\n  // Cache the resume token if it is present. If it is not present return an error.\n  if (!change || !change._id) {\n    var noResumeTokenError = new Error(\n      'A change stream document has been received that lacks a resume token (_id).'\n    );\n    if (typeof callback === 'function') return callback(noResumeTokenError, null);\n    if (self.listenerCount('error')) return self.emit('error', noResumeTokenError);\n    return self.promiseLibrary.reject(noResumeTokenError);\n  }\n  self.resumeToken = change._id;\n\n  // Return the change\n  if (typeof callback === 'function') return callback(err, change);\n  if (self.listenerCount('change')) return self.emit('change', change);\n  return self.promiseLibrary.resolve(change);\n};\n\n/**\n * The callback format for results\n * @callback ChangeStream~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\nmodule.exports = ChangeStream;\n","'use strict';\n\nconst checkCollectionName = require('./utils').checkCollectionName;\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst Long = require('mongodb-core').BSON.Long;\nconst Code = require('mongodb-core').BSON.Code;\nconst f = require('util').format;\nconst AggregationCursor = require('./aggregation_cursor');\nconst MongoError = require('mongodb-core').MongoError;\nconst shallowClone = require('./utils').shallowClone;\nconst isObject = require('./utils').isObject;\nconst toError = require('./utils').toError;\nconst normalizeHintField = require('./utils').normalizeHintField;\nconst handleCallback = require('./utils').handleCallback;\nconst decorateCommand = require('./utils').decorateCommand;\nconst formattedOrderClause = require('./utils').formattedOrderClause;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst CommandCursor = require('./command_cursor');\nconst unordered = require('./bulk/unordered');\nconst ordered = require('./bulk/ordered');\nconst ChangeStream = require('./change_stream');\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     client.close();\n *   });\n * });\n */\n\nvar mergeKeys = ['readPreference', 'ignoreUndefined'];\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {string} collectionName Get the collection name.\n * @property {string} namespace Get the full collection namespace.\n * @property {object} writeConcern The current write concern values.\n * @property {object} readConcern The current read concern values.\n * @property {object} hint Get current index hint for collection.\n * @return {Collection} a Collection instance.\n */\nvar Collection = function(db, topology, dbName, name, pkFactory, options) {\n  checkCollectionName(name);\n\n  // Unpack variables\n  var internalHint = null;\n  var slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  var serializeFunctions =\n    options == null || options.serializeFunctions == null\n      ? db.s.options.serializeFunctions\n      : options.serializeFunctions;\n  var raw = options == null || options.raw == null ? db.s.options.raw : options.raw;\n  var promoteLongs =\n    options == null || options.promoteLongs == null\n      ? db.s.options.promoteLongs\n      : options.promoteLongs;\n  var promoteValues =\n    options == null || options.promoteValues == null\n      ? db.s.options.promoteValues\n      : options.promoteValues;\n  var promoteBuffers =\n    options == null || options.promoteBuffers == null\n      ? db.s.options.promoteBuffers\n      : options.promoteBuffers;\n  var readPreference = null;\n  var collectionHint = null;\n  var namespace = f('%s.%s', dbName, name);\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Assign the right collection level readPreference\n  if (options && options.readPreference) {\n    readPreference = options.readPreference;\n  } else if (db.options.readPreference) {\n    readPreference = db.options.readPreference;\n  }\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null ? ObjectID : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n    pkFactory: pkFactory,\n    // Db\n    db: db,\n    // Topology\n    topology: topology,\n    // dbName\n    dbName: dbName,\n    // Options\n    options: options,\n    // Namespace\n    namespace: namespace,\n    // Read preference\n    readPreference: readPreference,\n    // SlaveOK\n    slaveOk: slaveOk,\n    // Serialize functions\n    serializeFunctions: serializeFunctions,\n    // Raw\n    raw: raw,\n    // promoteLongs\n    promoteLongs: promoteLongs,\n    // promoteValues\n    promoteValues: promoteValues,\n    // promoteBuffers\n    promoteBuffers: promoteBuffers,\n    // internalHint\n    internalHint: internalHint,\n    // collectionHint\n    collectionHint: collectionHint,\n    // Name\n    name: name,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Read Concern\n    readConcern: options.readConcern\n  };\n};\n\nObject.defineProperty(Collection.prototype, 'dbName', {\n  enumerable: true,\n  get: function() {\n    return this.s.dbName;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true,\n  get: function() {\n    return this.s.name;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'readConcern', {\n  enumerable: true,\n  get: function() {\n    return this.s.readConcern || { level: 'local' };\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    var ops = {};\n    if (this.s.options.w != null) ops.w = this.s.options.w;\n    if (this.s.options.j != null) ops.j = this.s.options.j;\n    if (this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if (this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * @ignore\n */\nObject.defineProperty(Collection.prototype, 'hint', {\n  enumerable: true,\n  get: function() {\n    return this.s.collectionHint;\n  },\n  set: function(v) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n});\n\nconst DEPRECATED_FIND_OPTIONS = ['maxScan', 'snapshot'];\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} [query={}] The cursor query object.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {object} [options.fields=null] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan=null] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min=null] Set index bounds.\n * @param {number} [options.max=null] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = function(query, options, callback) {\n  let selector = query;\n  // figuring out arguments\n  if (typeof callback !== 'function') {\n    if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options == null) {\n      callback = typeof selector === 'function' ? selector : undefined;\n      selector = typeof selector === 'object' ? selector : undefined;\n    }\n  }\n\n  // Ensure selector is not null\n  selector = selector == null ? {} : selector;\n  // Validate correctness off the selector\n  var object = selector;\n  if (Buffer.isBuffer(object)) {\n    var object_size = object[0] | (object[1] << 8) | (object[2] << 16) | (object[3] << 24);\n    if (object_size !== object.length) {\n      var error = new Error(\n        'query selector raw message size does not match message header size [' +\n          object.length +\n          '] != [' +\n          object_size +\n          ']'\n      );\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Check special case where we are using an objectId\n  if (selector != null && selector._bsontype === 'ObjectID') {\n    selector = { _id: selector };\n  }\n\n  if (!options) options = {};\n\n  let projection = options.projection || options.fields;\n\n  if (projection && !Buffer.isBuffer(projection) && Array.isArray(projection)) {\n    projection = projection.length\n      ? projection.reduce((result, field) => {\n          result[field] = 1;\n          return result;\n        }, {})\n      : { _id: 1 };\n  }\n\n  var newOptions = {};\n\n  // Make a shallow copy of the collection options\n  for (var key in this.s.options) {\n    if (mergeKeys.indexOf(key) !== -1) {\n      newOptions[key] = this.s.options[key];\n    }\n  }\n\n  // Make a shallow copy of options\n  for (var optKey in options) {\n    newOptions[optKey] = options[optKey];\n  }\n\n  // Unpack options\n  newOptions.skip = options.skip ? options.skip : 0;\n  newOptions.limit = options.limit ? options.limit : 0;\n  newOptions.raw = typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n  newOptions.hint = options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n  newOptions.timeout = typeof options.timeout === 'undefined' ? undefined : options.timeout;\n  // // If we have overridden slaveOk otherwise use the default db setting\n  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n  // Add read preference if needed\n  newOptions = getReadPreference(this, newOptions, this.s.db);\n\n  // Set slave ok to true if read preference different from primary\n  if (\n    newOptions.readPreference != null &&\n    (newOptions.readPreference !== 'primary' || newOptions.readPreference.mode !== 'primary')\n  ) {\n    newOptions.slaveOk = true;\n  }\n\n  // Ensure the query is an object\n  if (selector != null && typeof selector !== 'object') {\n    throw MongoError.create({ message: 'query selector must be an object', driver: true });\n  }\n\n  // Build the find command\n  var findCommand = {\n    find: this.s.namespace,\n    limit: newOptions.limit,\n    skip: newOptions.skip,\n    query: selector\n  };\n\n  // Ensure we use the right await data option\n  if (typeof newOptions.awaitdata === 'boolean') {\n    newOptions.awaitData = newOptions.awaitdata;\n  }\n\n  // Translate to new command option noCursorTimeout\n  if (typeof newOptions.timeout === 'boolean') newOptions.noCursorTimeout = newOptions.timeout;\n\n  // Merge in options to command\n  for (var name in newOptions) {\n    if (newOptions[name] != null && name !== 'session') {\n      findCommand[name] = newOptions[name];\n    }\n  }\n\n  DEPRECATED_FIND_OPTIONS.forEach(deprecatedOption => {\n    if (findCommand[deprecatedOption]) {\n      console.warn(\n        `Find option ${deprecatedOption} is deprecated, and will be removed in a later version`\n      );\n    }\n  });\n\n  if (projection) findCommand.fields = projection;\n\n  // Add db object to the new options\n  newOptions.db = this.s.db;\n\n  // Add the promise library\n  newOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // Set raw if available at collection level\n  if (newOptions.raw == null && typeof this.s.raw === 'boolean') newOptions.raw = this.s.raw;\n  // Set promoteLongs if available at collection level\n  if (newOptions.promoteLongs == null && typeof this.s.promoteLongs === 'boolean')\n    newOptions.promoteLongs = this.s.promoteLongs;\n  if (newOptions.promoteValues == null && typeof this.s.promoteValues === 'boolean')\n    newOptions.promoteValues = this.s.promoteValues;\n  if (newOptions.promoteBuffers == null && typeof this.s.promoteBuffers === 'boolean')\n    newOptions.promoteBuffers = this.s.promoteBuffers;\n\n  // Sort options\n  if (findCommand.sort) {\n    findCommand.sort = formattedOrderClause(findCommand.sort);\n  }\n\n  // Set the readConcern\n  decorateWithReadConcern(findCommand, this, options);\n\n  // Decorate find command with collation options\n  decorateWithCollation(findCommand, this, options);\n\n  const cursor = this.s.topology.cursor(this.s.namespace, findCommand, newOptions);\n\n  // automatically call map on the cursor if the map option is set\n  if (typeof this.s.options.map === 'function') {\n    cursor.map(this.s.options.map);\n  }\n\n  return typeof callback === 'function' ? handleCallback(callback, null, cursor) : cursor;\n};\n\n/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, insertOne, [this, doc, options, callback]);\n};\n\nvar insertOne = function(self, doc, options, callback) {\n  if (Array.isArray(doc)) {\n    return callback(\n      MongoError.create({ message: 'doc parameter must be an object', driver: true })\n    );\n  }\n\n  insertDocuments(self, [doc], options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    // Workaround for pre 2.6 servers\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    // Add values to top level to ensure crud spec compatibility\n    r.insertedCount = r.result.n;\n    r.insertedId = doc._id;\n    if (callback) callback(null, r);\n  });\n};\n\nvar mapInserManyResults = function(docs, r) {\n  var finalResult = {\n    result: { ok: 1, n: r.insertedCount },\n    ops: docs,\n    insertedCount: r.insertedCount,\n    insertedIds: r.insertedIds\n  };\n\n  if (r.getLastOp()) {\n    finalResult.result.opTime = r.getLastOp();\n  }\n\n  return finalResult;\n};\n\n/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.ordered=true] If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  var self = this;\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? shallowClone(options) : { ordered: true };\n  if (!Array.isArray(docs) && typeof callback === 'function') {\n    return callback(\n      MongoError.create({ message: 'docs parameter must be an array of documents', driver: true })\n    );\n  } else if (!Array.isArray(docs)) {\n    return new this.s.promiseLibrary(function(resolve, reject) {\n      reject(\n        MongoError.create({ message: 'docs parameter must be an array of documents', driver: true })\n      );\n    });\n  }\n\n  // If keep going set unordered\n  options['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  docs = prepareDocs(this, docs, options);\n\n  // Generate the bulk write operations\n  var operations = [\n    {\n      insertMany: docs\n    }\n  ];\n\n  return executeOperation(this.s.topology, bulkWrite, [this, operations, options, callback], {\n    resultMutator: result => mapInserManyResults(docs, result)\n  });\n};\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {BulkWriteError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: true };\n\n  if (!Array.isArray(operations)) {\n    throw MongoError.create({ message: 'operations must be an array of documents', driver: true });\n  }\n\n  return executeOperation(this.s.topology, bulkWrite, [this, operations, options, callback]);\n};\n\nvar bulkWrite = function(self, operations, options, callback) {\n  // Add ignoreUndfined\n  if (self.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = self.s.options.ignoreUndefined;\n  }\n\n  // Create the bulk operation\n  var bulk =\n    options.ordered === true || options.ordered == null\n      ? self.initializeOrderedBulkOp(options)\n      : self.initializeUnorderedBulkOp(options);\n\n  // Do we have a collation\n  var collation = false;\n\n  // for each op go through and add to the bulk\n  try {\n    for (var i = 0; i < operations.length; i++) {\n      // Get the operation type\n      var key = Object.keys(operations[i])[0];\n      // Check if we have a collation\n      if (operations[i][key].collation) {\n        collation = true;\n      }\n\n      // Pass to the raw bulk\n      bulk.raw(operations[i]);\n    }\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Final options for write concern\n  var finalOptions = applyWriteConcern(\n    shallowClone(options),\n    { db: self.s.db, collection: self },\n    options\n  );\n\n  var writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n  var capabilities = self.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if (collation && capabilities && !capabilities.commandsTakeCollation) {\n    return callback(new MongoError(f('server/primary/mongos does not support collation')));\n  }\n\n  // Execute the bulk\n  bulk.execute(writeCon, finalOptions, function(err, r) {\n    // We have connection level error\n    if (!r && err) {\n      return callback(err, null);\n    }\n\n    r.insertedCount = r.nInserted;\n    r.matchedCount = r.nMatched;\n    r.modifiedCount = r.nModified || 0;\n    r.deletedCount = r.nRemoved;\n    r.upsertedCount = r.getUpsertedIds().length;\n    r.upsertedIds = {};\n    r.insertedIds = {};\n\n    // Update the n\n    r.n = r.insertedCount;\n\n    // Inserted documents\n    var inserted = r.getInsertedIds();\n    // Map inserted ids\n    for (var i = 0; i < inserted.length; i++) {\n      r.insertedIds[inserted[i].index] = inserted[i]._id;\n    }\n\n    // Upserted documents\n    var upserted = r.getUpsertedIds();\n    // Map upserted ids\n    for (i = 0; i < upserted.length; i++) {\n      r.upsertedIds[upserted[i].index] = upserted[i]._id;\n    }\n\n    // Return the results\n    callback(null, r);\n  });\n};\n\nvar insertDocuments = function(self, docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Get the write concern options\n  var finalOptions = applyWriteConcern(\n    shallowClone(options),\n    { db: self.s.db, collection: self },\n    options\n  );\n\n  // If keep going set unordered\n  if (finalOptions.keepGoing === true) finalOptions.ordered = false;\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  docs = prepareDocs(self, docs, options);\n\n  // File inserts\n  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n};\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * @typedef {Object} Collection~insertWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {Object.<Number, ObjectId>} insertedIds Map of the index of the inserted document to the id of the inserted document.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * @typedef {Object} Collection~insertOneWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertOneWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = function(docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: false };\n  docs = !Array.isArray(docs) ? [docs] : docs;\n\n  if (options.keepGoing === true) {\n    options.ordered = false;\n  }\n\n  return this.insertMany(docs, options, callback);\n};\n\n/**\n * @typedef {Object} Collection~updateWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents scanned.\n * @property {Number} result.nModified The total count of documents modified.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} matchedCount The number of documents that matched the filter.\n * @property {Number} modifiedCount The number of documents that were modified.\n * @property {Number} upsertedCount The number of documents upserted.\n * @property {Object} upsertedId The upserted id.\n * @property {ObjectId} upsertedId._id The upserted _id returned from the server.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~updateWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Update a single document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Array} [options.arrayFilters=null] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var err = checkForAtomicOperators(update);\n  if (err) {\n    if (typeof callback === 'function') return callback(err);\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateOne, [this, filter, update, options, callback]);\n};\n\nvar checkForAtomicOperators = function(update) {\n  var keys = Object.keys(update);\n\n  // same errors as the server would give for update doc lacking atomic operators\n  if (keys.length === 0) {\n    return toError('The update operation document must contain at least one atomic operator.');\n  }\n\n  if (keys[0][0] !== '$') {\n    return toError('the update operation document must contain atomic operators.');\n  }\n};\n\nvar updateOne = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n        ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n        : null;\n    r.upsertedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    if (callback) callback(null, r);\n  });\n};\n\n/**\n * Replace a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.replaceOne = function(filter, doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  if (typeof this.s.options.unmap === 'function') {\n    doc = this.s.options.unmap(doc);\n  }\n\n  return executeOperation(this.s.topology, replaceOne, [this, filter, doc, options, callback]);\n};\n\nvar replaceOne = function(self, filter, doc, options, callback) {\n  // Set single document update\n  options.multi = false;\n\n  // Execute update\n  updateDocuments(self, filter, doc, options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n        ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n        : null;\n    r.upsertedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    r.ops = [doc];\n    if (callback) callback(null, r);\n  });\n};\n\n/**\n * Update multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the documents to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Array} [options.arrayFilters=null] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var err = checkForAtomicOperators(update);\n  if (err) {\n    if (typeof callback === 'function') return callback(err);\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateMany, [this, filter, update, options, callback]);\n};\n\nvar updateMany = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = true;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n        ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n        : null;\n    r.upsertedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    if (callback) callback(null, r);\n  });\n};\n\nvar updateDocuments = function(self, selector, document, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = null);\n  if (options == null) options = {};\n  if (!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if (selector == null || typeof selector !== 'object')\n    return callback(toError('selector must be a valid JavaScript object'));\n  if (document == null || typeof document !== 'object')\n    return callback(toError('document must be a valid JavaScript object'));\n\n  // Get the write concern options\n  var finalOptions = applyWriteConcern(\n    shallowClone(options),\n    { db: self.s.db, collection: self },\n    options\n  );\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Execute the operation\n  var op = { q: selector, u: document };\n  op.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n  op.multi = options.multi !== void 0 ? !!options.multi : false;\n\n  if (finalOptions.arrayFilters) {\n    op.arrayFilters = finalOptions.arrayFilters;\n    delete finalOptions.arrayFilters;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(finalOptions, self, options);\n\n  // Update options\n  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n};\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} document The update document.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Array} [options.arrayFilters=null] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = function(selector, document, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateDocuments, [\n    this,\n    selector,\n    document,\n    options,\n    callback\n  ]);\n};\n\n/**\n * @typedef {Object} Collection~deleteWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents deleted.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} deletedCount The number of documents deleted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~deleteWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Delete a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, deleteOne, [this, filter, options, callback]);\n};\n\nvar deleteOne = function(self, filter, options, callback) {\n  options.single = true;\n  removeDocuments(self, filter, options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    r.deletedCount = r.result.n;\n    if (callback) callback(null, r);\n  });\n};\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\n/**\n * Delete multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, deleteMany, [this, filter, options, callback]);\n};\n\nvar deleteMany = function(self, filter, options, callback) {\n  options.single = false;\n\n  removeDocuments(self, filter, options, function(err, r) {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    r.deletedCount = r.result.n;\n    if (callback) callback(null, r);\n  });\n};\n\nvar removeDocuments = function(self, selector, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {});\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Get the write concern options\n  var finalOptions = applyWriteConcern(\n    shallowClone(options),\n    { db: self.s.db, collection: self },\n    options\n  );\n\n  // If selector is null set empty\n  if (selector == null) selector = {};\n\n  // Build the op\n  var op = { q: selector, limit: 0 };\n  if (options.single) op.limit = 1;\n\n  // Have we specified collation\n  decorateWithCollation(finalOptions, self, options);\n\n  // Execute the remove\n  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n};\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, removeDocuments, [this, selector, options, callback]);\n};\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nCollection.prototype.save = function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, save, [this, doc, options, callback]);\n};\n\nvar save = function(self, doc, options, callback) {\n  // Get the write concern options\n  var finalOptions = applyWriteConcern(\n    shallowClone(options),\n    { db: self.s.db, collection: self },\n    options\n  );\n  // Establish if we need to perform an insert or update\n  if (doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(self, { _id: doc._id }, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(self, [doc], finalOptions, function(err, r) {\n    if (callback == null) return;\n    if (doc == null) return handleCallback(callback, null, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, r);\n  });\n};\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for an aggregation call\n * @callback Collection~aggregationCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {AggregationCursor} cursor The cursor if the aggregation command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {object} [options.fields=null] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan=null] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min=null] Set index bounds.\n * @param {number} [options.max=null] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOne = function(query, options, callback) {\n  if (typeof query === 'function') (callback = query), (query = {}), (options = {});\n  if (typeof options === 'function') (callback = options), (options = {});\n  query = query || {};\n  options = options || {};\n\n  return executeOperation(this.s.topology, findOne, [this, query, options, callback]);\n};\n\nvar findOne = function(self, query, options, callback) {\n  const cursor = self\n    .find(query, options)\n    .limit(-1)\n    .batchSize(1);\n\n  // Return the item\n  cursor.next(function(err, item) {\n    if (err != null) return handleCallback(callback, toError(err), null);\n    handleCallback(callback, null, item);\n  });\n};\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.rename = function(newName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  return executeOperation(this.s.topology, rename, [this, newName, options, callback]);\n};\n\nvar rename = function(self, newName, options, callback) {\n  // Check the collection name\n  checkCollectionName(newName);\n  // Build the command\n  var renameCollection = f('%s.%s', self.s.dbName, self.s.name);\n  var toCollection = f('%s.%s', self.s.dbName, newName);\n  var dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n  var cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n  // Decorate command with writeConcern if supported\n  applyWriteConcern(cmd, { db: self.s.db, collection: self }, options);\n\n  // Execute against admin\n  self.s.db.admin().command(cmd, options, function(err, doc) {\n    if (err) return handleCallback(callback, err, null);\n    // We have an error\n    if (doc.errmsg) return handleCallback(callback, toError(doc), null);\n    try {\n      return handleCallback(\n        callback,\n        null,\n        new Collection(\n          self.s.db,\n          self.s.topology,\n          self.s.dbName,\n          newName,\n          self.s.pkFactory,\n          self.s.options\n        )\n      );\n    } catch (err) {\n      return handleCallback(callback, toError(err), null);\n    }\n  });\n};\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.drop = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, this.s.db.dropCollection.bind(this.s.db), [\n    this.s.name,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.options = function(opts, callback) {\n  if (typeof opts === 'function') (callback = opts), (opts = {});\n  opts = opts || {};\n\n  return executeOperation(this.s.topology, options, [this, opts, callback]);\n};\n\nvar options = function(self, opts, callback) {\n  self.s.db.listCollections({ name: self.s.name }, opts).toArray(function(err, collections) {\n    if (err) return handleCallback(callback, err);\n    if (collections.length === 0) {\n      return handleCallback(\n        callback,\n        MongoError.create({ message: f('collection %s not found', self.s.namespace), driver: true })\n      );\n    }\n\n    handleCallback(callback, err, collections[0].options || null);\n  });\n};\n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.isCapped = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, isCapped, [this, options, callback]);\n};\n\nvar isCapped = function(self, options, callback) {\n  self.options(options, function(err, document) {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, document && document.capped);\n  });\n};\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {string} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, createIndex, [this, fieldOrSpec, options, callback]);\n};\n\nvar createIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.createIndex(self.s.name, fieldOrSpec, options, callback);\n};\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n * @method\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndexes = function(indexSpecs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n\n  options = options ? shallowClone(options) : {};\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  return executeOperation(this.s.topology, createIndexes, [this, indexSpecs, options, callback]);\n};\n\nvar createIndexes = function(self, indexSpecs, options, callback) {\n  var capabilities = self.s.topology.capabilities();\n\n  // Ensure we generate the correct name if the parameter is not set\n  for (var i = 0; i < indexSpecs.length; i++) {\n    if (indexSpecs[i].name == null) {\n      var keys = [];\n\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {\n        return callback(new MongoError(f('server/primary/mongos does not support collation')));\n      }\n\n      for (var name in indexSpecs[i].key) {\n        keys.push(f('%s_%s', name, indexSpecs[i].key[name]));\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  // Execute the index\n  self.s.db.command(\n    {\n      createIndexes: self.s.name,\n      indexes: indexSpecs\n    },\n    options,\n    callback\n  );\n};\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() || {} : {};\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  return executeOperation(this.s.topology, dropIndex, [this, indexName, options, callback]);\n};\n\nvar dropIndex = function(self, indexName, options, callback) {\n  // Delete index command\n  var cmd = { dropIndexes: self.s.name, index: indexName };\n\n  // Decorate command with writeConcern if supported\n  applyWriteConcern(cmd, { db: self.s.db, collection: self }, options);\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if (typeof callback !== 'function') return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? shallowClone(options) : {};\n\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  return executeOperation(this.s.topology, dropIndexes, [this, options, callback]);\n};\n\nvar dropIndexes = function(self, options, callback) {\n  self.dropIndex('*', options, function(err) {\n    if (err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true);\n  });\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {Promise} returns Promise if no [callback] passed\n */\nCollection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.reIndex = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, reIndex, [this, options, callback]);\n};\n\nvar reIndex = function(self, options, callback) {\n  // Reindex\n  var cmd = { reIndex: self.s.name };\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n};\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  options = options || {};\n  // Clone the options\n  options = shallowClone(options);\n  // Determine the read preference in the options.\n  options = getReadPreference(this, options, this.s.db, this);\n  // Set the CommandCursor constructor\n  options.cursorFactory = CommandCursor;\n  // Set the promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if (!this.s.topology.capabilities()) {\n    throw new MongoError('cannot connect to server');\n  }\n\n  // We have a list collections command\n  if (this.s.topology.capabilities().hasListIndexesCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? { batchSize: options.batchSize } : {};\n    // Build the command\n    var command = { listIndexes: this.s.name, cursor: cursor };\n    // Execute the cursor\n    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);\n    // Do we have a readPreference, apply it\n    if (options.readPreference) cursor.setReadPreference(options.readPreference);\n    // Return the cursor\n    return cursor;\n  }\n\n  // Get the namespace\n  var ns = f('%s.system.indexes', this.s.dbName);\n  // Get the query\n  cursor = this.s.topology.cursor(ns, { find: ns, query: { ns: this.s.namespace } }, options);\n  // Do we have a readPreference, apply it\n  if (options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if (options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // Return the cursor\n  return cursor;\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, ensureIndex, [this, fieldOrSpec, options, callback]);\n};\n\nvar ensureIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.ensureIndex(self.s.name, fieldOrSpec, options, callback);\n};\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexExists = function(indexes, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexExists, [this, indexes, options, callback]);\n};\n\nvar indexExists = function(self, indexes, options, callback) {\n  self.indexInformation(options, function(err, indexInformation) {\n    // If we have an error return\n    if (err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if (!Array.isArray(indexes))\n      return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for (var i = 0; i < indexes.length; i++) {\n      if (indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, indexInformation, [this, options, callback]);\n};\n\nvar indexInformation = function(self, options, callback) {\n  self.s.db.indexInformation(self.s.name, options, callback);\n};\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * Count number of matching documents in the db to a query.\n * @method\n * @param {object} query The query for the count.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.limit=null] The limit of documents to count.\n * @param {boolean} [options.skip=null] The number of documents to skip for the count.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~countCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.count = function(query, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, count, [this, query, options, callback]);\n};\n\nvar count = function(self, query, options, callback) {\n  var skip = options.skip;\n  var limit = options.limit;\n  var hint = options.hint;\n  var maxTimeMS = options.maxTimeMS;\n\n  // Final query\n  var cmd = {\n    count: self.s.name,\n    query: query\n  };\n\n  // Add limit, skip and maxTimeMS if defined\n  if (typeof skip === 'number') cmd.skip = skip;\n  if (typeof limit === 'number') cmd.limit = limit;\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n  if (hint) cmd.hint = hint;\n\n  options = shallowClone(options);\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db);\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, self, options);\n\n  // Have we specified collation\n  decorateWithCollation(cmd, self, options);\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.n);\n  });\n};\n\n/**\n * The distinct command returns returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  var queryOption = args.length ? args.shift() || {} : {};\n  var optionsOption = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, distinct, [\n    this,\n    key,\n    queryOption,\n    optionsOption,\n    callback\n  ]);\n};\n\nvar distinct = function(self, key, query, options, callback) {\n  // maxTimeMS option\n  var maxTimeMS = options.maxTimeMS;\n\n  // Distinct command\n  var cmd = {\n    distinct: self.s.name,\n    key: key,\n    query: query\n  };\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Add maxTimeMS if defined\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, self, options);\n\n  // Have we specified collation\n  decorateWithCollation(cmd, self, options);\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.values);\n  });\n};\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexes, [this, options, callback]);\n};\n\nvar indexes = function(self, options, callback) {\n  options = Object.assign({}, { full: true }, options);\n  self.s.db.indexInformation(self.s.name, options, callback);\n};\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.stats = function(options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, stats, [this, options, callback]);\n};\n\nvar stats = function(self, options, callback) {\n  // Build command object\n  var commandObject = {\n    collStats: self.s.name\n  };\n\n  // Check if we have the scale value\n  if (options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Execute the command\n  self.s.db.command(commandObject, options, callback);\n};\n\n/**\n * @typedef {Object} Collection~findAndModifyWriteOpResult\n * @property {object} value Document returned from findAndModify command.\n * @property {object} lastErrorObject The raw lastErrorObject returned from the command.\n * @property {Number} ok Is 1 if the command executed correctly.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~findAndModifyCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n\n  return executeOperation(this.s.topology, findOneAndDelete, [this, filter, options, callback]);\n};\n\nvar findOneAndDelete = function(self, filter, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['remove'] = true;\n  // Execute find and Modify\n  self.findAndModify(filter, options.sort, null, finalOptions, callback);\n};\n\n/**\n * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} replacement Document replacing the matching document.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n  if (replacement == null || typeof replacement !== 'object')\n    throw toError('replacement parameter must be an object');\n\n  return executeOperation(this.s.topology, findOneAndReplace, [\n    this,\n    filter,\n    replacement,\n    options,\n    callback\n  ]);\n};\n\nvar findOneAndReplace = function(self, filter, replacement, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] = options.returnOriginal !== void 0 ? !options.returnOriginal : false;\n  finalOptions['upsert'] = options.upsert !== void 0 ? !!options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(filter, options.sort, replacement, finalOptions, callback);\n};\n\n/**\n * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n  if (update == null || typeof update !== 'object')\n    throw toError('update parameter must be an object');\n\n  return executeOperation(this.s.topology, findOneAndUpdate, [\n    this,\n    filter,\n    update,\n    options,\n    callback\n  ]);\n};\n\nvar findOneAndUpdate = function(self, filter, update, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] =\n    typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n  finalOptions['upsert'] = typeof options.upsert === 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(filter, options.sort, update, finalOptions, callback);\n};\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.projection=null] Object containing the field projection for the result returned from the operation.\n * @param {object} [options.fields=null] **Deprecated** Use `options.projection` instead\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nCollection.prototype.findAndModify = function(query, sort, doc, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  options = shallowClone(options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  return executeOperation(this.s.topology, findAndModify, [\n    this,\n    query,\n    sort,\n    doc,\n    options,\n    callback\n  ]);\n};\n\nvar findAndModify = function(self, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  var queryObject = {\n    findAndModify: self.s.name,\n    query: query\n  };\n\n  sort = formattedOrderClause(sort);\n  if (sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  const projection = options.projection || options.fields;\n\n  if (projection) {\n    queryObject.fields = projection;\n  }\n\n  if (options.arrayFilters) {\n    queryObject.arrayFilters = options.arrayFilters;\n    delete options.arrayFilters;\n  }\n\n  if (doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  if (options.maxTimeMS) queryObject.maxTimeMS = options.maxTimeMS;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if (options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = self.s.serializeFunctions;\n  }\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Get the write concern settings\n  var finalOptions = applyWriteConcern(options, { db: self.s.db, collection: self }, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if (finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if (typeof finalOptions.bypassDocumentValidation === 'boolean') {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(queryObject, self, finalOptions);\n\n  // Execute the command\n  self.s.db.command(queryObject, finalOptions, function(err, result) {\n    if (err) return handleCallback(callback, err, null);\n\n    if (result && result.value && typeof self.s.options.map === 'function') {\n      result.value = self.s.options.map(result.value);\n    }\n\n    return handleCallback(callback, null, result);\n  });\n};\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = function(query, sort, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, findAndRemove, [this, query, sort, options, callback]);\n};\n\nvar findAndRemove = function(self, query, sort, options, callback) {\n  // Add the remove option\n  options['remove'] = true;\n  // Execute the callback\n  self.findAndModify(query, sort, null, options, callback);\n};\n\nfunction decorateWithCollation(command, self, options) {\n  // Do we support collation 3.4 and higher\n  var capabilities = self.s.topology.capabilities();\n  // Do we support write concerns 3.4 and higher\n  if (capabilities && capabilities.commandsTakeCollation) {\n    if (options.collation && typeof options.collation === 'object') {\n      command.collation = options.collation;\n    }\n  }\n}\n\nfunction decorateWithReadConcern(command, self, options) {\n  let readConcern = Object.assign({}, command.readConcern || {});\n  if (self.s.readConcern) {\n    Object.assign(readConcern, self.s.readConcern);\n  }\n\n  if (\n    options.session &&\n    options.session.supports.causalConsistency &&\n    options.session.operationTime\n  ) {\n    Object.assign(readConcern, { afterClusterTime: options.session.operationTime });\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} pipeline Array containing all the aggregation framework commands for the execution.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor\n * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >).\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {string} [options.comment] Add a comment to an aggregation command\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~aggregationCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  var self = this;\n\n  if (Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if (options == null && callback == null) {\n      options = {};\n    }\n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    var args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    var opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options =\n      opts &&\n      (opts.readPreference ||\n        opts.explain ||\n        opts.cursor ||\n        opts.out ||\n        opts.maxTimeMS ||\n        opts.hint ||\n        opts.allowDiskUse)\n        ? args.pop()\n        : {};\n    // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  // Ignore readConcern option\n  var ignoreReadConcern = false;\n\n  // Build the command\n  var command = { aggregate: this.s.name, pipeline: pipeline };\n\n  // If out was specified\n  if (typeof options.out === 'string') {\n    pipeline.push({ $out: options.out });\n    // Ignore read concern\n    ignoreReadConcern = true;\n  } else if (pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {\n    ignoreReadConcern = true;\n  }\n\n  // Decorate command with writeConcern if out has been specified\n  if (\n    pipeline.length > 0 &&\n    pipeline[pipeline.length - 1]['$out'] &&\n    self.s.topology.capabilities().commandsTakeWriteConcern\n  ) {\n    applyWriteConcern(command, { db: self.s.db, collection: self }, options);\n  }\n\n  // Have we specified collation\n  decorateWithCollation(command, self, options);\n\n  // If we have bypassDocumentValidation set\n  if (typeof options.bypassDocumentValidation === 'boolean') {\n    command.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Do we have a readConcern specified\n  if (!ignoreReadConcern) {\n    decorateWithReadConcern(command, self, options);\n  }\n\n  // If we have allowDiskUse defined\n  if (options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n  if (typeof options.maxTimeMS === 'number') command.maxTimeMS = options.maxTimeMS;\n\n  // If we are giving a hint\n  if (options.hint) command.hint = options.hint;\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // If explain has been specified add it\n  if (options.explain) {\n    if (command.readConcern || command.writeConcern) {\n      throw toError('\"explain\" cannot be used on an aggregate call with readConcern/writeConcern');\n    }\n    command.explain = options.explain;\n  }\n\n  if (typeof options.comment === 'string') command.comment = options.comment;\n\n  // Validate that cursor options is valid\n  if (options.cursor != null && typeof options.cursor !== 'object') {\n    throw toError('cursor options must be an object');\n  }\n\n  options.cursor = options.cursor || {};\n  if (options.batchSize) options.cursor.batchSize = options.batchSize;\n  command.cursor = options.cursor;\n\n  // promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Set the AggregationCursor constructor\n  options.cursorFactory = AggregationCursor;\n  if (typeof callback !== 'function') {\n    if (!this.s.topology.capabilities()) {\n      throw new MongoError('cannot connect to server');\n    }\n\n    // Allow disk usage command\n    if (typeof options.allowDiskUse === 'boolean') command.allowDiskUse = options.allowDiskUse;\n    if (typeof options.maxTimeMS === 'number') command.maxTimeMS = options.maxTimeMS;\n\n    // Execute the cursor\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, command, options));\n};\n\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n * @method\n * @since 3.0.0\n * @param {Array} [pipeline=null] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options=null] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter=null] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize=null] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation=null] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference=null] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nCollection.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.parallelCollectionScan = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = { numCursors: 1 });\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Add a promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  return executeOperation(this.s.topology, parallelCollectionScan, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar parallelCollectionScan = function(self, options, callback) {\n  // Create command object\n  var commandObject = {\n    parallelCollectionScan: self.s.name,\n    numCursors: options.numCursors\n  };\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, self, options);\n\n  // Store the raw value\n  var raw = options.raw;\n  delete options['raw'];\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function(err, result) {\n    if (err) return handleCallback(callback, err, null);\n    if (result == null)\n      return handleCallback(\n        callback,\n        new Error('no result returned for parallelCollectionScan'),\n        null\n      );\n\n    var cursors = [];\n    // Add the raw back to the option\n    if (raw) options.raw = raw;\n    // Create command cursors for each item\n    for (var i = 0; i < result.cursors.length; i++) {\n      var rawId = result.cursors[i].cursor.id;\n      // Convert cursorId to Long if needed\n      var cursorId = typeof rawId === 'number' ? Long.fromNumber(rawId) : rawId;\n      // Add a command cursor\n      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n};\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {object} [options.search=null] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoHaystackSearch = function(x, y, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, geoHaystackSearch, [this, x, y, options, callback]);\n};\n\nvar geoHaystackSearch = function(self, x, y, options, callback) {\n  // Build command object\n  var commandObject = {\n    geoSearch: self.s.name,\n    near: [x, y]\n  };\n\n  // Remove read preference from hash if it exists\n  commandObject = decorateCommand(commandObject, options, { readPreference: true, session: true });\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, self, options);\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function(err, res) {\n    if (err) return handleCallback(callback, err);\n    if (res.err || res.errmsg) handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n};\n\n/**\n * Group function helper\n * @ignore\n */\n// var groupFunction = function () {\n//   var c = db[ns].find(condition);\n//   var map = new Map();\n//   var reduce_function = reduce;\n//\n//   while (c.hasNext()) {\n//     var obj = c.next();\n//     var key = {};\n//\n//     for (var i = 0, len = keys.length; i < len; ++i) {\n//       var k = keys[i];\n//       key[k] = obj[k];\n//     }\n//\n//     var aggObj = map.get(key);\n//\n//     if (aggObj == null) {\n//       var newObj = Object.extend({}, key);\n//       aggObj = Object.extend(newObj, initial);\n//       map.put(key, aggObj);\n//     }\n//\n//     reduce_function(obj, aggObj);\n//   }\n//\n//   return { \"result\": map.values() };\n// }.toString();\nvar groupFunction =\n  'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';\n\n/**\n * Run a group command across a collection\n *\n * @method\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated MongoDB 3.6 or higher will no longer support the group command. We recommend rewriting using the aggregation framework.\n */\nCollection.prototype.group = function(\n  keys,\n  condition,\n  initial,\n  reduce,\n  finalize,\n  command,\n  options,\n  callback\n) {\n  var args = Array.prototype.slice.call(arguments, 3);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if (!(typeof finalize === 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (\n    !Array.isArray(keys) &&\n    keys instanceof Object &&\n    typeof keys !== 'function' &&\n    !(keys._bsontype === 'Code')\n  ) {\n    keys = Object.keys(keys);\n  }\n\n  if (typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if (typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  return executeOperation(this.s.topology, group, [\n    this,\n    keys,\n    condition,\n    initial,\n    reduce,\n    finalize,\n    command,\n    options,\n    callback\n  ]);\n};\n\nvar group = function(self, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if (command) {\n    var reduceFunction = reduce && reduce._bsontype === 'Code' ? reduce : new Code(reduce);\n\n    var selector = {\n      group: {\n        ns: self.s.name,\n        $reduce: reduceFunction,\n        cond: condition,\n        initial: initial,\n        out: 'inline'\n      }\n    };\n\n    // if finalize is defined\n    if (finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || (keys && keys._bsontype === 'Code')) {\n      selector.group.$keyf = keys && keys._bsontype === 'Code' ? keys : new Code(keys);\n    } else {\n      var hash = {};\n      keys.forEach(function(key) {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    options = shallowClone(options);\n    // Ensure we have the right read preference inheritance\n    options = getReadPreference(self, options, self.s.db, self);\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(selector, self, options);\n\n    // Have we specified collation\n    decorateWithCollation(selector, self, options);\n\n    // Execute command\n    self.s.db.command(selector, options, function(err, result) {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    var scope = reduce != null && reduce._bsontype === 'Code' ? reduce.scope : {};\n\n    scope.ns = self.s.name;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    self.s.db.eval(new Code(groupfn, scope), null, options, function(err, results) {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n};\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope(scope) {\n  if (!isObject(scope) || scope._bsontype === 'ObjectID') {\n    return scope;\n  }\n\n  var keys = Object.keys(scope);\n  var i = keys.length;\n  var key;\n  var new_scope = {};\n\n  while (i--) {\n    key = keys[i];\n    if ('function' === typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query=null] Query filter object.\n * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit=null] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize=null] Finalize function.\n * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = {});\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if (null == options.out) {\n    throw new Error(\n      'the out option parameter must be defined, see mongodb docs for possible values'\n    );\n  }\n\n  if ('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if ('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if ('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  return executeOperation(this.s.topology, mapReduce, [this, map, reduce, options, callback]);\n};\n\nvar mapReduce = function(self, map, reduce, options, callback) {\n  var mapCommandHash = {\n    mapreduce: self.s.name,\n    map: map,\n    reduce: reduce\n  };\n\n  // Exclusion list\n  var exclusionList = ['readPreference', 'session'];\n\n  // Add any other options passed in\n  for (var n in options) {\n    if ('scope' === n) {\n      mapCommandHash[n] = processScope(options[n]);\n    } else {\n      // Only include if not in exclusion list\n      if (exclusionList.indexOf(n) === -1) {\n        mapCommandHash[n] = options[n];\n      }\n    }\n  }\n\n  options = shallowClone(options);\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // If we have a read preference and inline is not set as output fail hard\n  if (\n    options.readPreference !== false &&\n    options.readPreference !== 'primary' &&\n    options['out'] &&\n    (options['out'].inline !== 1 && options['out'] !== 'inline')\n  ) {\n    // Force readPreference to primary\n    options.readPreference = 'primary';\n    // Decorate command with writeConcern if supported\n    applyWriteConcern(mapCommandHash, { db: self.s.db, collection: self }, options);\n  } else {\n    decorateWithReadConcern(mapCommandHash, self, options);\n  }\n\n  // Is bypassDocumentValidation specified\n  if (typeof options.bypassDocumentValidation === 'boolean') {\n    mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(mapCommandHash, self, options);\n\n  // Execute command\n  self.s.db.command(mapCommandHash, options, function(err, result) {\n    if (err) return handleCallback(callback, err);\n    // Check if we have an error\n    if (1 !== result.ok || result.err || result.errmsg) {\n      return handleCallback(callback, toError(result));\n    }\n\n    // Create statistics value\n    var stats = {};\n    if (result.timeMillis) stats['processtime'] = result.timeMillis;\n    if (result.counts) stats['counts'] = result.counts;\n    if (result.timing) stats['timing'] = result.timing;\n\n    // invoked with inline?\n    if (result.results) {\n      // If we wish for no verbosity\n      if (options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, null, result.results);\n      }\n\n      return handleCallback(callback, null, { results: result.results, stats: stats });\n    }\n\n    // The returned collection\n    var collection = null;\n\n    // If we have an object it's a different db\n    if (result.result != null && typeof result.result === 'object') {\n      var doc = result.result;\n      // Return a collection from another db\n      var Db = require('./db');\n      collection = new Db(doc.db, self.s.db.s.topology, self.s.db.s.options).collection(\n        doc.collection\n      );\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = self.s.db.collection(result.result);\n    }\n\n    // If we wish for no verbosity\n    if (options['verbose'] == null || !options['verbose']) {\n      return handleCallback(callback, err, collection);\n    }\n\n    // Return stats as third set of values\n    handleCallback(callback, err, { collection: collection, stats: stats });\n  });\n};\n\n/**\n * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {UnorderedBulkOperation}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return unordered(this.s.topology, this, options);\n};\n\n/**\n * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return ordered(this.s.topology, this, options);\n};\n\n// Figure out the read preference\nvar getReadPreference = function(self, options, db) {\n  let r = null;\n  if (options.readPreference) {\n    r = options.readPreference;\n  } else if (self.s.readPreference) {\n    r = self.s.readPreference;\n  } else if (db.s.readPreference) {\n    r = db.s.readPreference;\n  } else {\n    return options;\n  }\n\n  if (typeof r === 'string') {\n    options.readPreference = new ReadPreference(r);\n  } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n    const mode = r.mode || r.preference;\n    if (mode && typeof mode === 'string') {\n      options.readPreference = new ReadPreference(mode, r.tags, {\n        maxStalenessSeconds: r.maxStalenessSeconds\n      });\n    }\n  } else if (!(r instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + r);\n  }\n\n  return options;\n};\n\n// modifies documents before being inserted or updated\nconst prepareDocs = function(self, docs, options) {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : self.s.db.options.forceServerObjectId;\n\n  const unmap = typeof self.s.options.unmap === 'function' ? self.s.options.unmap : false;\n\n  // no need to modify the docs if server sets the ObjectId\n  // and unmap collection option is unset\n  if (forceServerObjectId === true && !unmap) {\n    return docs;\n  }\n\n  return docs.map(function(doc) {\n    if (forceServerObjectId !== true && doc._id == null) {\n      doc._id = self.s.pkFactory.createPk();\n    }\n\n    return unmap ? unmap(doc) : doc;\n  });\n};\n\nmodule.exports = Collection;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('./cursor');\n\n/**\n * @fileOverview The **CommandCursor** class is an internal class that embodies a\n * generalized cursor based on a MongoDB command allowing for iteration over the\n * results returned. It supports one by one document iteration, conversion to an\n * array or can be iterated as a Node 0.10.X or higher stream\n *\n * **CommandCursor Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('listCollectionsExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // List the database collections available\n *     db.listCollections().toArray(function(err, items) {\n *       test.equal(null, err);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class CommandCursor\n * @extends external:Readable\n * @fires CommandCursor#data\n * @fires CommandCursor#end\n * @fires CommandCursor#close\n * @fires CommandCursor#readable\n * @return {CommandCursor} an CommandCursor instance.\n */\nvar CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var state = CommandCursor.INIT;\n  var streamOptions = {};\n\n  // MaxTimeMS\n  var maxTimeMS = null;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal state\n  this.s = {\n    // MaxTimeMS\n    maxTimeMS: maxTimeMS,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology Options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Optional ClientSession\n    session: options.session\n  };\n};\n\n/**\n * CommandCursor stream data event, fired for each document in the cursor.\n *\n * @event CommandCursor#data\n * @type {object}\n */\n\n/**\n * CommandCursor stream end event\n *\n * @event CommandCursor#end\n * @type {null}\n */\n\n/**\n * CommandCursor stream close event\n *\n * @event CommandCursor#close\n * @type {null}\n */\n\n/**\n * CommandCursor stream readable event\n *\n * @event CommandCursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(CommandCursor, Readable);\n\n// Set the methods to inherit from prototype\nvar methodsToInherit = [\n  '_next',\n  'next',\n  'hasNext',\n  'each',\n  'forEach',\n  'toArray',\n  'rewind',\n  'bufferedCount',\n  'readBufferedDocuments',\n  'close',\n  'isClosed',\n  'kill',\n  'setCursorBatchSize',\n  '_find',\n  '_getmore',\n  '_killcursor',\n  'isDead',\n  'explain',\n  'isNotified',\n  'isKilled',\n  '_endSession',\n  '_initImplicitSession'\n];\n\n// Only inherit the types we need\nfor (var i = 0; i < methodsToInherit.length; i++) {\n  CommandCursor.prototype[methodsToInherit[i]] = CoreCursor.prototype[methodsToInherit[i]];\n}\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCommandCursor.prototype.setReadPreference = function(readPreference) {\n  if (this.s.state === CommandCursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (this.s.state !== CommandCursor.INIT) {\n    throw MongoError.create({\n      message: 'cannot change cursor readPreference after cursor has been accessed',\n      driver: true\n    });\n  }\n\n  if (readPreference instanceof ReadPreference) {\n    this.s.options.readPreference = readPreference;\n  } else if (typeof readPreference === 'string') {\n    this.s.options.readPreference = new ReadPreference(readPreference);\n  } else {\n    throw new TypeError('Invalid read preference: ' + readPreference);\n  }\n\n  return this;\n};\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {CommandCursor}\n */\nCommandCursor.prototype.batchSize = function(value) {\n  if (this.s.state === CommandCursor.CLOSED || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  if (typeof value !== 'number')\n    throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n  if (this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Add a maxTimeMS stage to the aggregation pipeline\n * @method\n * @param {number} value The state maxTimeMS value.\n * @return {CommandCursor}\n */\nCommandCursor.prototype.maxTimeMS = function(value) {\n  if (this.s.topology.lastIsMaster().minWireVersion > 2) {\n    this.s.cmd.maxTimeMS = value;\n  }\n  return this;\n};\n\nCommandCursor.prototype.get = CommandCursor.prototype.toArray;\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function CommandCursor.prototype.next\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function CommandCursor.prototype.hasNext\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed.\n * @method CommandCursor.prototype.toArray\n * @param {CommandCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method CommandCursor.prototype.each\n * @param {CommandCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method CommandCursor.prototype.close\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method CommandCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Clone the cursor\n * @function CommandCursor.prototype.clone\n * @return {CommandCursor}\n */\n\n/**\n * Resets the cursor\n * @function CommandCursor.prototype.rewind\n * @return {CommandCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback CommandCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback CommandCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method CommandCursor.prototype.forEach\n * @param {CommandCursor~iteratorCallback} iterator The iteration callback.\n * @param {CommandCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nCommandCursor.INIT = 0;\nCommandCursor.OPEN = 1;\nCommandCursor.CLOSED = 2;\n\nmodule.exports = CommandCursor;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst deprecate = require('util').deprecate;\nconst formattedOrderClause = require('./utils').formattedOrderClause;\nconst handleCallback = require('./utils').handleCallback;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('mongodb-core').Cursor;\nconst Map = require('mongodb-core').BSON.Map;\nconst executeOperation = require('./utils').executeOperation;\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nvar flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nvar fields = ['numberOfRetries', 'tailableRetryInterval'];\nvar push = Array.prototype.push;\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Cursor cursor options.\n *\n * collection.find({}).project({a:1})                             // Create a projection of field a\n * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10\n * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5\n * collection.find({}).filter({a:1})                              // Set query on the cursor\n * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries\n * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable\n * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay\n * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout\n * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData\n * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial\n * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}\n * collection.find({}).max(10)                                    // Set the cursor max\n * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS\n * collection.find({}).min(100)                                   // Set the cursor min\n * collection.find({}).returnKey(10)                              // Set the cursor returnKey\n * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference\n * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId\n * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query\n * collection.find({}).hint('a_1')                                // Set the cursor hint\n *\n * All options are chainable, so one can do the following.\n *\n * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var state = Cursor.INIT;\n  var streamOptions = {};\n\n  // Tailable cursor options\n  var numberOfRetries = options.numberOfRetries || 5;\n  var tailableRetryInterval = options.tailableRetryInterval || 500;\n  var currentNumberOfRetries = numberOfRetries;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal cursor state\n  this.s = {\n    // Tailable cursor options\n    numberOfRetries: numberOfRetries,\n    tailableRetryInterval: tailableRetryInterval,\n    currentNumberOfRetries: currentNumberOfRetries,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Current doc\n    currentDoc: null,\n    // Optional ClientSession\n    session: options.session\n  };\n\n  // Translate correctly\n  if (this.s.options.noCursorTimeout === true) {\n    this.addCursorFlag('noCursorTimeout', true);\n  }\n\n  // Set the sort value\n  this.sortValue = this.s.cmd.sort;\n\n  // Get the batchSize\n  var batchSize =\n    cmd.cursor && cmd.cursor.batchSize\n      ? cmd.cursor && cmd.cursor.batchSize\n      : options.cursor && options.cursor.batchSize\n        ? options.cursor.batchSize\n        : 1000;\n\n  // Set the batchSize\n  this.setCursorBatchSize(batchSize);\n};\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(Cursor, Readable);\n\n// Map core cursor _next method so we can apply mapping\nCursor.prototype._next = function() {\n  if (this._initImplicitSession) {\n    this._initImplicitSession();\n  }\n  return CoreCursor.prototype.next.apply(this, arguments);\n};\n\nfor (var name in CoreCursor.prototype) {\n  Cursor.prototype[name] = CoreCursor.prototype[name];\n}\n\nCursor.prototype._initImplicitSession = function() {\n  if (!this.s.session && this.s.topology.hasSessionSupport()) {\n    this.s.session = this.s.topology.startSession({ owner: this });\n    this.cursorState.session = this.s.session;\n  }\n};\n\nCursor.prototype._endSession = function() {\n  const didCloseCursor = CoreCursor.prototype._endSession.apply(this, arguments);\n  if (didCloseCursor) {\n    this.s.session = undefined;\n  }\n};\n\n/**\n * Check if there is any document still available in the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.hasNext = function(callback) {\n  return executeOperation(this.s.topology, hasNext, [this, callback], {\n    skipSessions: true\n  });\n};\n\nconst hasNext = (self, callback) => {\n  if (self.s.currentDoc) {\n    return callback(null, true);\n  }\n\n  nextObject(self, function(err, doc) {\n    if (err) return callback(err, null);\n    if (self.s.state === Cursor.CLOSED || self.isDead()) return callback(null, false);\n    if (!doc) return callback(null, false);\n    self.s.currentDoc = doc;\n    callback(null, true);\n  });\n};\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.next = function(callback) {\n  return executeOperation(this.s.topology, next, [this, callback], {\n    skipSessions: true\n  });\n};\n\nconst next = (self, callback) => {\n  // Return the currentDoc if someone called hasNext first\n  if (self.s.currentDoc) {\n    var doc = self.s.currentDoc;\n    self.s.currentDoc = null;\n    return callback(null, doc);\n  }\n\n  // Return the next object\n  nextObject(self, callback);\n};\n\n/**\n * Set the cursor query\n * @method\n * @param {object} filter The filter object used for the cursor.\n * @return {Cursor}\n */\nCursor.prototype.filter = function(filter) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.query = filter;\n  return this;\n};\n\n/**\n * Set the cursor maxScan\n * @method\n * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query\n * @deprecated as of MongoDB 4.0\n * @return {Cursor}\n */\nCursor.prototype.maxScan = deprecate(function(maxScan) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxScan = maxScan;\n  return this;\n}, 'Cursor.maxScan is deprecated, and will be removed in a later version');\n\n/**\n * Set the cursor hint\n * @method\n * @param {object} hint If specified, then the query system will only consider plans using the hinted index.\n * @return {Cursor}\n */\nCursor.prototype.hint = function(hint) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.hint = hint;\n  return this;\n};\n\n/**\n * Set the cursor min\n * @method\n * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.min = function(min) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  this.s.cmd.min = min;\n  return this;\n};\n\n/**\n * Set the cursor max\n * @method\n * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.max = function(max) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.max = max;\n  return this;\n};\n\n/**\n * Set the cursor returnKey\n * @method\n * @param {object} returnKey Only return the index field or fields for the results of the query. If $returnKey is set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields. Use one of the following forms:\n * @return {Cursor}\n */\nCursor.prototype.returnKey = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.returnKey = value;\n  return this;\n};\n\n/**\n * Set the cursor showRecordId\n * @method\n * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n * @return {Cursor}\n */\nCursor.prototype.showRecordId = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.showDiskLoc = value;\n  return this;\n};\n\n/**\n * Set the cursor snapshot\n * @method\n * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document.\n * @deprecated as of MongoDB 4.0\n * @return {Cursor}\n */\nCursor.prototype.snapshot = deprecate(function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.snapshot = value;\n  return this;\n}, 'Cursor Snapshot is deprecated, and will be removed in a later version');\n\n/**\n * Set a node.js specific cursor option\n * @method\n * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n * @param {object} value The field value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setCursorOption = function(field, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (fields.indexOf(field) === -1) {\n    throw MongoError.create({\n      message: f('option %s not a supported option %s', field, fields),\n      driver: true\n    });\n  }\n\n  this.s[field] = value;\n  if (field === 'numberOfRetries') this.s.currentNumberOfRetries = value;\n  return this;\n};\n\n/**\n * Add a cursor flag to the cursor\n * @method\n * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial'].\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addCursorFlag = function(flag, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (flags.indexOf(flag) === -1) {\n    throw MongoError.create({\n      message: f('flag %s not a supported flag %s', flag, flags),\n      driver: true\n    });\n  }\n\n  if (typeof value !== 'boolean') {\n    throw MongoError.create({ message: f('flag %s must be a boolean value', flag), driver: true });\n  }\n\n  this.s.cmd[flag] = value;\n  return this;\n};\n\n/**\n * Add a query modifier to the cursor query\n * @method\n * @param {string} name The query modifier (must start with $, such as $orderby etc)\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addQueryModifier = function(name, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (name[0] !== '$') {\n    throw MongoError.create({ message: f('%s is not a valid query modifier'), driver: true });\n  }\n\n  // Strip of the $\n  var field = name.substr(1);\n  // Set on the command\n  this.s.cmd[field] = value;\n  // Deal with the special case for sort\n  if (field === 'orderby') this.s.cmd.sort = this.s.cmd[field];\n  return this;\n};\n\n/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n * @method\n * @param {string} value The comment attached to this query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.comment = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.comment = value;\n  return this;\n};\n\n/**\n * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the tailed query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxAwaitTimeMS = function(value) {\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'maxAwaitTimeMS must be a number', driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxAwaitTimeMS = value;\n  return this;\n};\n\n/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxTimeMS = function(value) {\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'maxTimeMS must be a number', driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxTimeMS = value;\n  return this;\n};\n\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\n/**\n * Sets a field projection for the query.\n * @method\n * @param {object} value The field projection object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.project = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.fields = value;\n  return this;\n};\n\n/**\n * Sets the sort order of the cursor query.\n * @method\n * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n * @param {number} [direction] The direction of the sorting (1 or -1).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.sort = function(keyOrList, direction) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support sorting\", driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  var order = keyOrList;\n\n  // We have an array of arrays, we need to preserve the order of the sort\n  // so we will us a Map\n  if (Array.isArray(order) && Array.isArray(order[0])) {\n    order = new Map(\n      order.map(function(x) {\n        var value = [x[0], null];\n        if (x[1] === 'asc') {\n          value[1] = 1;\n        } else if (x[1] === 'desc') {\n          value[1] = -1;\n        } else if (x[1] === 1 || x[1] === -1) {\n          value[1] = x[1];\n        } else {\n          throw new MongoError(\n            \"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n          );\n        }\n\n        return value;\n      })\n    );\n  }\n\n  if (direction != null) {\n    order = [[keyOrList, direction]];\n  }\n\n  this.s.cmd.sort = order;\n  this.sortValue = order;\n  return this;\n};\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.batchSize = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support batchSize\", driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n  }\n\n  this.s.cmd.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Set the collation options for the cursor.\n * @method\n * @param {object} value The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.collation = function(value) {\n  this.s.cmd.collation = value;\n  return this;\n};\n\n/**\n * Set the limit for the cursor.\n * @method\n * @param {number} value The limit for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.limit = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support limit\", driver: true });\n  }\n\n  if (this.s.state === Cursor.OPEN || this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'limit requires an integer', driver: true });\n  }\n\n  this.s.cmd.limit = value;\n  // this.cursorLimit = value;\n  this.setCursorLimit(value);\n  return this;\n};\n\n/**\n * Set the skip for the cursor.\n * @method\n * @param {number} value The skip for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.skip = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support skip\", driver: true });\n  }\n\n  if (this.s.state === Cursor.OPEN || this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'skip requires an integer', driver: true });\n  }\n\n  this.s.cmd.skip = value;\n  this.setCursorSkip(value);\n  return this;\n};\n\n/**\n * The callback format for results\n * @callback Cursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null|boolean)} result The result object if the command was executed successfully.\n */\n\n/**\n * Clone the cursor\n * @function external:CoreCursor#clone\n * @return {Cursor}\n */\n\n/**\n * Resets the cursor\n * @function external:CoreCursor#rewind\n * @return {null}\n */\n\n// Get the next available document from the cursor, returns null if no more documents are available.\nvar nextObject = function(self, callback) {\n  if (self.s.state === Cursor.CLOSED || (self.isDead && self.isDead()))\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  if (self.s.state === Cursor.INIT && self.s.cmd.sort) {\n    try {\n      self.s.cmd.sort = formattedOrderClause(self.s.cmd.sort);\n    } catch (err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  self._next(function(err, doc) {\n    self.s.state = Cursor.OPEN;\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n};\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nvar loop = function(self, callback) {\n  // No more items we are done\n  if (self.bufferedCount() === 0) return;\n  // Get the next document\n  self._next(callback);\n  // Loop\n  return loop;\n};\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method\n * @deprecated\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.each = function(callback) {\n  // Rewind cursor state\n  this.rewind();\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n  // Run the query\n  _each(this, callback);\n};\n\n// Run the each loop\nvar _each = function(self, callback) {\n  if (!callback) throw MongoError.create({ message: 'callback is mandatory', driver: true });\n  if (self.isNotified()) return;\n  if (self.s.state === Cursor.CLOSED || self.isDead()) {\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  }\n\n  if (self.s.state === Cursor.INIT) self.s.state = Cursor.OPEN;\n\n  // Define function to avoid global scope escape\n  var fn = null;\n  // Trampoline all the entries\n  if (self.bufferedCount() > 0) {\n    while ((fn = loop(self, callback))) fn(self, callback);\n    _each(self, callback);\n  } else {\n    self.next(function(err, item) {\n      if (err) return handleCallback(callback, err);\n      if (item == null) {\n        return self.close({ skipKillCursors: true }, () => handleCallback(callback, null, null));\n      }\n\n      if (handleCallback(callback, null, item) === false) return;\n      _each(self, callback);\n    });\n  }\n};\n\n/**\n * The callback format for the forEach iterator method\n * @callback Cursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback Cursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method\n * @param {Cursor~iteratorCallback} iterator The iteration callback.\n * @param {Cursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.forEach = function(iterator, callback) {\n  this.each(function(err, doc) {\n    if (err) {\n      callback(err);\n      return false;\n    }\n    if (doc != null) {\n      iterator(doc);\n      return true;\n    }\n    if (doc == null && callback) {\n      var internalCallback = callback;\n      callback = null;\n      internalCallback(null);\n      return false;\n    }\n  });\n};\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setReadPreference = function(readPreference) {\n  if (this.s.state !== Cursor.INIT) {\n    throw MongoError.create({\n      message: 'cannot change cursor readPreference after cursor has been accessed',\n      driver: true\n    });\n  }\n\n  if (readPreference instanceof ReadPreference) {\n    this.s.options.readPreference = readPreference;\n  } else if (typeof readPreference === 'string') {\n    this.s.options.readPreference = new ReadPreference(readPreference);\n  } else {\n    throw new TypeError('Invalid read preference: ' + readPreference);\n  }\n\n  return this;\n};\n\n/**\n * The callback format for results\n * @callback Cursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.toArray = function(callback) {\n  var self = this;\n  if (self.s.options.tailable) {\n    throw MongoError.create({\n      message: 'Tailable cursor cannot be converted to array',\n      driver: true\n    });\n  }\n\n  return executeOperation(this.s.topology, toArray, [this, callback], {\n    skipSessions: true\n  });\n};\n\nvar toArray = function(self, callback) {\n  var items = [];\n\n  // Reset cursor\n  self.rewind();\n  self.s.state = Cursor.INIT;\n\n  // Fetch all the documents\n  var fetchDocs = function() {\n    self._next(function(err, doc) {\n      if (err) {\n        return self._endSession\n          ? self._endSession(() => handleCallback(callback, err))\n          : handleCallback(callback, err);\n      }\n      if (doc == null) {\n        return self.close({ skipKillCursors: true }, () => handleCallback(callback, null, items));\n      }\n\n      // Add doc to items\n      items.push(doc);\n\n      // Get all buffered objects\n      if (self.bufferedCount() > 0) {\n        var docs = self.readBufferedDocuments(self.bufferedCount());\n\n        // Transform the doc if transform method added\n        if (self.s.transforms && typeof self.s.transforms.doc === 'function') {\n          docs = docs.map(self.s.transforms.doc);\n        }\n\n        push.apply(items, docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    });\n  };\n\n  fetchDocs();\n};\n\n/**\n * The callback format for results\n * @callback Cursor~countResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} count The count of documents.\n */\n\n/**\n * Get the count of documents for this cursor\n * @method\n * @param {boolean} [applySkipLimit=true] Should the count command apply limit and skip settings on the cursor or in the passed in options.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.skip=null] The number of documents to skip.\n * @param {number} [options.limit=null] The maximum amounts to count before aborting.\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Cursor~countResultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.count = function(applySkipLimit, opts, callback) {\n  if (this.s.cmd.query == null)\n    throw MongoError.create({ message: 'count can only be used with find command', driver: true });\n  if (typeof opts === 'function') (callback = opts), (opts = {});\n  opts = opts || {};\n\n  if (typeof applySkipLimit === 'function') {\n    callback = applySkipLimit;\n    applySkipLimit = true;\n  }\n\n  if (this.s.session) {\n    opts = Object.assign({}, opts, { session: this.s.session });\n  }\n\n  return executeOperation(this.s.topology, count, [this, applySkipLimit, opts, callback], {\n    skipSessions: !!this.s.session\n  });\n};\n\nvar count = function(self, applySkipLimit, opts, callback) {\n  if (applySkipLimit) {\n    if (typeof self.cursorSkip() === 'number') opts.skip = self.cursorSkip();\n    if (typeof self.cursorLimit() === 'number') opts.limit = self.cursorLimit();\n  }\n\n  // Command\n  var delimiter = self.s.ns.indexOf('.');\n\n  var command = {\n    count: self.s.ns.substr(delimiter + 1),\n    query: self.s.cmd.query\n  };\n\n  // Apply a readConcern if set\n  if (self.s.cmd.readConcern) {\n    command.readConcern = self.s.cmd.readConcern;\n  }\n\n  // Apply a hint if set\n  if (self.s.cmd.hint) {\n    command.hint = self.s.cmd.hint;\n  }\n\n  if (typeof opts.maxTimeMS === 'number') {\n    command.maxTimeMS = opts.maxTimeMS;\n  } else if (self.s.cmd && typeof self.s.cmd.maxTimeMS === 'number') {\n    command.maxTimeMS = self.s.cmd.maxTimeMS;\n  }\n\n  // Merge in any options\n  if (opts.skip) command.skip = opts.skip;\n  if (opts.limit) command.limit = opts.limit;\n  if (self.s.options.hint) command.hint = self.s.options.hint;\n\n  // Set cursor server to the same as the topology\n  self.server = self.topology.s.coreTopology;\n\n  // Execute the command\n  self.s.topology.command(\n    f('%s.$cmd', self.s.ns.substr(0, delimiter)),\n    command,\n    function(err, result) {\n      callback(err, result ? result.result.n : null);\n    },\n    self.options\n  );\n};\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.skipKillCursors] Bypass calling killCursors when closing the cursor.\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, { skipKillCursors: false }, options);\n\n  this.s.state = Cursor.CLOSED;\n  if (!options.skipKillCursors) {\n    // Kill the cursor\n    this.kill();\n  }\n\n  const completeClose = () => {\n    // Emit the close event for the cursor\n    this.emit('close');\n\n    // Callback if provided\n    if (typeof callback === 'function') {\n      return handleCallback(callback, null, this);\n    }\n\n    // Return a Promise\n    return new this.s.promiseLibrary(function(resolve) {\n      resolve();\n    });\n  };\n\n  if (this.s.session) {\n    return this._endSession(() => completeClose());\n  }\n\n  return completeClose();\n};\n\n/**\n * Map all documents using the provided function\n * @method\n * @param {function} [transform] The mapping transformation method.\n * @return {Cursor}\n */\nCursor.prototype.map = function(transform) {\n  if (this.cursorState.transforms && this.cursorState.transforms.doc) {\n    var oldTransform = this.cursorState.transforms.doc;\n    this.cursorState.transforms.doc = function(doc) {\n      return transform(oldTransform(doc));\n    };\n  } else {\n    this.cursorState.transforms = { doc: transform };\n  }\n  return this;\n};\n\n/**\n * Is the cursor closed\n * @method\n * @return {boolean}\n */\nCursor.prototype.isClosed = function() {\n  return this.isDead();\n};\n\nCursor.prototype.destroy = function(err) {\n  if (err) this.emit('error', err);\n  this.pause();\n  this.close();\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n */\nCursor.prototype.stream = function(options) {\n  this.s.streamOptions = options || {};\n  return this;\n};\n\n/**\n * Execute the explain for the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.explain = function(callback) {\n  this.s.cmd.explain = true;\n\n  // Do we have a readConcern\n  if (this.s.cmd.readConcern) {\n    delete this.s.cmd['readConcern'];\n  }\n\n  return executeOperation(this.s.topology, this._next.bind(this), [callback], {\n    skipSessions: true\n  });\n};\n\nCursor.prototype._read = function() {\n  var self = this;\n  if (self.s.state === Cursor.CLOSED || self.isDead()) {\n    return self.push(null);\n  }\n\n  // Get the next item\n  self.next(function(err, result) {\n    if (err) {\n      if (self.listeners('error') && self.listeners('error').length > 0) {\n        self.emit('error', err);\n      }\n      if (!self.isDead()) self.close();\n\n      // Emit end event\n      self.emit('end');\n      return self.emit('finish');\n    }\n\n    // If we provided a transformation method\n    if (typeof self.s.streamOptions.transform === 'function' && result != null) {\n      return self.push(self.s.streamOptions.transform(result));\n    }\n\n    // If we provided a map function\n    if (\n      self.cursorState.transforms &&\n      typeof self.cursorState.transforms.doc === 'function' &&\n      result != null\n    ) {\n      return self.push(self.cursorState.transforms.doc(result));\n    }\n\n    // Return the result\n    self.push(result);\n\n    if (result === null && self.isDead()) {\n      self.once('end', () => {\n        self.close();\n        self.emit('finish');\n      });\n    }\n  });\n};\n\nObject.defineProperty(Cursor.prototype, 'readPreference', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    return this.s.options.readPreference;\n  }\n});\n\nObject.defineProperty(Cursor.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    // TODO: refactor this logic into core\n    var ns = this.s.ns || '';\n    var firstDot = ns.indexOf('.');\n    if (firstDot < 0) {\n      return {\n        database: this.s.ns,\n        collection: ''\n      };\n    }\n    return {\n      database: ns.substr(0, firstDot),\n      collection: ns.substr(firstDot + 1)\n    };\n  }\n});\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nCursor.INIT = 0;\nCursor.OPEN = 1;\nCursor.CLOSED = 2;\nCursor.GET_MORE = 3;\n\nmodule.exports = Cursor;\n","'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst getSingleProperty = require('./utils').getSingleProperty;\nconst shallowClone = require('./utils').shallowClone;\nconst parseIndexOptions = require('./utils').parseIndexOptions;\nconst debugOptions = require('./utils').debugOptions;\nconst CommandCursor = require('./command_cursor');\nconst handleCallback = require('./utils').handleCallback;\nconst filterOptions = require('./utils').filterOptions;\nconst toError = require('./utils').toError;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst f = require('util').format;\nconst Admin = require('./admin');\nconst Code = require('mongodb-core').BSON.Code;\nconst MongoError = require('mongodb-core').MongoError;\nconst ObjectID = require('mongodb-core').ObjectID;\nconst Logger = require('mongodb-core').Logger;\nconst Collection = require('./collection');\nconst crypto = require('crypto');\nconst mergeOptionsAndWriteConcern = require('./utils').mergeOptionsAndWriteConcern;\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\n\nvar debugFields = [\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'native_parser',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'raw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bufferMaxEntries',\n  'numberOfRetries',\n  'retryMiliSeconds',\n  'readPreference',\n  'pkFactory',\n  'parentDb',\n  'promiseLibrary',\n  'noListener'\n];\n\n// Filter out any write concern options\nvar illegalCommandFields = [\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'strict',\n  'serializeFunctions',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session'\n];\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Select the database by name\n *   const testDb = client.db(dbName);\n *   client.close();\n * });\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'w',\n  'wtimeout',\n  'fsync',\n  'j',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'bufferMaxEntries',\n  'authSource',\n  'ignoreUndefined',\n  'promoteLongs',\n  'promiseLibrary',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'parentDb',\n  'noListener',\n  'loggerLevel',\n  'logger',\n  'promoteBuffers',\n  'promoteLongs',\n  'promoteValues',\n  'compression',\n  'retryWrites'\n];\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @property {object} topology Access the topology object (single server, replicaset or mongos).\n * @fires Db#close\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nvar Db = function(databaseName, topology, options) {\n  options = options || {};\n  if (!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n  var self = this;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Filter the options\n  options = filterOptions(options, legalOptionNames);\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // var self = this;  // Internal state of the db object\n  this.s = {\n    // Database name\n    databaseName: databaseName,\n    // DbCache\n    dbCache: {},\n    // Children db's\n    children: [],\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Logger instance\n    logger: Logger('Db', options),\n    // Get the bson parser\n    bson: topology ? topology.bson : null,\n    // Unpack read preference\n    readPreference: options.readPreference,\n    // Set buffermaxEntries\n    bufferMaxEntries: typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : -1,\n    // Parent db (if chained)\n    parentDb: options.parentDb || null,\n    // Set up the primary key factory or fallback to ObjectID\n    pkFactory: options.pkFactory || ObjectID,\n    // Get native parser\n    nativeParser: options.nativeParser || options.native_parser,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // No listener\n    noListener: typeof options.noListener === 'boolean' ? options.noListener : false,\n    // ReadConcern\n    readConcern: options.readConcern\n  };\n\n  // Ensure we have a valid db name\n  validateDatabaseName(self.s.databaseName);\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', self.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', self.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', self.s.databaseName);\n\n  // This is a child db, do not register any listeners\n  if (options.parentDb) return;\n  if (this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(self, 'error', self));\n  topology.on('timeout', createListener(self, 'timeout', self));\n  topology.on('close', createListener(self, 'close', self));\n  topology.on('parseError', createListener(self, 'parseError', self));\n  topology.once('open', createListener(self, 'open', self));\n  topology.once('fullsetup', createListener(self, 'fullsetup', self));\n  topology.once('all', createListener(self, 'all', self));\n  topology.on('reconnect', createListener(self, 'reconnect', self));\n};\n\ninherits(Db, EventEmitter);\n\n// Topology\nObject.defineProperty(Db.prototype, 'topology', {\n  enumerable: true,\n  get: function() {\n    return this.s.topology;\n  }\n});\n\n// Options\nObject.defineProperty(Db.prototype, 'options', {\n  enumerable: true,\n  get: function() {\n    return this.s.options;\n  }\n});\n\n// slaveOk specified\nObject.defineProperty(Db.prototype, 'slaveOk', {\n  enumerable: true,\n  get: function() {\n    if (\n      this.s.options.readPreference != null &&\n      (this.s.options.readPreference !== 'primary' ||\n        this.s.options.readPreference.mode !== 'primary')\n    ) {\n      return true;\n    }\n    return false;\n  }\n});\n\n// get the write Concern\nObject.defineProperty(Db.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    var ops = {};\n    if (this.s.options.w != null) ops.w = this.s.options.w;\n    if (this.s.options.j != null) ops.j = this.s.options.j;\n    if (this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if (this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * Ensures provided read preference is properly converted into an object\n * @param {(ReadPreference|string|object)} readPreference the user provided read preference\n * @return {ReadPreference}\n */\nconst convertReadPreference = function(readPreference) {\n  if (readPreference) {\n    if (typeof readPreference === 'string') {\n      return new ReadPreference(readPreference);\n    } else if (\n      readPreference &&\n      !(readPreference instanceof ReadPreference) &&\n      typeof readPreference === 'object'\n    ) {\n      const mode = readPreference.mode || readPreference.preference;\n      if (mode && typeof mode === 'string') {\n        return new ReadPreference(mode, readPreference.tags, {\n          maxStalenessSeconds: readPreference.maxStalenessSeconds\n        });\n      }\n    } else if (!(readPreference instanceof ReadPreference)) {\n      throw new TypeError('Invalid read preference: ' + readPreference);\n    }\n  }\n\n  return readPreference;\n};\n\n/**\n * The callback format for results\n * @callback Db~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\nvar executeCommand = function(self, command, options, callback) {\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  var dbName = options.dbName || options.authdb || self.s.databaseName;\n\n  // If we have a readPreference set\n  if (options.readPreference == null && self.s.readPreference) {\n    options.readPreference = self.s.readPreference;\n  }\n\n  // Convert the readPreference if its not a write\n  if (options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  } else {\n    options.readPreference = ReadPreference.primary;\n  }\n\n  // Debug information\n  if (self.s.logger.isDebug())\n    self.s.logger.debug(\n      f(\n        'executing command %s against %s with options [%s]',\n        JSON.stringify(command),\n        f('%s.$cmd', dbName),\n        JSON.stringify(debugOptions(debugFields, options))\n      )\n    );\n\n  // Execute command\n  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {\n    if (err) return handleCallback(callback, err);\n    if (options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n};\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  // Change the callback\n  if (typeof options === 'function') (callback = options), (options = {});\n  // Clone the options\n  options = shallowClone(options);\n\n  return executeOperation(this.s.topology, executeCommand, [this, command, options, callback]);\n};\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\nvar collectionKeys = [\n  'pkFactory',\n  'readPreference',\n  'serializeFunctions',\n  'strict',\n  'readConcern',\n  'ignoreUndefined',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs'\n];\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you\n * can use it without a callback in the following way: `var collection = db.collection('mycollection');`\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {function} [options.map] Function to map documents returned in find, findOne, and findAndModify commands.\n * @param {function} [options.unmap] Function to unmap documents passed to insertOne, insertMany, and replaceOne commands.\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} [callback] The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  var self = this;\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern || this.s.readConcern;\n\n  // Do we have ignoreUndefined set\n  if (this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Merge in all needed options and ensure correct writeConcern merging from db level\n  options = mergeOptionsAndWriteConcern(options, this.s.options, collectionKeys, true);\n\n  // Execute\n  if (options == null || !options.strict) {\n    try {\n      var collection = new Collection(\n        this,\n        this.s.topology,\n        this.s.databaseName,\n        name,\n        this.s.pkFactory,\n        options\n      );\n      if (callback) callback(null, collection);\n      return collection;\n    } catch (err) {\n      if (err instanceof MongoError && callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if (typeof callback !== 'function') {\n    throw toError(f('A callback is required in strict mode. While getting collection %s.', name));\n  }\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  // Strict mode\n  this.listCollections({ name: name }, options).toArray(function(err, collections) {\n    if (err != null) return handleCallback(callback, err, null);\n    if (collections.length === 0)\n      return handleCallback(\n        callback,\n        toError(f('Collection %s does not exist. Currently in strict mode.', name)),\n        null\n      );\n\n    try {\n      return handleCallback(\n        callback,\n        null,\n        new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options)\n      );\n    } catch (err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n};\n\nvar createCollection = function(self, name, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern(shallowClone(options), { db: self }, options);\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  // Check if we have the name\n  self\n    .listCollections({ name: name }, finalOptions)\n    .setReadPreference(ReadPreference.PRIMARY)\n    .toArray(function(err, collections) {\n      if (err != null) return handleCallback(callback, err, null);\n      if (collections.length > 0 && finalOptions.strict) {\n        return handleCallback(\n          callback,\n          MongoError.create({\n            message: f('Collection %s already exists. Currently in strict mode.', name),\n            driver: true\n          }),\n          null\n        );\n      } else if (collections.length > 0) {\n        try {\n          return handleCallback(\n            callback,\n            null,\n            new Collection(\n              self,\n              self.s.topology,\n              self.s.databaseName,\n              name,\n              self.s.pkFactory,\n              options\n            )\n          );\n        } catch (err) {\n          return handleCallback(callback, err);\n        }\n      }\n\n      // Create collection command\n      var cmd = { create: name };\n\n      // Decorate command with writeConcern if supported\n      applyWriteConcern(cmd, { db: self }, options);\n\n      // Add all optional parameters\n      for (var n in options) {\n        if (\n          options[n] != null &&\n          typeof options[n] !== 'function' &&\n          illegalCommandFields.indexOf(n) === -1\n        ) {\n          cmd[n] = options[n];\n        }\n      }\n\n      // Force a primary read Preference\n      finalOptions.readPreference = ReadPreference.PRIMARY;\n\n      // Execute command\n      self.command(cmd, finalOptions, function(err) {\n        if (err) return handleCallback(callback, err);\n        handleCallback(\n          callback,\n          null,\n          new Collection(\n            self,\n            self.s.topology,\n            self.s.databaseName,\n            name,\n            self.s.pkFactory,\n            options\n          )\n        );\n      });\n    });\n};\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {boolean} [options.autoIndexId=true] DEPRECATED: Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0\n * @param {number} [options.size=null] The size of the capped collection in bytes.\n * @param {number} [options.max=null] The maximum number of documents in the capped collection.\n * @param {number} [options.flags=null] Optional. Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag.\n * @param {object} [options.storageEngine=null] Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher.\n * @param {object} [options.validator=null] Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher.\n * @param {string} [options.validationLevel=null] Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher.\n * @param {string} [options.validationAction=null] Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher.\n * @param {object} [options.indexOptionDefaults=null] Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher.\n * @param {string} [options.viewOn=null] The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher.\n * @param {array} [options.pipeline=null] An array that consists of the aggregation pipeline stage. create creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n\n  if (options.autoIndexId !== undefined) {\n    console.warn('the autoIndexId option is deprecated and will be removed in a future release');\n  }\n\n  return executeOperation(this.s.topology, createCollection, [this, name, options, callback]);\n};\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Build command object\n  var commandObject = { dbStats: true };\n  // Check if we have the scale value\n  if (options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // If we have a readPreference set\n  if (options.readPreference == null && this.s.readPreference) {\n    options.readPreference = this.s.readPreference;\n  }\n\n  // Execute the command\n  return this.command(commandObject, options, callback);\n};\n\n// Transformation methods for cursor results\nvar listCollectionsTranforms = function(databaseName) {\n  var matching = f('%s.', databaseName);\n\n  return {\n    doc: function(doc) {\n      var index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if (doc.name && index === 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  };\n};\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} [filter={}] Query to filter collections by\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Shallow clone the object\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Ensure valid readPreference\n  if (options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  } else {\n    options.readPreference = this.s.readPreference || ReadPreference.primary;\n  }\n\n  // We have a list collections command\n  if (this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? { batchSize: options.batchSize } : {};\n    // Build the command\n    var command = { listCollections: true, filter: filter, cursor: cursor };\n    // Set the AggregationCursor constructor\n    options.cursorFactory = CommandCursor;\n    // Create the cursor\n    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);\n    // Do we have a readPreference, apply it\n    if (options.readPreference) {\n      cursor.setReadPreference(options.readPreference);\n    }\n    // Return the cursor\n    return cursor;\n  }\n\n  // We cannot use the listCollectionsCommand\n  if (!this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    if (\n      typeof filter.name === 'string' &&\n      !new RegExp('^' + this.databaseName + '\\\\.').test(filter.name)\n    ) {\n      filter = shallowClone(filter);\n      filter.name = f('%s.%s', this.s.databaseName, filter.name);\n    }\n  }\n\n  // No filter, filter by current database\n  if (filter == null) {\n    filter.name = f('/%s/', this.s.databaseName);\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if (filter.name) {\n    filter = { $and: [{ name: filter.name }, { name: /^((?!\\$).)*$/ }] };\n  } else {\n    filter = { name: /^((?!\\$).)*$/ };\n  }\n\n  // Return options\n  var _options = { transforms: listCollectionsTranforms(this.s.databaseName) };\n  // Get the cursor\n  cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);\n  // Do we have a readPreference, apply it\n  if (options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if (options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\nvar evaluate = function(self, code, parameters, options, callback) {\n  var finalCode = code;\n  var finalParameters = [];\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if (!(finalCode && finalCode._bsontype === 'Code')) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if (parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if (parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  var cmd = { $eval: finalCode, args: finalParameters };\n  // Check if the nolock parameter is passed in\n  if (options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new ReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  self.command(cmd, options, function(err, result) {\n    if (err) return handleCallback(callback, err, null);\n    if (result && result.ok === 1) return handleCallback(callback, null, result.retval);\n    if (result)\n      return handleCallback(\n        callback,\n        MongoError.create({ message: f('eval failed: %s', result.errmsg), driver: true }),\n        null\n      );\n    handleCallback(callback, err, result);\n  });\n};\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = function(code, parameters, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, evaluate, [this, code, parameters, options, callback]);\n};\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Add return new collection\n  options.new_collection = true;\n\n  const collection = this.collection(fromCollection);\n  return executeOperation(this.s.topology, collection.rename.bind(collection), [\n    toCollection,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Command to execute\n  var cmd = { drop: name };\n\n  // Decorate with write concern\n  applyWriteConcern(cmd, { db: this }, options);\n\n  // options\n  const opts = Object.assign({}, this.s.options, { readPreference: ReadPreference.PRIMARY });\n  if (options.session) opts.session = options.session;\n\n  return executeOperation(this.s.topology, dropCollection, [this, cmd, opts, callback]);\n};\n\nconst dropCollection = (self, cmd, options, callback) => {\n  return self.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if (self.serverConfig && self.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (err) return handleCallback(callback, err);\n    if (result.ok) return handleCallback(callback, null, true);\n    handleCallback(callback, null, false);\n  });\n};\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Drop database command\n  var cmd = { dropDatabase: 1 };\n\n  // Decorate with write concern\n  applyWriteConcern(cmd, { db: this }, options);\n\n  // Ensure primary only\n  const finalOptions = Object.assign({}, this.s.options, {\n    readPreference: ReadPreference.PRIMARY\n  });\n\n  if (options.session) {\n    finalOptions.session = options.session;\n  }\n\n  return executeOperation(this.s.topology, dropDatabase, [this, cmd, finalOptions, callback]);\n};\n\nconst dropDatabase = (self, cmd, options, callback) => {\n  self.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if (self.serverConfig && self.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n};\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, collections, [this, options, callback]);\n};\n\nvar collections = function(self, options, callback) {\n  // Let's get the collection names\n  self.listCollections({}, options).toArray(function(err, documents) {\n    if (err != null) return handleCallback(callback, err, null);\n    // Filter collections removing any illegal ones\n    documents = documents.filter(function(doc) {\n      return doc.name.indexOf('$') === -1;\n    });\n\n    // Return the collection objects\n    handleCallback(\n      callback,\n      null,\n      documents.map(function(d) {\n        return new Collection(\n          self,\n          self.s.topology,\n          self.s.databaseName,\n          d.name,\n          self.s.pkFactory,\n          self.s.options\n        );\n      })\n    );\n  });\n};\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Convert read preference\n  if (options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  }\n\n  return executeOperation(this.s.topology, executeDbAdminCommand, [\n    this,\n    selector,\n    options,\n    callback\n  ]);\n};\n\nconst executeDbAdminCommand = (self, selector, options, callback) => {\n  self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n    // Did the user destroy the topology\n    if (self.serverConfig && self.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.result);\n  });\n};\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? shallowClone(options) : {};\n\n  return executeOperation(this.s.topology, createIndex, [\n    this,\n    name,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n};\n\nvar createIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = Object.assign({}, { readPreference: ReadPreference.PRIMARY }, options);\n  finalOptions = applyWriteConcern(finalOptions, { db: self }, options);\n\n  // Ensure we have a callback\n  if (finalOptions.writeConcern && typeof callback !== 'function') {\n    throw MongoError.create({\n      message: 'Cannot use a writeConcern without a provided callback',\n      driver: true\n    });\n  }\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {\n    if (err == null) return handleCallback(callback, err, result);\n\n    // 67 = 'CannotCreateIndex' (malformed index options)\n    // 85 = 'IndexOptionsConflict' (index already exists with different options)\n    // 86 = 'IndexKeySpecsConflict' (index already exists with the same name)\n    // 11000 = 'DuplicateKey' (couldn't build unique index because of dupes)\n    // 11600 = 'InterruptedAtShutdown' (interrupted at shutdown)\n    // These errors mean that the server recognized `createIndex` as a command\n    // and so we don't need to fallback to an insert.\n    if (\n      err.code === 67 ||\n      err.code === 11000 ||\n      err.code === 85 ||\n      err.code === 86 ||\n      err.code === 11600\n    ) {\n      return handleCallback(callback, err, result);\n    }\n\n    // Create command\n    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    self.s.topology.insert(\n      f('%s.%s', self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION),\n      doc,\n      finalOptions,\n      function(err, result) {\n        if (callback == null) return;\n        if (err) return handleCallback(callback, err);\n        if (result == null) return handleCallback(callback, null, null);\n        if (result.result.writeErrors)\n          return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n        handleCallback(callback, null, doc.name);\n      }\n    );\n  });\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, ensureIndex, [\n    this,\n    name,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n};\n\nvar ensureIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = applyWriteConcern({}, { db: self }, options);\n  // Create command\n  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);\n  var index_name = selector.name;\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Merge primary readPreference\n  finalOptions.readPreference = ReadPreference.PRIMARY;\n\n  // Check if the index allready exists\n  self.indexInformation(name, finalOptions, function(err, indexInformation) {\n    if (err != null && err.code !== 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if (indexInformation == null || !indexInformation[index_name]) {\n      self.createIndex(name, fieldOrSpec, options, callback);\n    } else {\n      if (typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n};\n\nDb.prototype.addChild = function(db) {\n  if (this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n};\n\nvar _executeAuthCreateUserCommand = function(self, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if (typeof username === 'string' && password != null && typeof password === 'object') {\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if (options.digestPassword != null) {\n    throw toError(\n      \"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\"\n    );\n  }\n\n  // Get additional values\n  var customData = options.customData != null ? options.customData : {};\n  var roles = Array.isArray(options.roles) ? options.roles : [];\n  var maxTimeMS = typeof options.maxTimeMS === 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if (roles.length === 0) {\n    console.log('Creating a user without roles is deprecated in MongoDB >= 2.6');\n  }\n\n  // Get the error options\n  var commandOptions = { writeCommand: true };\n  if (options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if (maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if (\n    (self.databaseName.toLowerCase() === 'admin' || options.dbName === 'admin') &&\n    !Array.isArray(options.roles)\n  ) {\n    roles = ['root'];\n  } else if (!Array.isArray(options.roles)) {\n    roles = ['dbOwner'];\n  }\n\n  const digestPassword = self.s.topology.lastIsMaster().maxWireVersion >= 7;\n\n  // Build the command to execute\n  var command = {\n    createUser: username,\n    customData: customData,\n    roles: roles,\n    digestPassword\n  };\n\n  // Apply write concern to command\n  command = applyWriteConcern(command, { db: self }, options);\n\n  let userPassword = password;\n\n  if (!digestPassword) {\n    // Use node md5 generator\n    let md5 = crypto.createHash('md5');\n    // Generate keys used for authentication\n    md5.update(username + ':mongo:' + password);\n    userPassword = md5.digest('hex');\n  }\n\n  // No password\n  if (typeof password === 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if (err && err.ok === 0 && err.code === undefined)\n      return handleCallback(callback, { code: -5000 }, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(\n      callback,\n      !result.ok ? toError(result) : null,\n      result.ok ? [{ user: username, pwd: '' }] : null\n    );\n  });\n};\n\nvar addUser = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Attempt to execute auth command\n  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {\n    // We need to perform the backward compatible insert operation\n    if (err && err.code === -5000) {\n      var finalOptions = applyWriteConcern(shallowClone(options), { db: self }, options);\n\n      // Use node md5 generator\n      var md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + ':mongo:' + password);\n      var userPassword = md5.digest('hex');\n\n      // If we have another db set\n      var db = options.dbName ? new Db(options.dbName, self.s.topology, self.s.options) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Check if we are inserting the first user\n      collection.count({}, finalOptions, function(err, count) {\n        // We got an error (f.ex not authorized)\n        if (err != null) return handleCallback(callback, err, null);\n        // Check if the user exists and update i\n        collection\n          .find({ user: username }, { dbName: options['dbName'] }, finalOptions)\n          .toArray(function(err) {\n            // We got an error (f.ex not authorized)\n            if (err != null) return handleCallback(callback, err, null);\n            // Add command keys\n            finalOptions.upsert = true;\n\n            // We have a user, let's update the password or upsert if not\n            collection.update(\n              { user: username },\n              { $set: { user: username, pwd: userPassword } },\n              finalOptions,\n              function(err) {\n                if (count === 0 && err)\n                  return handleCallback(callback, null, [{ user: username, pwd: userPassword }]);\n                if (err) return handleCallback(callback, err, null);\n                handleCallback(callback, null, [{ user: username, pwd: userPassword }]);\n              }\n            );\n          });\n      });\n\n      return;\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, err, r);\n  });\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  // Unpack the parameters\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, addUser, [this, username, password, options, callback]);\n};\n\nvar _executeAuthRemoveUserCommand = function(self, username, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Get the error options\n  var commandOptions = { writeCommand: true };\n  if (options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  var maxTimeMS = typeof options.maxTimeMS === 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if (maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  var command = {\n    dropUser: username\n  };\n\n  // Apply write concern to command\n  command = applyWriteConcern(command, { db: self }, options);\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if (err && !err.ok && err.code === undefined) return handleCallback(callback, { code: -5000 });\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n};\n\nvar removeUser = function(self, username, options, callback) {\n  // Attempt to execute command\n  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {\n    if (err && err.code === -5000) {\n      var finalOptions = applyWriteConcern(shallowClone(options), { db: self }, options);\n      // If we have another db set\n      var db = options.dbName ? new Db(options.dbName, self.s.topology, self.s.options) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Locate the user\n      collection.findOne({ user: username }, finalOptions, function(err, user) {\n        if (user == null) return handleCallback(callback, err, false);\n        collection.remove({ user: username }, finalOptions, function(err) {\n          handleCallback(callback, err, true);\n        });\n      });\n\n      return;\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, err, result);\n  });\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, removeUser, [this, username, options, callback]);\n};\n\n/**\n * Set the current profiling level of MongoDB\n *\n * @param {string} level The new profiling level (off, slow_only, all).\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.setProfilingLevel = function(level, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, setProfilingLevel, [this, level, options, callback]);\n};\n\nvar setProfilingLevel = function(self, level, options, callback) {\n  var command = {};\n  var profile = 0;\n\n  if (level === 'off') {\n    profile = 0;\n  } else if (level === 'slow_only') {\n    profile = 1;\n  } else if (level === 'all') {\n    profile = 2;\n  } else {\n    return callback(new Error('Error: illegal profiling level value ' + level));\n  }\n\n  // Set up the profile number\n  command['profile'] = profile;\n\n  self.command(command, options, function(err, doc) {\n    if (err == null && doc.ok === 1) return callback(null, level);\n    return err != null\n      ? callback(err, null)\n      : callback(new Error('Error with profile command'), null);\n  });\n};\n\n/**\n * Retrive the current profiling information for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Query the system.profile collection directly.\n */\nDb.prototype.profilingInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, profilingInfo, [this, options, callback]);\n};\n\nvar profilingInfo = function(self, options, callback) {\n  try {\n    self\n      .collection('system.profile')\n      .find({}, null, options)\n      .toArray(callback);\n  } catch (err) {\n    return callback(err, null);\n  }\n};\n\n/**\n * Retrieve the current profiling Level for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.profilingLevel = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, profilingLevel, [this, options, callback]);\n};\n\nvar profilingLevel = function(self, options, callback) {\n  self.command({ profile: -1 }, options, function(err, doc) {\n    if (err == null && doc.ok === 1) {\n      var was = doc.was;\n      if (was === 0) return callback(null, 'off');\n      if (was === 1) return callback(null, 'slow_only');\n      if (was === 2) return callback(null, 'all');\n      return callback(new Error('Error: illegal profiling level value ' + was), null);\n    } else {\n      err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n    }\n  });\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexInformation, [this, name, options, callback]);\n};\n\nvar indexInformation = function(self, name, options, callback) {\n  // If we specified full information\n  var full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if (self.serverConfig && self.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  var processResults = function(indexes) {\n    // Contains all the information\n    var info = {};\n    // Process all the indexes\n    for (var i = 0; i < indexes.length; i++) {\n      var index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (var name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  };\n\n  // Get the list of indexes of the specified collection\n  self\n    .collection(name)\n    .listIndexes(options)\n    .toArray(function(err, indexes) {\n      if (err) return callback(toError(err));\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, []);\n      if (full) return handleCallback(callback, null, indexes);\n      handleCallback(callback, null, processResults(indexes));\n    });\n};\n\nvar createCreateIndexCommand = function(db, name, fieldOrSpec, options) {\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  var fieldHash = indexParameters.fieldHash;\n\n  // Generate the index name\n  var indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  var selector = {\n    ns: db.databaseName + '.' + name,\n    key: fieldHash,\n    name: indexName\n  };\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options === 'boolean' ? {} : options;\n\n  // Add all the options\n  var keysToOmit = Object.keys(selector);\n  for (var optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if (selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n  for (var i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n};\n\nvar createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) {\n  // Build the index\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  var indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  var keysToOmit = Object.keys(indexes[0]).concat([\n    'w',\n    'wtimeout',\n    'j',\n    'fsync',\n    'readPreference',\n    'session'\n  ]);\n\n  for (var optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n  }\n\n  // Get capabilities\n  var capabilities = self.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if (indexes[0].collation && capabilities && !capabilities.commandsTakeCollation) {\n    // Create a new error\n    var error = new MongoError(f('server/primary/mongos does not support collation'));\n    error.code = 67;\n    // Return the error\n    return callback(error);\n  }\n\n  // Create command, apply write concern to command\n  var cmd = applyWriteConcern({ createIndexes: name, indexes: indexes }, { db: self }, options);\n\n  // ReadPreference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Build the command\n  self.command(cmd, options, function(err, result) {\n    if (err) return handleCallback(callback, err, null);\n    if (result.ok === 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n};\n\n// Validate the database name\nvar validateDatabaseName = function(databaseName) {\n  if (typeof databaseName !== 'string')\n    throw MongoError.create({ message: 'database name must be a string', driver: true });\n  if (databaseName.length === 0)\n    throw MongoError.create({ message: 'database name cannot be the empty string', driver: true });\n  if (databaseName === '$external') return;\n\n  var invalidChars = [' ', '.', '$', '/', '\\\\'];\n  for (var i = 0; i < invalidChars.length; i++) {\n    if (databaseName.indexOf(invalidChars[i]) !== -1)\n      throw MongoError.create({\n        message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\",\n        driver: true\n      });\n  }\n};\n\n// Add listeners to topology\nvar createListener = function(self, e, object) {\n  var listener = function(err) {\n    if (object.listeners(e).length > 0) {\n      object.emit(e, err, self);\n\n      // Emit on all associated db's if available\n      for (var i = 0; i < self.s.children.length; i++) {\n        self.s.children[i].emit(e, err, self.s.children[i]);\n      }\n    }\n  };\n  return listener;\n};\n\n/**\n * Unref all sockets\n * @method\n */\nDb.prototype.unref = function() {\n  this.s.topology.unref();\n};\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';\nDb.SYSTEM_INDEX_COLLECTION = 'system.indexes';\nDb.SYSTEM_PROFILE_COLLECTION = 'system.profile';\nDb.SYSTEM_USER_COLLECTION = 'system.users';\nDb.SYSTEM_COMMAND_COLLECTION = '$cmd';\nDb.SYSTEM_JS_COLLECTION = 'system.js';\n\nmodule.exports = Db;\n","'use strict';\n\nvar stream = require('stream'),\n  util = require('util');\n\nmodule.exports = GridFSBucketReadStream;\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n *\n * @class\n * @param {Collection} chunks Handle for chunks collection\n * @param {Collection} files Handle for files collection\n * @param {Object} readPreference The read preference to use\n * @param {Object} filter The query to use to find the file document\n * @param {Object} [options=null] Optional settings.\n * @param {Number} [options.sort=null] Optional sort for the file find query\n * @param {Number} [options.skip=null] Optional skip for the file find query\n * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before\n * @fires GridFSBucketReadStream#error\n * @fires GridFSBucketReadStream#file\n * @return {GridFSBucketReadStream} a GridFSBucketReadStream instance.\n */\n\nfunction GridFSBucketReadStream(chunks, files, readPreference, filter, options) {\n  this.s = {\n    bytesRead: 0,\n    chunks: chunks,\n    cursor: null,\n    expected: 0,\n    files: files,\n    filter: filter,\n    init: false,\n    expectedEnd: 0,\n    file: null,\n    options: options,\n    readPreference: readPreference\n  };\n\n  stream.Readable.call(this);\n}\n\nutil.inherits(GridFSBucketReadStream, stream.Readable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketReadStream#error\n * @type {Error}\n */\n\n/**\n * Fires when the stream loaded the file document corresponding to the\n * provided id.\n *\n * @event GridFSBucketReadStream#file\n * @type {object}\n */\n\n/**\n * Emitted when a chunk of data is available to be consumed.\n *\n * @event GridFSBucketReadStream#data\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted (no more data events).\n *\n * @event GridFSBucketReadStream#end\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n *\n * @event GridFSBucketReadStream#close\n * @type {object}\n */\n\n/**\n * Reads from the cursor and pushes to the stream.\n * @method\n */\n\nGridFSBucketReadStream.prototype._read = function() {\n  var _this = this;\n  if (this.destroyed) {\n    return;\n  }\n\n  waitForFile(_this, function() {\n    doRead(_this);\n  });\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} start Offset in bytes to start reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.start = function(start) {\n  throwIfInitialized(this);\n  this.s.options.start = start;\n  return this;\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} end Offset in bytes to stop reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.end = function(end) {\n  throwIfInitialized(this);\n  this.s.options.end = end;\n  return this;\n};\n\n/**\n * Marks this stream as aborted (will never push another `data` event)\n * and kills the underlying cursor. Will emit the 'end' event, and then\n * the 'close' event once the cursor is successfully killed.\n *\n * @method\n * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred.\n * @fires GridFSBucketWriteStream#close\n * @fires GridFSBucketWriteStream#end\n */\n\nGridFSBucketReadStream.prototype.abort = function(callback) {\n  var _this = this;\n  this.push(null);\n  this.destroyed = true;\n  if (this.s.cursor) {\n    this.s.cursor.close(function(error) {\n      _this.emit('close');\n      callback && callback(error);\n    });\n  } else {\n    if (!this.s.init) {\n      // If not initialized, fire close event because we will never\n      // get a cursor\n      _this.emit('close');\n    }\n    callback && callback();\n  }\n};\n\n/**\n * @ignore\n */\n\nfunction throwIfInitialized(self) {\n  if (self.s.init) {\n    throw new Error('You cannot change options after the stream has entered' + 'flowing mode!');\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction doRead(_this) {\n  if (_this.destroyed) {\n    return;\n  }\n\n  _this.s.cursor.next(function(error, doc) {\n    if (_this.destroyed) {\n      return;\n    }\n    if (error) {\n      return __handleError(_this, error);\n    }\n    if (!doc) {\n      _this.push(null);\n      return _this.s.cursor.close(function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        _this.emit('close');\n      });\n    }\n\n    var bytesRemaining = _this.s.file.length - _this.s.bytesRead;\n    var expectedN = _this.s.expected++;\n    var expectedLength = Math.min(_this.s.file.chunkSize, bytesRemaining);\n\n    if (doc.n > expectedN) {\n      var errmsg = 'ChunkIsMissing: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    if (doc.n < expectedN) {\n      errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    var buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.length !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n;\n        return __handleError(_this, new Error(errmsg));\n      }\n\n      errmsg =\n        'ChunkIsWrongSize: Got unexpected length: ' + buf.length + ', expected: ' + expectedLength;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    _this.s.bytesRead += buf.length;\n\n    if (buf.length === 0) {\n      return _this.push(null);\n    }\n\n    var sliceStart = null;\n    var sliceEnd = null;\n\n    if (_this.s.bytesToSkip != null) {\n      sliceStart = _this.s.bytesToSkip;\n      _this.s.bytesToSkip = 0;\n    }\n\n    if (expectedN === _this.s.expectedEnd && _this.s.bytesToTrim != null) {\n      sliceEnd = _this.s.bytesToTrim;\n    }\n\n    // If the remaining amount of data left is < chunkSize read the right amount of data\n    if (_this.s.options.end && _this.s.options.end - _this.s.bytesToSkip < buf.length) {\n      sliceEnd = _this.s.options.end - _this.s.bytesToSkip;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.length);\n    }\n\n    _this.push(buf);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction init(self) {\n  var findOneOptions = {};\n  if (self.s.readPreference) {\n    findOneOptions.readPreference = self.s.readPreference;\n  }\n  if (self.s.options && self.s.options.sort) {\n    findOneOptions.sort = self.s.options.sort;\n  }\n  if (self.s.options && self.s.options.skip) {\n    findOneOptions.skip = self.s.options.skip;\n  }\n\n  self.s.files.findOne(self.s.filter, findOneOptions, function(error, doc) {\n    if (error) {\n      return __handleError(self, error);\n    }\n    if (!doc) {\n      var identifier = self.s.filter._id ? self.s.filter._id.toString() : self.s.filter.filename;\n      var errmsg = 'FileNotFound: file ' + identifier + ' was not found';\n      var err = new Error(errmsg);\n      err.code = 'ENOENT';\n      return __handleError(self, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      self.push(null);\n      return;\n    }\n\n    if (self.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      self.emit('close');\n      return;\n    }\n\n    self.s.bytesToSkip = handleStartOption(self, doc, self.s.options);\n\n    var filter = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (self.s.options && self.s.options.start != null) {\n      var skip = Math.floor(self.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n    self.s.cursor = self.s.chunks.find(filter).sort({ n: 1 });\n\n    if (self.s.readPreference) {\n      self.s.cursor.setReadPreference(self.s.readPreference);\n    }\n\n    self.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    self.s.file = doc;\n    self.s.bytesToTrim = handleEndOption(self, doc, self.s.cursor, self.s.options);\n    self.emit('file', doc);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction waitForFile(_this, callback) {\n  if (_this.s.file) {\n    return callback();\n  }\n\n  if (!_this.s.init) {\n    init(_this);\n    _this.s.init = true;\n  }\n\n  _this.once('file', function() {\n    callback();\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction handleStartOption(stream, doc, options) {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'negative');\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'greater than stream end (' +\n          options.end +\n          ')'\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction handleEndOption(stream, doc, cursor, options) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new Error(\n        'Stream end (' +\n          options.end +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream end (' + options.end + ') must not be ' + 'negative');\n    }\n\n    var start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error) {\n  _this.emit('error', error);\n}\n","'use strict';\n\nvar Emitter = require('events').EventEmitter;\nvar GridFSBucketReadStream = require('./download');\nvar GridFSBucketWriteStream = require('./upload');\nvar shallowClone = require('../utils').shallowClone;\nvar toError = require('../utils').toError;\nvar util = require('util');\nvar executeOperation = require('../utils').executeOperation;\n\nvar DEFAULT_GRIDFS_BUCKET_OPTIONS = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\nmodule.exports = GridFSBucket;\n\n/**\n * Constructor for a streaming GridFS interface\n * @class\n * @param {Db} db A db handle\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.bucketName=\"fs\"] The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot.\n * @param {number} [options.chunkSizeBytes=255 * 1024] Number of bytes stored in each chunk. Defaults to 255KB\n * @param {object} [options.writeConcern=null] Optional write concern to be passed to write operations, for instance `{ w: 1 }`\n * @param {object} [options.readPreference=null] Optional read preference to be passed to read operations\n * @fires GridFSBucketWriteStream#index\n * @return {GridFSBucket}\n */\n\nfunction GridFSBucket(db, options) {\n  Emitter.apply(this);\n  this.setMaxListeners(0);\n\n  if (options && typeof options === 'object') {\n    options = shallowClone(options);\n    var keys = Object.keys(DEFAULT_GRIDFS_BUCKET_OPTIONS);\n    for (var i = 0; i < keys.length; ++i) {\n      if (!options[keys[i]]) {\n        options[keys[i]] = DEFAULT_GRIDFS_BUCKET_OPTIONS[keys[i]];\n      }\n    }\n  } else {\n    options = DEFAULT_GRIDFS_BUCKET_OPTIONS;\n  }\n\n  this.s = {\n    db: db,\n    options: options,\n    _chunksCollection: db.collection(options.bucketName + '.chunks'),\n    _filesCollection: db.collection(options.bucketName + '.files'),\n    checkedIndexes: false,\n    calledOpenUploadStream: false,\n    promiseLibrary: db.s.promiseLibrary || Promise\n  };\n}\n\nutil.inherits(GridFSBucket, Emitter);\n\n/**\n * When the first call to openUploadStream is made, the upload stream will\n * check to see if it needs to create the proper indexes on the chunks and\n * files collections. This event is fired either when 1) it determines that\n * no index creation is necessary, 2) when it successfully creates the\n * necessary indexes.\n *\n * @event GridFSBucket#index\n * @type {Error}\n */\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.chunkSizeBytes=null] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata=null] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType=null] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases=null] Optional array of strings to store in the file document's `aliases` field\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStream = function(filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string|number|object} id A custom id used to identify the file\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.chunkSizeBytes=null] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata=null] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType=null] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases=null] Optional array of strings to store in the file document's `aliases` field\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStreamWithId = function(id, filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n\n  options.id = id;\n\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming file\n * data from GridFS.\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {Object} [options=null] Optional settings.\n * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStream = function(id, options) {\n  var filter = { _id: id };\n  options = {\n    start: options && options.start,\n    end: options && options.end\n  };\n\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Deletes a file with the given id\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.delete = function(id, callback) {\n  return executeOperation(this.s.db.s.topology, _delete, [this, id, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _delete(_this, id, callback) {\n  _this.s._filesCollection.deleteOne({ _id: id }, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n\n    _this.s._chunksCollection.deleteMany({ files_id: id }, function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      // Delete orphaned chunks before returning FileNotFound\n      if (!res.result.n) {\n        var errmsg = 'FileNotFound: no file with id ' + id + ' found';\n        return callback(new Error(errmsg));\n      }\n\n      callback();\n    });\n  });\n}\n\n/**\n * Convenience wrapper around find on the files collection\n * @method\n * @param {Object} filter\n * @param {Object} [options=null] Optional settings for cursor\n * @param {number} [options.batchSize=null] Optional batch size for cursor\n * @param {number} [options.limit=null] Optional limit for cursor\n * @param {number} [options.maxTimeMS=null] Optional maxTimeMS for cursor\n * @param {boolean} [options.noCursorTimeout=null] Optionally set cursor's `noCursorTimeout` flag\n * @param {number} [options.skip=null] Optional skip for cursor\n * @param {object} [options.sort=null] Optional sort for cursor\n * @return {Cursor}\n */\n\nGridFSBucket.prototype.find = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  var cursor = this.s._filesCollection.find(filter);\n\n  if (options.batchSize != null) {\n    cursor.batchSize(options.batchSize);\n  }\n  if (options.limit != null) {\n    cursor.limit(options.limit);\n  }\n  if (options.maxTimeMS != null) {\n    cursor.maxTimeMS(options.maxTimeMS);\n  }\n  if (options.noCursorTimeout != null) {\n    cursor.addCursorFlag('noCursorTimeout', options.noCursorTimeout);\n  }\n  if (options.skip != null) {\n    cursor.skip(options.skip);\n  }\n  if (options.sort != null) {\n    cursor.sort(options.sort);\n  }\n\n  return cursor;\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming the\n * file with the given name from GridFS. If there are multiple files with\n * the same name, this will stream the most recent file with the given name\n * (as determined by the `uploadDate` field). You can set the `revision`\n * option to change this behavior.\n * @method\n * @param {String} filename The name of the file to stream\n * @param {Object} [options=null] Optional settings\n * @param {number} [options.revision=-1] The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest.\n * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStreamByName = function(filename, options) {\n  var sort = { uploadDate: -1 };\n  var skip = null;\n  if (options && options.revision != null) {\n    if (options.revision >= 0) {\n      sort = { uploadDate: 1 };\n      skip = options.revision;\n    } else {\n      skip = -options.revision - 1;\n    }\n  }\n\n  var filter = { filename: filename };\n  options = {\n    sort: sort,\n    skip: skip,\n    start: options && options.start,\n    end: options && options.end\n  };\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Renames the file with the given _id to the given string\n * @method\n * @param {ObjectId} id the id of the file to rename\n * @param {String} filename new name for the file\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.rename = function(id, filename, callback) {\n  return executeOperation(this.s.db.s.topology, _rename, [this, id, filename, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _rename(_this, id, filename, callback) {\n  var filter = { _id: id };\n  var update = { $set: { filename: filename } };\n  _this.s._filesCollection.updateOne(filter, update, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n    if (!res.result.n) {\n      return callback(toError('File with id ' + id + ' not found'));\n    }\n    callback();\n  });\n}\n\n/**\n * Removes this bucket's files collection, followed by its chunks collection.\n * @method\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.drop = function(callback) {\n  return executeOperation(this.s.db.s.topology, _drop, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _drop(_this, callback) {\n  _this.s._filesCollection.drop(function(error) {\n    if (error) {\n      return callback(error);\n    }\n    _this.s._chunksCollection.drop(function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      return callback();\n    });\n  });\n}\n\n/**\n * Callback format for all GridFSBucket methods that can accept a callback.\n * @callback GridFSBucket~errorCallback\n * @param {MongoError} error An error instance representing any errors that occurred\n */\n","'use strict';\n\nvar core = require('mongodb-core');\nvar crypto = require('crypto');\nvar stream = require('stream');\nvar util = require('util');\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options=null] Optional settings.\n * @param {string|number|object} [options.id=null] Custom file id for the GridFS file.\n * @param {number} [options.chunkSizeBytes=null] The chunk size to use, in bytes\n * @param {number} [options.w=null] The write concern\n * @param {number} [options.wtimeout=null] The write concern timeout\n * @param {number} [options.j=null] The journal write concern\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance.\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  options = options || {};\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n  // Signals the write is all done\n  this.done = false;\n\n  this.id = options.id ? options.id : core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = new Buffer(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false,\n    aborted: false,\n    promiseLibrary: this.bucket.s.promiseLibrary\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * `end()` was called and the write stream successfully wrote the file\n * metadata and all the chunks to MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Places this write stream into an aborted state (all future writes fail)\n * and deletes all chunks that have already been written.\n *\n * @method\n * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred\n * @return {Promise} if no callback specified\n */\n\nGridFSBucketWriteStream.prototype.abort = function(callback) {\n  if (this.state.streamEnd) {\n    var error = new Error('Cannot abort a stream that has already completed');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  if (this.state.aborted) {\n    error = new Error('Cannot call abort() on a stream twice');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  this.state.aborted = true;\n  this.chunks.deleteMany({ files_id: this.id }, function(error) {\n    if (typeof callback === 'function') callback(error);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  var _this = this;\n  if (typeof chunk === 'function') {\n    (callback = chunk), (chunk = null), (encoding = null);\n  } else if (typeof encoding === 'function') {\n    (callback = encoding), (encoding = null);\n  }\n\n  if (checkAborted(this, callback)) {\n    return;\n  }\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', function(result) {\n      callback(null, result);\n    });\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false, unique: true }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.done) return true;\n  if (_this.state.streamEnd && _this.state.outstandingRequests === 0 && !_this.state.errored) {\n    // Set done so we dont' trigger duplicate createFilesDoc\n    _this.done = true;\n    // Create a new files doc\n    var filesDoc = createFilesDoc(\n      _this.id,\n      _this.length,\n      _this.chunkSizeBytes,\n      _this.md5.digest('hex'),\n      _this.filename,\n      _this.options.contentType,\n      _this.options.aliases,\n      _this.options.metadata\n    );\n\n    if (checkAborted(_this, callback)) {\n      return false;\n    }\n\n    _this.files.insert(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType, aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    md5: md5,\n    filename: filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  var inputBuf = Buffer.isBuffer(chunk) ? chunk : new Buffer(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos, inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      _this.md5.update(_this.bufToStore);\n      var doc = createChunkDoc(_this.id, _this.n, _this.bufToStore);\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(_this, callback)) {\n        return false;\n      }\n\n      _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = _this.options.writeConcern.w;\n    obj.wtimeout = _this.options.writeConcern.wtimeout;\n    obj.j = _this.options.writeConcern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = new Buffer(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  _this.md5.update(remnant);\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkAborted(_this, callback) {\n  if (_this.state.aborted) {\n    if (typeof callback === 'function') {\n      callback(new Error('this stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n","'use strict';\n\nvar Binary = require('mongodb-core').BSON.Binary,\n  ObjectID = require('mongodb-core').BSON.ObjectID;\n\n/**\n * Class for representing a single chunk in GridFS.\n *\n * @class\n *\n * @param file {GridStore} The {@link GridStore} object holding this chunk.\n * @param mongoObject {object} The mongo object representation of this chunk.\n *\n * @throws Error when the type of data field for {@link mongoObject} is not\n *     supported. Currently supported types for data field are instances of\n *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n *     from the bson module\n *\n * @see Chunk#buildMongoObject\n */\nvar Chunk = function(file, mongoObject, writeConcern) {\n  if (!(this instanceof Chunk)) return new Chunk(file, mongoObject);\n\n  this.file = file;\n  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;\n  this.writeConcern = writeConcern || { w: 1 };\n  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;\n  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;\n  this.data = new Binary();\n\n  if (typeof mongoObjectFinal.data === 'string') {\n    var buffer = new Buffer(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data, 0, mongoObjectFinal.data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (Array.isArray(mongoObjectFinal.data)) {\n    buffer = new Buffer(mongoObjectFinal.data.length);\n    var data = mongoObjectFinal.data.join('');\n    buffer.write(data, 0, data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (mongoObjectFinal.data && mongoObjectFinal.data._bsontype === 'Binary') {\n    this.data = mongoObjectFinal.data;\n  } else if (!Buffer.isBuffer(mongoObjectFinal.data) && !(mongoObjectFinal.data == null)) {\n    throw Error('Illegal chunk format');\n  }\n\n  // Update position\n  this.internalPosition = 0;\n};\n\n/**\n * Writes a data to this object and advance the read/write head.\n *\n * @param data {string} the data to write\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.write = function(data, callback) {\n  this.data.write(data, this.internalPosition, data.length, 'binary');\n  this.internalPosition = this.data.length();\n  if (callback != null) return callback(null, this);\n  return this;\n};\n\n/**\n * Reads data and advances the read/write head.\n *\n * @param length {number} The length of data to read.\n *\n * @return {string} The data read if the given length will not exceed the end of\n *     the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.read = function(length) {\n  // Default to full read if no index defined\n  length = length == null || length === 0 ? this.length() : length;\n\n  if (this.length() - this.internalPosition + 1 >= length) {\n    var data = this.data.read(this.internalPosition, length);\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return '';\n  }\n};\n\nChunk.prototype.readSlice = function(length) {\n  if (this.length() - this.internalPosition >= length) {\n    var data = null;\n    if (this.data.buffer != null) {\n      //Pure BSON\n      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);\n    } else {\n      //Native BSON\n      data = new Buffer(length);\n      length = this.data.readInto(data, this.internalPosition);\n    }\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Checks if the read/write head is at the end.\n *\n * @return {boolean} Whether the read/write head has reached the end of this\n *     chunk.\n */\nChunk.prototype.eof = function() {\n  return this.internalPosition === this.length() ? true : false;\n};\n\n/**\n * Reads one character from the data of this chunk and advances the read/write\n * head.\n *\n * @return {string} a single character data read if the the read/write head is\n *     not at the end of the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.getc = function() {\n  return this.read(1);\n};\n\n/**\n * Clears the contents of the data in this chunk and resets the read/write head\n * to the initial position.\n */\nChunk.prototype.rewind = function() {\n  this.internalPosition = 0;\n  this.data = new Binary();\n};\n\n/**\n * Saves this chunk to the database. Also overwrites existing entries having the\n * same id as this chunk.\n *\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.save = function(options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  self.file.chunkCollection(function(err, collection) {\n    if (err) return callback(err);\n\n    // Merge the options\n    var writeOptions = { upsert: true };\n    for (var name in options) writeOptions[name] = options[name];\n    for (name in self.writeConcern) writeOptions[name] = self.writeConcern[name];\n\n    if (self.data.length() > 0) {\n      self.buildMongoObject(function(mongoObject) {\n        var options = { forceServerObjectId: true };\n        for (var name in self.writeConcern) {\n          options[name] = self.writeConcern[name];\n        }\n\n        collection.replaceOne({ _id: self.objectId }, mongoObject, writeOptions, function(err) {\n          callback(err, self);\n        });\n      });\n    } else {\n      callback(null, self);\n    }\n    // });\n  });\n};\n\n/**\n * Creates a mongoDB object representation of this chunk.\n *\n * @param callback {function(Object)} This will be called after executing this\n *     method. The object will be passed to the first parameter and will have\n *     the structure:\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this chunk\n *          'files_id' : , // {number} foreign key to the file collection\n *          'n' : , // {number} chunk number\n *          'data' : , // {bson#Binary} the chunk data itself\n *        }\n *        </code></pre>\n *\n * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>\n */\nChunk.prototype.buildMongoObject = function(callback) {\n  var mongoObject = {\n    files_id: this.file.fileId,\n    n: this.chunkNumber,\n    data: this.data\n  };\n  // If we are saving using a specific ObjectId\n  if (this.objectId != null) mongoObject._id = this.objectId;\n\n  callback(mongoObject);\n};\n\n/**\n * @return {number} the length of the data\n */\nChunk.prototype.length = function() {\n  return this.data.length();\n};\n\n/**\n * The position of the read/write head\n * @name position\n * @lends Chunk#\n * @field\n */\nObject.defineProperty(Chunk.prototype, 'position', {\n  enumerable: true,\n  get: function() {\n    return this.internalPosition;\n  },\n  set: function(value) {\n    this.internalPosition = value;\n  }\n});\n\n/**\n * The default chunk size\n * @constant\n */\nChunk.DEFAULT_CHUNK_SIZE = 1024 * 255;\n\nmodule.exports = Chunk;\n","'use strict';\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const GridStore = require('mongodb').GridStore;\n * const ObjectID = require('mongodb').ObjectID;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   const gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           client.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\nconst Chunk = require('./chunk');\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst Buffer = require('buffer').Buffer;\nconst fs = require('fs');\nconst f = require('util').format;\nconst util = require('util');\nconst MongoError = require('mongodb-core').MongoError;\nconst inherits = util.inherits;\nconst Duplex = require('stream').Duplex;\nconst shallowClone = require('../utils').shallowClone;\nconst executeOperation = require('../utils').executeOperation;\n\nvar REFERENCE_BY_FILENAME = 0,\n  REFERENCE_BY_ID = 1;\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwriten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {string} [options.root=null] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type=null] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata=null] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  if (!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  this.db = db;\n\n  // Handle options\n  if (typeof options === 'undefined') options = {};\n  // Handle mode\n  if (typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if (typeof mode === 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if (id && id._bsontype === 'ObjectID') {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if (typeof filename === 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? 'r' : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root =\n    this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference =\n    this.options.readPreference || db.options.readPreference || ReadPreference.primary;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize =\n    this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary || Promise;\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, 'chunkSize', {\n    enumerable: true,\n    get: function() {\n      return this.internalChunkSize;\n    },\n    set: function(value) {\n      if (!(this.mode[0] === 'w' && this.position === 0 && this.uploadDate == null)) {\n        this.internalChunkSize = this.internalChunkSize;\n      } else {\n        this.internalChunkSize = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, 'md5', {\n    enumerable: true,\n    get: function() {\n      return this.internalMd5;\n    }\n  });\n\n  Object.defineProperty(this, 'chunkNumber', {\n    enumerable: true,\n    get: function() {\n      return this.currentChunk && this.currentChunk.chunkNumber\n        ? this.currentChunk.chunkNumber\n        : null;\n    }\n  });\n};\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.mode !== 'w' && this.mode !== 'w+' && this.mode !== 'r') {\n    throw MongoError.create({ message: 'Illegal mode ' + this.mode, driver: true });\n  }\n\n  return executeOperation(this.db.s.topology, open, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar open = function(self, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if (self.mode === 'w' || self.mode === 'w+') {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function() {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function() {\n        // Open the connection\n        _open(self, writeConcern, function(err, r) {\n          if (err) return callback(err);\n          self.isOpen = true;\n          callback(err, r);\n        });\n      });\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function(err, r) {\n      if (err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n};\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function() {\n  return this.position === this.length ? true : false;\n};\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, getc, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar getc = function(self, options, callback) {\n  if (self.eof()) {\n    callback(null, null);\n  } else if (self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n};\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function(string, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var finalString = string.match(/\\n$/) == null ? string + '\\n' : string;\n  return executeOperation(\n    this.db.s.topology,\n    this.write.bind(this),\n    [finalString, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function() {\n  return new GridStoreStream(this);\n};\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(\n    this.db.s.topology,\n    _writeNormal,\n    [this, data, close, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if (!this.writable) return;\n  this.readable = false;\n  if (this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n};\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function(file, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, writeFile, [this, file, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar writeFile = function(self, file, options, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function(err, fd) {\n      if (err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function(err, self) {\n    if (err) return callback(err, self);\n\n    fs.fstat(file, function(err, stats) {\n      if (err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n\n      // Write a chunk\n      var writeChunk = function() {\n        // Allocate the buffer\n        var _buffer = new Buffer(self.chunkSize);\n        // Read the file\n        fs.read(file, _buffer, 0, _buffer.length, offset, function(err, bytesRead, data) {\n          if (err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, { n: index++ }, self.writeConcern);\n          chunk.write(data.slice(0, bytesRead), function(err, chunk) {\n            if (err) return callback(err, self);\n\n            chunk.save({}, function(err) {\n              if (err) return callback(err, self);\n\n              self.position = self.position + bytesRead;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if (offset >= stats.size) {\n                fs.close(file, function(err) {\n                  if (err) return callback(err);\n\n                  self.close(function(err) {\n                    if (err) return callback(err, self);\n                    return callback(null, self);\n                  });\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      };\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n};\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, close, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar close = function(self, options, callback) {\n  if (self.mode[0] === 'w') {\n    // Set up options\n    options = Object.assign({}, self.writeConcern, options);\n\n    if (self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function(err) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.collection(function(err, files) {\n          if (err && typeof callback === 'function') return callback(err);\n\n          // Build the mongo object\n          if (self.uploadDate != null) {\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function(err, files) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function(err, mongoObject) {\n          if (err) {\n            if (typeof callback === 'function') return callback(err);\n            else throw err;\n          }\n\n          files.save(mongoObject, options, function(err) {\n            if (typeof callback === 'function') callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if (self.mode[0] === 'r') {\n    if (typeof callback === 'function') callback(null, null);\n  } else {\n    if (typeof callback === 'function')\n      callback(MongoError.create({ message: f('Illegal mode %s', self.mode), driver: true }));\n  }\n};\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function(callback) {\n  if (typeof callback === 'function') return this.db.collection(this.root + '.chunks', callback);\n  return this.db.collection(this.root + '.chunks');\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, unlink, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlink = function(self, options, callback) {\n  deleteChunks(self, function(err) {\n    if (err !== null) {\n      err.message = 'at deleteChunks: ' + err.message;\n      return callback(err);\n    }\n\n    self.collection(function(err, collection) {\n      if (err !== null) {\n        err.message = 'at collection: ' + err.message;\n        return callback(err);\n      }\n\n      collection.remove({ _id: self.fileId }, self.writeConcern, function(err) {\n        callback(err, self);\n      });\n    });\n  });\n};\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function(callback) {\n  if (typeof callback === 'function') this.db.collection(this.root + '.files', callback);\n  return this.db.collection(this.root + '.files');\n};\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function(separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : '\\n';\n  separator = separator || '\\n';\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.db.s.topology, readlines, [this, separator, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar readlines = function(self, separator, options, callback) {\n  self.read(function(err, data) {\n    if (err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for (var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n};\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, rewind, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar rewind = function(self, options, callback) {\n  if (self.currentChunk.chunkNumber !== 0) {\n    if (self.mode[0] === 'w') {\n      deleteChunks(self, function(err) {\n        if (err) return callback(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function(err, chunk) {\n        if (err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n};\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function(length, buffer, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.db.s.topology, read, [this, length, buffer, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar read = function(self, length, buffer, options, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? new Buffer(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if (self.currentChunk.length() - self.currentChunk.position + finalBuffer._index >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if (finalLength === 0 && finalBuffer.length === 0)\n      return callback(MongoError.create({ message: 'File does not exist', driver: true }), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n    if (err) return callback(err);\n\n    if (chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if (finalBuffer._index > 0) {\n        callback(null, finalBuffer);\n      } else {\n        callback(\n          MongoError.create({\n            message: 'no chunks found for file, possibly corrupt',\n            driver: true\n          }),\n          null\n        );\n      }\n    }\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback === 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function(resolve) {\n    resolve(self.position);\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function(position, seekLocation, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  seekLocation = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(\n    this.db.s.topology,\n    seek,\n    [this, position, seekLocation, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar seek = function(self, position, seekLocation, options, callback) {\n  // Seek only supports read mode\n  if (self.mode !== 'r') {\n    return callback(\n      MongoError.create({ message: 'seek is only supported for mode r', driver: true })\n    );\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if (seekLocationFinal === GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if (seekLocationFinal === GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition / self.chunkSize);\n  var seekChunk = function() {\n    nthChunk(self, newChunkNumber, function(err, chunk) {\n      if (err) return callback(err, null);\n      if (chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = self.position % self.chunkSize;\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n};\n\n/**\n * @ignore\n */\nvar _open = function(self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query =\n    self.referenceBy === REFERENCE_BY_ID ? { _id: self.fileId } : { filename: self.filename };\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if (query != null) {\n    collection.findOne(query, options, function(err, doc) {\n      if (err) {\n        return error(err);\n      }\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if (doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename =\n          self.mode === 'r' || self.filename === undefined ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode !== 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize =\n          self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId._bsontype === 'ObjectID' ? self.fileId.toHexString() : self.fileId;\n        return error(\n          MongoError.create({\n            message: f(\n              'file with id %s not opened for writing',\n              self.referenceBy === REFERENCE_BY_ID ? txtId : self.filename\n            ),\n            driver: true\n          }),\n          self\n        );\n      }\n\n      // Process the mode of the object\n      if (self.mode === 'r') {\n        nthChunk(self, 0, options, function(err, chunk) {\n          if (err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w' && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function(err) {\n          if (err) return error(err);\n          self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n          self.contentType =\n            self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize =\n            self.options['chunk_size'] == null\n              ? self.internalChunkSize\n              : self.options['chunk_size'];\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w') {\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if (self.mode === 'w+') {\n        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n          if (err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize =\n      self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    // No file exists set up write mode\n    if (self.mode === 'w') {\n      // Delete any existing chunks\n      deleteChunks(self, options, function(err) {\n        if (err) return error(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if (self.mode === 'w+') {\n      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n        if (err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error(err) {\n    if (error.err) return;\n    callback((error.err = err));\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function(self, buffer, close, callback) {\n  if (typeof close === 'function') {\n    callback = close;\n    close = null;\n  }\n  var finalClose = typeof close === 'boolean' ? close : false;\n\n  if (self.mode !== 'w') {\n    callback(\n      MongoError.create({\n        message: f(\n          'file with id %s not opened for writing',\n          self.referenceBy === REFERENCE_BY_ID ? self.referenceBy : self.filename\n        ),\n        driver: true\n      }),\n      null\n    );\n  } else {\n    if (self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while (leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n        firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n      // If we have left over data write it\n      if (leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for (var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function(err) {\n          if (err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if (numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if (finalClose) {\n              return self.close(function(err) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if (finalClose) {\n        return self.close(function(err) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function(self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    _id: self.fileId,\n    filename: self.filename,\n    contentType: self.contentType,\n    length: self.position ? self.position : 0,\n    chunkSize: self.chunkSize,\n    uploadDate: self.uploadDate,\n    aliases: self.aliases,\n    metadata: self.metadata\n  };\n\n  var md5Command = { filemd5: self.fileId, root: self.root };\n  self.db.command(md5Command, function(err, results) {\n    if (err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function(self, chunkNumber, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self\n    .chunkCollection()\n    .findOne({ files_id: self.fileId, n: chunkNumber }, options, function(err, chunk) {\n      if (err) return callback(err);\n\n      var finalChunk = chunk == null ? {} : chunk;\n      callback(null, new Chunk(self, finalChunk, self.writeConcern));\n    });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function(self) {\n  return Math.floor((self.length ? self.length - 1 : 0) / self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function(self, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if (self.fileId != null) {\n    self.chunkCollection().remove({ files_id: self.fileId }, options, function(err) {\n      if (err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n * The collection to be used for holding the files and chunks collection.\n *\n * @classconstant DEFAULT_ROOT_COLLECTION\n */\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n * Default file mime type\n *\n * @classconstant DEFAULT_CONTENT_TYPE\n */\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n * Seek mode where the given length is absolute.\n *\n * @classconstant IO_SEEK_SET\n */\nGridStore.IO_SEEK_SET = 0;\n\n/**\n * Seek mode where the given length is an offset to the current read/write head.\n *\n * @classconstant IO_SEEK_CUR\n */\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n * Seek mode where the given length is an offset to the end of the file.\n *\n * @classconstant IO_SEEK_END\n */\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    exists,\n    [db, fileIdObject, rootCollection, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar exists = function(db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    // Build query\n    var query =\n      typeof fileIdObject === 'string' ||\n      Object.prototype.toString.call(fileIdObject) === '[object RegExp]'\n        ? { filename: fileIdObject }\n        : { _id: fileIdObject }; // Attempt to locate file\n\n    // We have a specific query\n    if (\n      fileIdObject != null &&\n      typeof fileIdObject === 'object' &&\n      Object.prototype.toString.call(fileIdObject) !== '[object RegExp]'\n    ) {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, { readPreference: readPreference }, function(err, item) {\n      if (err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n};\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function(db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(db.s.topology, list, [db, rootCollection, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar list = function(db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if (rootCollection != null && typeof rootCollection === 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.primary;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, { readPreference: readPreference }, function(err, cursor) {\n      if (err) return callback(err);\n\n      cursor.each(function(err, item) {\n        if (item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function(db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    readStatic,\n    [db, name, length, offset, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readStatic = function(db, name, length, offset, options, callback) {\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if (offset && offset >= gridStore.length)\n      return callback('offset larger than size of file', null);\n    if (length && length > gridStore.length)\n      return callback('length is larger than the size of the file', null);\n    if (offset && length && offset + length > gridStore.length)\n      return callback('offset and length is larger than the size of the file', null);\n\n    if (offset != null) {\n      gridStore.seek(offset, function(err, gridStore) {\n        if (err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n};\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function(db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    readlinesStatic,\n    [db, name, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlinesStatic = function(db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? '\\n' : separator;\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n};\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function(db, names, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(db.s.topology, unlinkStatic, [this, db, names, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlinkStatic = function(self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if (names.constructor === Array) {\n    var tc = 0;\n    for (var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function() {\n        if (--tc === 0) {\n          callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, 'w', options).open(function(err, gridStore) {\n      if (err) return callback(err);\n      deleteChunks(gridStore, function(err) {\n        if (err) return callback(err);\n        gridStore.collection(function(err, collection) {\n          if (err) return callback(err);\n          collection.remove({ _id: gridStore.fileId }, writeConcern, function(err) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n};\n\n/**\n *  @ignore\n */\nvar _writeNormal = function(self, data, close, options, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if (Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, new Buffer(data, 'binary'), close, callback);\n  }\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  var finalOptions = {};\n  if (options.w != null) finalOptions.w = options.w;\n  if (options.journal === true) finalOptions.j = options.journal;\n  if (options.j === true) finalOptions.j = options.j;\n  if (options.fsync === true) finalOptions.fsync = options.fsync;\n  if (options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = { w: 1 };\n  options = options || {};\n\n  // Local options verification\n  if (\n    options.w != null ||\n    typeof options.j === 'boolean' ||\n    typeof options.journal === 'boolean' ||\n    typeof options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(options);\n  } else if (options.safe != null && typeof options.safe === 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if (typeof options.safe === 'boolean') {\n    finalOptions = { w: options.safe ? 1 : 0 };\n  } else if (\n    self.options.w != null ||\n    typeof self.options.j === 'boolean' ||\n    typeof self.options.journal === 'boolean' ||\n    typeof self.options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if (\n    self.safe &&\n    (self.safe.w != null ||\n      typeof self.safe.j === 'boolean' ||\n      typeof self.safe.journal === 'boolean' ||\n      typeof self.safe.fsync === 'boolean')\n  ) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if (typeof self.safe === 'boolean') {\n    finalOptions = { w: self.safe ? 1 : 0 };\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if (\n    finalOptions.w < 1 &&\n    (finalOptions.journal === true || finalOptions.j === true || finalOptions.fsync === true)\n  )\n    throw MongoError.create({\n      message: 'No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true',\n      driver: true\n    });\n\n  // Return the options\n  return finalOptions;\n};\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function(gs) {\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n};\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function(destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      if (err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n};\n\n// Called by stream\nGridStoreStream.prototype._read = function() {\n  var self = this;\n\n  var read = function() {\n    // Read data\n    self.gs.read(length, function(err, buffer) {\n      if (err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if (self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if (buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if (buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if (self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  };\n\n  // Set read length\n  var length =\n    self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if (err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n};\n\nGridStoreStream.prototype.destroy = function() {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n};\n\nGridStoreStream.prototype.write = function(chunk) {\n  var self = this;\n  if (self.endCalled)\n    return self.emit(\n      'error',\n      MongoError.create({ message: 'attempting to write to stream after end called', driver: true })\n    );\n  // Do we have to open the gridstore\n  if (!self.gs.isOpen) {\n    self.gs.open(function() {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function() {\n        process.nextTick(function() {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function() {\n      self.emit('drain');\n    });\n    return true;\n  }\n};\n\nGridStoreStream.prototype.end = function(chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if (chunk) {\n    self.gs.write(chunk, function() {\n      self.gs.close(function() {\n        if (typeof callback === 'function') callback();\n        self.emit('end');\n      });\n    });\n  }\n\n  self.gs.close(function() {\n    if (typeof callback === 'function') callback();\n    self.emit('end');\n  });\n};\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n","'use strict';\n\nconst parse = require('mongodb-core').parseConnectionString;\nconst Server = require('./topologies/server');\nconst Mongos = require('./topologies/mongos');\nconst ReplSet = require('./topologies/replset');\nconst EventEmitter = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst deprecate = require('util').deprecate;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst Logger = require('mongodb-core').Logger;\nconst MongoError = require('mongodb-core').MongoError;\nconst handleCallback = require('./utils').handleCallback;\nconst Db = require('./db');\nconst f = require('util').format;\nconst shallowClone = require('./utils').shallowClone;\nconst authenticate = require('./authenticate');\nconst ServerSessionPool = require('mongodb-core').Sessions.ServerSessionPool;\nconst executeOperation = require('./utils').executeOperation;\n\nconst legacyParse = deprecate(\n  require('./url_parser'),\n  'current URL string parser is deprecated, and will be removed in a future version. ' +\n    'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.'\n);\n\n/**\n * @fileOverview The **MongoClient** class is a class that allows for making Connections to MongoDB.\n *\n * @example\n * // Connect using a MongoClient instance\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * const mongoClient = new MongoClient(url);\n * mongoClient.connect(function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n *\n * @example\n * // Connect using the MongoClient.connect static method\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n */\nvar validOptionNames = [\n  'poolSize',\n  'ssl',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'sslKey',\n  'sslPass',\n  'sslCRL',\n  'autoReconnect',\n  'noDelay',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'connectTimeoutMS',\n  'family',\n  'socketTimeoutMS',\n  'reconnectTries',\n  'reconnectInterval',\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'secondaryAcceptableLatencyMS',\n  'acceptableLatencyMS',\n  'connectWithNoPrimary',\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'raw',\n  'bufferMaxEntries',\n  'readPreference',\n  'pkFactory',\n  'promiseLibrary',\n  'readConcern',\n  'maxStalenessSeconds',\n  'loggerLevel',\n  'logger',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs',\n  'domainsEnabled',\n  'checkServerIdentity',\n  'validateOptions',\n  'appname',\n  'auth',\n  'user',\n  'password',\n  'authMechanism',\n  'compression',\n  'fsync',\n  'readPreferenceTags',\n  'numberOfRetries',\n  'auto_reconnect',\n  'minSize',\n  'monitorCommands',\n  'retryWrites',\n  'useNewUrlParser'\n];\n\nconst validOptionsLowerCaseToCamelCase = validOptionNames.reduce((obj, name) => {\n  obj[name.toLowerCase()] = name;\n  return obj;\n}, {});\n\nfunction transformUrlOptions(_object) {\n  let object = Object.assign({ servers: _object.hosts }, _object.options);\n  for (let name in object) {\n    const camelCaseName = validOptionsLowerCaseToCamelCase[name];\n    if (camelCaseName) {\n      object[camelCaseName] = object[name];\n    }\n  }\n  if (_object.auth) {\n    const auth = _object.auth;\n    for (let i in auth) {\n      if (auth[i]) {\n        object[i] = auth[i];\n      }\n    }\n    if (auth.username) {\n      object.auth = auth;\n      object.user = auth.username;\n    }\n    if (auth.db) {\n      object.dbName = auth.db;\n    }\n  }\n  if (object.maxpoolsize) {\n    object.poolSize = object.maxpoolsize;\n  }\n  if (object.readconcernlevel) {\n    object.readConcern = { level: object.readconcernlevel };\n  }\n  if (object.wtimeoutms) {\n    object.wtimeout = object.wtimeoutms;\n  }\n  return object;\n}\n\nfunction legacyTransformUrlOptions(object) {\n  return mergeOptions(createUnifiedOptions({}, object), object, false);\n}\n\nvar ignoreOptionNames = ['native_parser'];\nvar legacyOptionNames = ['server', 'replset', 'replSet', 'mongos', 'db'];\n\nfunction validOptions(options) {\n  var _validOptions = validOptionNames.concat(legacyOptionNames);\n\n  for (var name in options) {\n    if (ignoreOptionNames.indexOf(name) !== -1) {\n      continue;\n    }\n\n    if (_validOptions.indexOf(name) === -1 && options.validateOptions) {\n      return new MongoError(f('option %s is not supported', name));\n    } else if (_validOptions.indexOf(name) === -1) {\n      console.warn(f('the options [%s] is not supported', name));\n    }\n\n    if (legacyOptionNames.indexOf(name) !== -1) {\n      console.warn(\n        f(\n          'the server/replset/mongos options are deprecated, ' +\n            'all their options are supported at the top level of the options object [%s]',\n          validOptionNames\n        )\n      );\n    }\n  }\n}\n\n/**\n * Creates a new MongoClient instance\n * @class\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting\n * @param {number} [options.family=null] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.socketTimeoutMS=360000] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w=null] The write concern\n * @param {number} [options.wtimeout=null] The write concern timeout\n * @param {boolean} [options.j=false] Specify a journal write concern\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {string} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism=undefined] Mechanism for authentication: MDEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1\n * @param {object} [options.compression=null] Type of compression to use: snappy or zlib\n * @param {boolean} [options.fsync=false] Specify a file sync write concern\n * @param {array} [options.readPreferenceTags=null] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this client\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {boolean} [options.useNewUrlParser=false] Determines whether or not to use the new url parser\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {MongoClient} a MongoClient instance\n */\nfunction MongoClient(url, options) {\n  if (!(this instanceof MongoClient)) return new MongoClient(url, options);\n\n  // Set up event emitter\n  EventEmitter.call(this);\n\n  // The internal state\n  this.s = {\n    url: url,\n    options: options || {},\n    promiseLibrary: null,\n    dbCache: {},\n    sessions: []\n  };\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.s.options.promiseLibrary || Promise;\n\n  // Add the promise to the internal state\n  this.s.promiseLibrary = promiseLibrary;\n}\n\n/**\n * @ignore\n */\ninherits(MongoClient, EventEmitter);\n\n/**\n * The callback format for results\n * @callback MongoClient~connectCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {MongoClient} client The connected client.\n */\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.prototype.connect = function(callback) {\n  // Validate options object\n  var err = validOptions(this.s.options);\n\n  if (typeof callback === 'string') {\n    throw new TypeError('`connect` only accepts a callback');\n  }\n\n  return executeOperation(this, connectOp, [this, err, callback], {\n    skipSessions: true\n  });\n};\n\nconst connectOp = (self, err, callback) => {\n  // Did we have a validation error\n  if (err) return callback(err);\n  // Fallback to callback based connect\n  connect(self, self.s.url, self.s.options, function(err) {\n    if (err) return callback(err);\n    callback(null, self);\n  });\n};\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.dbName=null] Logout against different database than current.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nMongoClient.prototype.logout = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Establish the correct database name\n  var dbName = this.s.options.authSource ? this.s.options.authSource : this.s.options.dbName;\n\n  return executeOperation(this, logout, [this, dbName, callback], {\n    skipSessions: true\n  });\n};\n\nconst logout = (self, dbName, callback) => {\n  self.topology.logout(dbName, function(err) {\n    if (err) return callback(err);\n    callback(null, true);\n  });\n};\n\n/**\n * Close the db and its underlying connections\n * @method\n * @param {boolean} force Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nMongoClient.prototype.close = function(force, callback) {\n  var self = this;\n  if (typeof force === 'function') (callback = force), (force = false);\n\n  // Close the topology connection\n  this.topology.close(force);\n\n  // Emit close event\n  self.emit('close', self);\n\n  // Fire close event on any cached db instances\n  for (var name in this.s.dbCache) {\n    this.s.dbCache[name].emit('close');\n  }\n\n  // Remove listeners after emit\n  self.removeAllListeners('close');\n\n  // Callback after next event loop tick\n  if (typeof callback === 'function')\n    return process.nextTick(function() {\n      handleCallback(callback, null);\n    });\n\n  // Return dummy promise\n  return new this.s.promiseLibrary(function(resolve) {\n    resolve();\n  });\n};\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} [dbName] The name of the database we want to use. If not provided, use database name from connection string.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nMongoClient.prototype.db = function(dbName, options) {\n  options = options || {};\n\n  // Default to db from connection string if not provided\n  if (!dbName) {\n    dbName = this.s.options.dbName;\n  }\n\n  // Copy the options and add out internal override of the not shared flag\n  var finalOptions = Object.assign({}, this.s.options, options);\n\n  // Do we have the db in the cache already\n  if (this.s.dbCache[dbName] && finalOptions.returnNonCachedInstance !== true) {\n    return this.s.dbCache[dbName];\n  }\n\n  // Add promiseLibrary\n  finalOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // If no topology throw an error message\n  if (!this.topology) {\n    throw new MongoError('MongoClient must be connected before calling MongoClient.prototype.db');\n  }\n\n  // Return the db object\n  var db = new Db(dbName, this.topology, finalOptions);\n\n  // Add the db to the cache\n  this.s.dbCache[dbName] = db;\n  // Return the database\n  return db;\n};\n\n/**\n * Check if MongoClient is connected\n *\n * @method\n * @param {string} name The name of the database we want to use.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {boolean}\n */\nMongoClient.prototype.isConnected = function(options) {\n  options = options || {};\n\n  if (!this.topology) return false;\n  return this.topology.isConnected(options);\n};\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @static\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {boolean} [options.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting\n * @param {number} [options.family=null] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.socketTimeoutMS=360000] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w=null] The write concern\n * @param {number} [options.wtimeout=null] The write concern timeout\n * @param {boolean} [options.j=false] Specify a journal write concern\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {string} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism=undefined] Mechanism for authentication: MDEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1\n * @param {object} [options.compression=null] Type of compression to use: snappy or zlib\n * @param {boolean} [options.fsync=false] Specify a file sync write concern\n * @param {array} [options.readPreferenceTags=null] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.connect = function(url, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Create client\n  var mongoClient = new MongoClient(url, options);\n  // Execute the connect method\n  return mongoClient.connect(callback);\n};\n\n/**\n * Starts a new session on the server\n *\n * @param {object} [options] optional settings for a driver session\n * @param {boolean} [options.causalConsistency] Indicate that this session should be causally consistent.\n * @param {boolean} [options.autoStartTransaction=false] When enabled this session automatically starts a transaction with the provided defaultTransactionOptions.\n * @param {object} [options.defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n *\n * @return {ClientSession} the newly established session\n */\nMongoClient.prototype.startSession = function(options) {\n  options = Object.assign({ explicit: true }, options);\n  if (!this.topology) {\n    throw new MongoError('Must connect to a server before calling this method');\n  }\n\n  if (!this.topology.hasSessionSupport()) {\n    throw new MongoError('Current topology does not support sessions');\n  }\n\n  return this.topology.startSession(options, this.s.options);\n};\n\n/**\n * Runs a given operation with an implicitly created session. The lifetime of the session\n * will be handled without the need for user interaction.\n *\n * NOTE: presently the operation MUST return a Promise (either explicit or implicity as an async function)\n *\n * @param {Object} [options] Optional settings to be appled to implicitly created session\n * @param {Function} operation An operation to execute with an implicitly created session. The signature of this MUST be `(session) => {}`\n * @return {Promise}\n */\nMongoClient.prototype.withSession = function(options, operation) {\n  if (typeof options === 'function') (operation = options), (options = undefined);\n  const session = this.startSession(options);\n\n  let cleanupHandler = (err, result, opts) => {\n    // prevent multiple calls to cleanupHandler\n    cleanupHandler = () => {\n      throw new ReferenceError('cleanupHandler was called too many times');\n    };\n\n    opts = Object.assign({ throw: true }, opts);\n    session.endSession();\n\n    if (err) {\n      if (opts.throw) throw err;\n      return Promise.reject(err);\n    }\n  };\n\n  try {\n    const result = operation(session);\n    return Promise.resolve(result)\n      .then(result => cleanupHandler(null, result))\n      .catch(err => cleanupHandler(err, null, { throw: true }));\n  } catch (err) {\n    return cleanupHandler(err, null, { throw: false });\n  }\n};\n\nvar mergeOptions = function(target, source, flatten) {\n  for (var name in source) {\n    if (source[name] && typeof source[name] === 'object' && flatten) {\n      target = mergeOptions(target, source[name], flatten);\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n};\n\nvar createUnifiedOptions = function(finalOptions, options) {\n  var childOptions = [\n    'mongos',\n    'server',\n    'db',\n    'replset',\n    'db_options',\n    'server_options',\n    'rs_options',\n    'mongos_options'\n  ];\n  var noMerge = ['readconcern', 'compression'];\n\n  for (var name in options) {\n    if (noMerge.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions[name] = options[name];\n    } else if (childOptions.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions = mergeOptions(finalOptions, options[name], false);\n    } else {\n      if (\n        options[name] &&\n        typeof options[name] === 'object' &&\n        !Buffer.isBuffer(options[name]) &&\n        !Array.isArray(options[name])\n      ) {\n        finalOptions = mergeOptions(finalOptions, options[name], true);\n      } else {\n        finalOptions[name] = options[name];\n      }\n    }\n  }\n\n  return finalOptions;\n};\n\nfunction translateOptions(options) {\n  // If we have a readPreference passed in by the db options\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    options.readPreference = new ReadPreference(options.readPreference || options.read_preference);\n  }\n\n  // Do we have readPreference tags, add them\n  if (options.readPreference && (options.readPreferenceTags || options.read_preference_tags)) {\n    options.readPreference.tags = options.readPreferenceTags || options.read_preference_tags;\n  }\n\n  // Do we have maxStalenessSeconds\n  if (options.maxStalenessSeconds) {\n    options.readPreference.maxStalenessSeconds = options.maxStalenessSeconds;\n  }\n\n  // Set the socket and connection timeouts\n  if (options.socketTimeoutMS == null) options.socketTimeoutMS = 360000;\n  if (options.connectTimeoutMS == null) options.connectTimeoutMS = 30000;\n\n  // Create server instances\n  return options.servers.map(function(serverObj) {\n    return serverObj.domain_socket\n      ? new Server(serverObj.domain_socket, 27017, options)\n      : new Server(serverObj.host, serverObj.port, options);\n  });\n}\n\nvar events = [\n  'timeout',\n  'close',\n  'serverOpening',\n  'serverDescriptionChanged',\n  'serverHeartbeatStarted',\n  'serverHeartbeatSucceeded',\n  'serverHeartbeatFailed',\n  'serverClosed',\n  'topologyOpening',\n  'topologyClosed',\n  'topologyDescriptionChanged',\n  'commandStarted',\n  'commandSucceeded',\n  'commandFailed',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup'\n];\n\n//\n// Collect all events in order from SDAM\n//\nfunction collectEvents(self, topology) {\n  var collectedEvents = [];\n\n  if (self instanceof MongoClient) {\n    events.forEach(function(event) {\n      topology.on(event, function(object1, object2) {\n        collectedEvents.push({\n          event: event,\n          object1: object1,\n          object2: object2\n        });\n      });\n    });\n  }\n\n  return collectedEvents;\n}\n\n//\n// Clear out all event\n//\nfunction clearAllEvents(topology) {\n  events.forEach(function(event) {\n    topology.removeAllListeners(event);\n  });\n}\n\n//\n// Replay any events due to single server connection switching to Mongos\n//\nfunction replayEvents(self, events) {\n  for (var i = 0; i < events.length; i++) {\n    self.emit(events[i].event, events[i].object1, events[i].object2);\n  }\n}\n\nfunction relayEvents(self, topology) {\n  var events = [\n    'serverOpening',\n    'serverDescriptionChanged',\n    'serverHeartbeatStarted',\n    'serverHeartbeatSucceeded',\n    'serverHeartbeatFailed',\n    'serverClosed',\n    'topologyOpening',\n    'topologyClosed',\n    'topologyDescriptionChanged',\n    'commandStarted',\n    'commandSucceeded',\n    'commandFailed',\n    'joined',\n    'left',\n    'ping',\n    'ha'\n  ];\n\n  events.forEach(function(event) {\n    topology.on(event, function(object1, object2) {\n      self.emit(event, object1, object2);\n    });\n  });\n}\n\nfunction assignTopology(client, topology) {\n  client.topology = topology;\n  topology.s.sessionPool = new ServerSessionPool(topology.s.coreTopology);\n}\n\nfunction createServer(self, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = self.s.promiseLibrary;\n\n  // Set default options\n  var servers = translateOptions(options);\n\n  // Propagate the events to the client\n  var collectedEvents = collectEvents(self, servers[0]);\n\n  // Connect to topology\n  servers[0].connect(options, function(err, topology) {\n    if (err) return callback(err);\n    // Clear out all the collected event listeners\n    clearAllEvents(servers[0]);\n\n    // Relay all the events\n    relayEvents(self, servers[0]);\n    // Add listeners\n    addListeners(self, servers[0]);\n    // Check if we are really speaking to a mongos\n    var ismaster = topology.lastIsMaster();\n\n    // Set the topology\n    assignTopology(self, topology);\n\n    // Do we actually have a mongos\n    if (ismaster && ismaster.msg === 'isdbgrid') {\n      // Destroy the current connection\n      topology.close();\n      // Create mongos connection instead\n      return createMongos(self, options, callback);\n    }\n\n    // Fire all the events\n    replayEvents(self, collectedEvents);\n    // Otherwise callback\n    callback(err, topology);\n  });\n}\n\nfunction createReplicaset(self, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = self.s.promiseLibrary;\n\n  // Set default options\n  var servers = translateOptions(options);\n\n  // Create the topology\n  var topology = new ReplSet(servers, options);\n\n  // Add listeners\n  addListeners(self, topology);\n\n  // Propagate the events to the client\n  relayEvents(self, topology);\n\n  // Open the connection\n  topology.connect(options, function(err, topology) {\n    if (err) return callback(err);\n\n    assignTopology(self, topology);\n    callback(null, topology);\n  });\n}\n\nfunction createMongos(self, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = self.s.promiseLibrary;\n\n  // Set default options\n  var servers = translateOptions(options);\n\n  // Create the topology\n  var topology = new Mongos(servers, options);\n\n  // Add listeners\n  addListeners(self, topology);\n\n  // Propagate the events to the client\n  relayEvents(self, topology);\n\n  // Open the connection\n  topology.connect(options, function(err, topology) {\n    if (err) return callback(err);\n\n    assignTopology(self, topology);\n    callback(null, topology);\n  });\n}\n\nfunction createListener(self, event) {\n  return function(v1, v2) {\n    if (event === 'open' || event === 'fullsetup' || event === 'all' || event === 'reconnect') {\n      return self.emit(event, self);\n    }\n\n    self.emit(event, v1, v2);\n  };\n}\n\nfunction addListeners(self, topology) {\n  topology.on('authenticated', createListener(self, 'authenticated'));\n  topology.on('error', createListener(self, 'error'));\n  topology.on('timeout', createListener(self, 'timeout'));\n  topology.on('close', createListener(self, 'close'));\n  topology.on('parseError', createListener(self, 'parseError'));\n  topology.once('open', createListener(self, 'open'));\n  topology.once('fullsetup', createListener(self, 'fullsetup'));\n  topology.once('all', createListener(self, 'all'));\n  topology.on('reconnect', createListener(self, 'reconnect'));\n}\n\nfunction connectHandler(client, options, callback) {\n  return function(err, topology) {\n    if (err) {\n      return process.nextTick(function() {\n        try {\n          callback(err, null);\n        } catch (err) {\n          if (topology) topology.close();\n          throw err;\n        }\n      });\n    }\n\n    // No authentication just reconnect\n    if (!options.auth) {\n      return process.nextTick(function() {\n        try {\n          callback(err, topology);\n        } catch (err) {\n          if (topology) topology.close();\n          throw err;\n        }\n      });\n    }\n\n    // Authenticate\n    authenticate(client, options.user, options.password, options, function(err, success) {\n      if (success) {\n        process.nextTick(function() {\n          try {\n            callback(null, topology);\n          } catch (err) {\n            if (topology) topology.close();\n            throw err;\n          }\n        });\n      } else {\n        if (topology) topology.close();\n        process.nextTick(function() {\n          try {\n            callback(err ? err : new Error('Could not authenticate user ' + options.auth[0]), null);\n          } catch (err) {\n            if (topology) topology.close();\n            throw err;\n          }\n        });\n      }\n    });\n  };\n}\n\n/*\n * Connect using MongoClient\n */\nvar connect = function(self, url, options, callback) {\n  options = options || {};\n  options = shallowClone(options);\n\n  // If callback is null throw an exception\n  if (callback == null) {\n    throw new Error('no callback function provided');\n  }\n\n  // Get a logger for MongoClient\n  var logger = Logger('MongoClient', options);\n\n  // Did we pass in a Server/ReplSet/Mongos\n  if (url instanceof Server || url instanceof ReplSet || url instanceof Mongos) {\n    // Set the topology\n    assignTopology(self, url);\n\n    // Add listeners\n    addListeners(self, url);\n\n    // Propagate the events to the client\n    relayEvents(self, url);\n\n    // Connect\n    return url.connect(\n      options,\n      connectHandler(self, options, function(err, topology) {\n        if (err) return connectCallback(err, topology);\n        if (options.user || options.password || options.authMechanism) {\n          return authenticate(self, options.user, options.password, options, function(err) {\n            if (err) return connectCallback(err, topology);\n            connectCallback(err, topology);\n          });\n        }\n\n        connectCallback(err, topology);\n      })\n    );\n  }\n\n  const parseFn = options.useNewUrlParser ? parse : legacyParse;\n  const transform = options.useNewUrlParser ? transformUrlOptions : legacyTransformUrlOptions;\n\n  parseFn(url, options, function(err, _object) {\n    // Do not attempt to connect if parsing error\n    if (err) return callback(err);\n\n    // Flatten\n    const object = transform(_object);\n\n    // Parse the string\n    const _finalOptions = createUnifiedOptions(object, options);\n\n    // Check if we have connection and socket timeout set\n    if (_finalOptions.socketTimeoutMS == null) _finalOptions.socketTimeoutMS = 360000;\n    if (_finalOptions.connectTimeoutMS == null) _finalOptions.connectTimeoutMS = 30000;\n\n    if (_finalOptions.db_options && _finalOptions.db_options.auth) {\n      delete _finalOptions.db_options.auth;\n    }\n\n    // Store the merged options object\n    self.s.options = _finalOptions;\n\n    // Failure modes\n    if (object.servers.length === 0) {\n      return callback(new Error('connection string must contain at least one seed host'));\n    }\n\n    // Do we have a replicaset then skip discovery and go straight to connectivity\n    if (_finalOptions.replicaSet || _finalOptions.rs_name) {\n      return createReplicaset(\n        self,\n        _finalOptions,\n        connectHandler(self, _finalOptions, connectCallback)\n      );\n    } else if (object.servers.length > 1) {\n      return createMongos(\n        self,\n        _finalOptions,\n        connectHandler(self, _finalOptions, connectCallback)\n      );\n    } else {\n      return createServer(\n        self,\n        _finalOptions,\n        connectHandler(self, _finalOptions, connectCallback)\n      );\n    }\n  });\n\n  function connectCallback(err, topology) {\n    if (err && err.message === 'no mongos proxies found in seed list') {\n      if (logger.isWarn()) {\n        logger.warn(\n          f(\n            'seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name'\n          )\n        );\n      }\n\n      // Return a more specific error message for MongoClient.connect\n      return callback(\n        new MongoError(\n          'seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name'\n        )\n      );\n    }\n\n    // Return the error and db instance\n    callback(err, topology);\n  }\n};\n\nmodule.exports = MongoClient;\n","'use strict';\n\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst MongoError = require('mongodb-core').MongoError;\nconst CMongos = require('mongodb-core').Mongos;\nconst Cursor = require('../cursor');\nconst Server = require('./server');\nconst Store = require('./topology_base').Store;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * **Mongos Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options=null] Optional settings.\n * @param {booelan} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=5000] Time between each replicaset status check.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions=null] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Mongos#connect\n * @fires Mongos#ha\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#fullsetup\n * @fires Mongos#open\n * @fires Mongos#close\n * @fires Mongos#error\n * @fires Mongos#timeout\n * @fires Mongos#parseError\n * @fires Mongos#commandStarted\n * @fires Mongos#commandSucceeded\n * @fires Mongos#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Mongos} a Mongos instance.\n */\nclass Mongos extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Internal state\n    this.s = {\n      // Create the Mongos\n      coreTopology: new CMongos(seedlist, clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Debug turned on\n      debug: clonedOptions.debug,\n      // Store option defaults\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Actual store of callbacks\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Force close the topology\n        self.close(true);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect');\n      self.s.store.execute();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      var events = ['timeout', 'error', 'close', 'fullsetup'];\n      events.forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.once('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.once('close', errorHandler('close'));\n\n      // Set up serverConfig listeners\n      self.s.coreTopology.on('fullsetup', function() {\n        self.emit('fullsetup', self);\n      });\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n    // Join and leave events\n    self.s.coreTopology.on('joined', relay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Mongos.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * The mongos high availability event\n *\n * @event Mongos#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the mongos set\n *\n * @event Mongos#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos set\n *\n * @event Mongos#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * Mongos fullsetup event, emitted when all proxies in the topology have been connected to.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * Mongos open event, emitted when mongos can start processing commands.\n *\n * @event Mongos#open\n * @type {Mongos}\n */\n\n/**\n * Mongos close event\n *\n * @event Mongos#close\n * @type {object}\n */\n\n/**\n * Mongos error event, emitted if there is an error listener.\n *\n * @event Mongos#error\n * @type {MongoError}\n */\n\n/**\n * Mongos timeout event\n *\n * @event Mongos#timeout\n * @type {object}\n */\n\n/**\n * Mongos parseError event\n *\n * @event Mongos#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\nconst Server = require('./server');\nconst Cursor = require('../cursor');\nconst MongoError = require('mongodb-core').MongoError;\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst CReplSet = require('mongodb-core').ReplSet;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is\n * used to construct connections.\n *\n * **ReplSet Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'rs_name',\n  'secondaryAcceptableLatencyMS',\n  'connectWithNoPrimary',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslCRL',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'strategy',\n  'debug',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'maxStalenessSeconds',\n  'promiseLibrary',\n  'minSize',\n  'monitorCommands'\n];\n\n/**\n * Creates a new ReplSet instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=10000] Time between each replicaset status check.\n * @param {string} [options.replicaSet] The name of the replicaset to connect to.\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher.\n * @param {string} [options.ciphers=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions=null] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=10000] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#fullsetup\n * @fires ReplSet#open\n * @fires ReplSet#close\n * @fires ReplSet#error\n * @fires ReplSet#timeout\n * @fires ReplSet#parseError\n * @fires ReplSet#commandStarted\n * @fires ReplSet#commandSucceeded\n * @fires ReplSet#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {ReplSet} a ReplSet instance.\n */\nclass ReplSet extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: false,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Create the ReplSet\n    var coreTopology = new CReplSet(seedlist, clonedOptions);\n\n    // Listen to reconnect event\n    coreTopology.on('reconnect', function() {\n      self.emit('reconnect');\n      store.execute();\n    });\n\n    // Internal state\n    this.s = {\n      // Replicaset\n      coreTopology: coreTopology,\n      // Server capabilities\n      sCapabilities: null,\n      // Debug tag\n      tag: options.tag,\n      // Store options\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Store\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n\n    // Debug\n    if (clonedOptions.debug) {\n      // Last ismaster\n      Object.defineProperty(this, 'replset', {\n        enumerable: true,\n        get: function() {\n          return coreTopology;\n        }\n      });\n    }\n  }\n\n  // Connect method\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed',\n      'joined',\n      'left',\n      'ping',\n      'ha'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Replset events relay\n    var replsetRelay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server.lastIsMaster(), server);\n      };\n    };\n\n    // Relay ha\n    var relayHa = function(t, state) {\n      self.emit('ha', t, state);\n\n      if (t === 'start') {\n        self.emit('ha_connect', t, state);\n      } else if (t === 'end') {\n        self.emit('ha_ismaster', t, state);\n      }\n    };\n\n    // Set up serverConfig listeners\n    self.s.coreTopology.on('joined', replsetRelay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n    self.s.coreTopology.on('ping', relay('ping'));\n    self.s.coreTopology.on('ha', relayHa);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    self.s.coreTopology.on('fullsetup', function() {\n      self.emit('fullsetup', self, self);\n    });\n\n    self.s.coreTopology.on('all', function() {\n      self.emit('all', null, self);\n    });\n\n    // Connect handler\n    var connectHandler = function() {\n      // Set up listeners\n      self.s.coreTopology.once('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.once('close', errorHandler('close'));\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        ['timeout', 'error', 'close'].forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Destroy the replset\n        self.s.coreTopology.destroy();\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          if (!self.s.coreTopology.isConnected())\n            process.nextTick(function() {\n              throw err;\n            });\n        }\n      };\n    };\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n\n  close(forceClosed) {\n    super.close(forceClosed);\n\n    ['timeout', 'error', 'close', 'joined', 'left'].forEach(e => this.removeAllListeners(e));\n  }\n}\n\nObject.defineProperty(ReplSet.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * The replset high availability event\n *\n * @event ReplSet#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * ReplSet open event, emitted when replicaset can start processing commands.\n *\n * @event ReplSet#open\n * @type {Replset}\n */\n\n/**\n * ReplSet fullsetup event, emitted when all servers in the topology have been connected to.\n *\n * @event ReplSet#fullsetup\n * @type {Replset}\n */\n\n/**\n * ReplSet close event\n *\n * @event ReplSet#close\n * @type {object}\n */\n\n/**\n * ReplSet error event, emitted if there is an error listener.\n *\n * @event ReplSet#error\n * @type {MongoError}\n */\n\n/**\n * ReplSet timeout event\n *\n * @event ReplSet#timeout\n * @type {object}\n */\n\n/**\n * ReplSet parseError event\n *\n * @event ReplSet#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nconst CServer = require('mongodb-core').Server;\nconst Cursor = require('../cursor');\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst MongoError = require('mongodb-core').MongoError;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Server** class is a class that represents a single server topology and is\n * used to construct connections.\n *\n * **Server Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'reconnectInterval',\n  'monitoring',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'compression',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Server instance\n * @class\n * @deprecated\n * @param {string} host The host for the server, can be either an IP4, IP6 or domain socket style host.\n * @param {number} [port] The server port if IP4.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve=null] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions=null] Socket options\n * @param {boolean} [options.socketOptions.autoReconnect=true] Reconnect on error.\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {number} [options.monitoring=true] Triggers the server instance to call ismaster\n * @param {number} [options.haInterval=10000] The interval of calling ismaster when monitoring is enabled.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#commandStarted\n * @fires Server#commandSucceeded\n * @fires Server#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Server} a Server instance.\n */\nclass Server extends TopologyBase {\n  constructor(host, port, options) {\n    super();\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Promise library\n    const promiseLibrary = options.promiseLibrary;\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Detect if we have a socket connection\n    if (host.indexOf('/') !== -1) {\n      if (port != null && typeof port === 'object') {\n        options = port;\n        port = null;\n      }\n    } else if (port == null) {\n      throw MongoError.create({ message: 'port must be specified', driver: true });\n    }\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        host: host,\n        port: port,\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Define the internal properties\n    this.s = {\n      // Create an instance of a server instance from mongodb-core\n      coreTopology: new CServer(clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Reconnect\n      reconnect: clonedOptions.reconnect,\n      // Emit error\n      emitError: clonedOptions.emitError,\n      // Pool size\n      poolSize: clonedOptions.size,\n      // Store Options\n      storeOptions: storeOptions,\n      // Store\n      store: store,\n      // Host\n      host: host,\n      // Port\n      port: port,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = this.s.clonedOptions;\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectHandlers[e]);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect', self);\n      self.s.store.execute();\n    };\n\n    // Reconnect failed\n    var reconnectFailedHandler = function(err) {\n      self.emit('reconnectFailed', err);\n      self.s.store.flush(err);\n    };\n\n    // Destroy called on topology, perform cleanup\n    var destroyHandler = function() {\n      self.s.store.flush();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      ['timeout', 'error', 'close', 'destroy'].forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.on('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.on('close', errorHandler('close'));\n      // Only called on destroy\n      self.s.coreTopology.on('destroy', destroyHandler);\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        console.log(err.stack);\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Set up listeners\n    var connectHandlers = {\n      timeout: connectErrorHandler('timeout'),\n      error: connectErrorHandler('error'),\n      close: connectErrorHandler('close')\n    };\n\n    // Clear out all the current handlers left over\n    [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ].forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Add the event handlers\n    self.s.coreTopology.once('timeout', connectHandlers.timeout);\n    self.s.coreTopology.once('error', connectHandlers.error);\n    self.s.coreTopology.once('close', connectHandlers.close);\n    self.s.coreTopology.once('connect', connectHandler);\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n    self.s.coreTopology.on('reconnectFailed', reconnectFailedHandler);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n    self.s.coreTopology.on('attemptReconnect', relay('attemptReconnect'));\n    self.s.coreTopology.on('monitoring', relay('monitoring'));\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'poolSize', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.connections().length;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'autoReconnect', {\n  enumerable: true,\n  get: function() {\n    return this.s.reconnect;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'host', {\n  enumerable: true,\n  get: function() {\n    return this.s.host;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'port', {\n  enumerable: true,\n  get: function() {\n    return this.s.port;\n  }\n});\n\n/**\n * Server connect event\n *\n * @event Server#connect\n * @type {object}\n */\n\n/**\n * Server close event\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server reconnect event\n *\n * @event Server#reconnect\n * @type {object}\n */\n\n/**\n * Server error event\n *\n * @event Server#error\n * @type {MongoError}\n */\n\n/**\n * Server timeout event\n *\n * @event Server#timeout\n * @type {object}\n */\n\n/**\n * Server parseError event\n *\n * @event Server#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Server#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Server#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Server#commandFailed\n * @type {object}\n */\n\nmodule.exports = Server;\n","'use strict';\n\nconst EventEmitter = require('events'),\n  MongoError = require('mongodb-core').MongoError,\n  f = require('util').format,\n  os = require('os'),\n  translateReadPreference = require('../utils').translateReadPreference,\n  ClientSession = require('mongodb-core').Sessions.ClientSession;\n\n// The store of ops\nvar Store = function(topology, storeOptions) {\n  var self = this;\n  var storedOps = [];\n  storeOptions = storeOptions || { force: false, bufferMaxEntries: -1 };\n\n  // Internal state\n  this.s = {\n    storedOps: storedOps,\n    storeOptions: storeOptions,\n    topology: topology\n  };\n\n  Object.defineProperty(this, 'length', {\n    enumerable: true,\n    get: function() {\n      return self.s.storedOps.length;\n    }\n  });\n};\n\nStore.prototype.add = function(opType, ns, ops, options, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, n: ns, o: ops, op: options, c: callback });\n};\n\nStore.prototype.addObjectAndMethod = function(opType, object, method, params, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, m: method, o: object, p: params, c: callback });\n};\n\nStore.prototype.flush = function(err) {\n  while (this.s.storedOps.length > 0) {\n    this.s.storedOps\n      .shift()\n      .c(\n        err ||\n          MongoError.create({ message: f('no connection available for operation'), driver: true })\n      );\n  }\n};\n\nvar primaryOptions = ['primary', 'primaryPreferred', 'nearest', 'secondaryPreferred'];\nvar secondaryOptions = ['secondary', 'secondaryPreferred'];\n\nStore.prototype.execute = function(options) {\n  options = options || {};\n  // Get current ops\n  var ops = this.s.storedOps;\n  // Reset the ops\n  this.s.storedOps = [];\n\n  // Unpack options\n  var executePrimary = typeof options.executePrimary === 'boolean' ? options.executePrimary : true;\n  var executeSecondary =\n    typeof options.executeSecondary === 'boolean' ? options.executeSecondary : true;\n\n  // Execute all the stored ops\n  while (ops.length > 0) {\n    var op = ops.shift();\n\n    if (op.t === 'cursor') {\n      if (executePrimary && executeSecondary) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        executePrimary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        primaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        secondaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      }\n    } else if (op.t === 'auth') {\n      this.s.topology[op.t].apply(this.s.topology, op.o);\n    } else {\n      if (executePrimary && executeSecondary) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        executePrimary &&\n        op.op &&\n        op.op.readPreference &&\n        primaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.op &&\n        op.op.readPreference &&\n        secondaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      }\n    }\n  }\n};\n\nStore.prototype.all = function() {\n  return this.s.storedOps;\n};\n\n// Server capabilities\nvar ServerCapabilities = function(ismaster) {\n  var setup_get_property = function(object, name, value) {\n    Object.defineProperty(object, name, {\n      enumerable: true,\n      get: function() {\n        return value;\n      }\n    });\n  };\n\n  // Capabilities\n  var aggregationCursor = false;\n  var writeCommands = false;\n  var textSearch = false;\n  var authCommands = false;\n  var listCollections = false;\n  var listIndexes = false;\n  var maxNumberOfDocsInBatch = ismaster.maxWriteBatchSize || 1000;\n  var commandsTakeWriteConcern = false;\n  var commandsTakeCollation = false;\n\n  if (ismaster.minWireVersion >= 0) {\n    textSearch = true;\n  }\n\n  if (ismaster.maxWireVersion >= 1) {\n    aggregationCursor = true;\n    authCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 2) {\n    writeCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 3) {\n    listCollections = true;\n    listIndexes = true;\n  }\n\n  if (ismaster.maxWireVersion >= 5) {\n    commandsTakeWriteConcern = true;\n    commandsTakeCollation = true;\n  }\n\n  // If no min or max wire version set to 0\n  if (ismaster.minWireVersion == null) {\n    ismaster.minWireVersion = 0;\n  }\n\n  if (ismaster.maxWireVersion == null) {\n    ismaster.maxWireVersion = 0;\n  }\n\n  // Map up read only parameters\n  setup_get_property(this, 'hasAggregationCursor', aggregationCursor);\n  setup_get_property(this, 'hasWriteCommands', writeCommands);\n  setup_get_property(this, 'hasTextSearch', textSearch);\n  setup_get_property(this, 'hasAuthCommands', authCommands);\n  setup_get_property(this, 'hasListCollectionsCommand', listCollections);\n  setup_get_property(this, 'hasListIndexesCommand', listIndexes);\n  setup_get_property(this, 'minWireVersion', ismaster.minWireVersion);\n  setup_get_property(this, 'maxWireVersion', ismaster.maxWireVersion);\n  setup_get_property(this, 'maxNumberOfDocsInBatch', maxNumberOfDocsInBatch);\n  setup_get_property(this, 'commandsTakeWriteConcern', commandsTakeWriteConcern);\n  setup_get_property(this, 'commandsTakeCollation', commandsTakeCollation);\n};\n\n// Get package.json variable\nconst driverVersion = require('../../package.json').version,\n  nodejsversion = f('Node.js %s, %s', process.version, os.endianness()),\n  type = os.type(),\n  name = process.platform,\n  architecture = process.arch,\n  release = os.release();\n\nclass TopologyBase extends EventEmitter {\n  constructor() {\n    super();\n\n    // Build default client information\n    this.clientInfo = {\n      driver: {\n        name: 'nodejs',\n        version: driverVersion\n      },\n      os: {\n        type: type,\n        name: name,\n        architecture: architecture,\n        version: release\n      },\n      platform: nodejsversion\n    };\n\n    this.setMaxListeners(Infinity);\n  }\n\n  // Sessions related methods\n  hasSessionSupport() {\n    return this.logicalSessionTimeoutMinutes != null;\n  }\n\n  startSession(options, clientOptions) {\n    const session = new ClientSession(this, this.s.sessionPool, options, clientOptions);\n    session.once('ended', () => {\n      this.s.sessions = this.s.sessions.filter(s => !s.equals(session));\n    });\n\n    this.s.sessions.push(session);\n    return session;\n  }\n\n  endSessions(sessions, callback) {\n    return this.s.coreTopology.endSessions(sessions, callback);\n  }\n\n  // Server capabilities\n  capabilities() {\n    if (this.s.sCapabilities) return this.s.sCapabilities;\n    if (this.s.coreTopology.lastIsMaster() == null) return null;\n    this.s.sCapabilities = new ServerCapabilities(this.s.coreTopology.lastIsMaster());\n    return this.s.sCapabilities;\n  }\n\n  // Command\n  command(ns, cmd, options, callback) {\n    this.s.coreTopology.command(ns, cmd, translateReadPreference(options), callback);\n  }\n\n  // Insert\n  insert(ns, ops, options, callback) {\n    this.s.coreTopology.insert(ns, ops, options, callback);\n  }\n\n  // Update\n  update(ns, ops, options, callback) {\n    this.s.coreTopology.update(ns, ops, options, callback);\n  }\n\n  // Remove\n  remove(ns, ops, options, callback) {\n    this.s.coreTopology.remove(ns, ops, options, callback);\n  }\n\n  // IsConnected\n  isConnected(options) {\n    options = options || {};\n    options = translateReadPreference(options);\n\n    return this.s.coreTopology.isConnected(options);\n  }\n\n  // IsDestroyed\n  isDestroyed() {\n    return this.s.coreTopology.isDestroyed();\n  }\n\n  // Cursor\n  cursor(ns, cmd, options) {\n    options = options || {};\n    options = translateReadPreference(options);\n    options.disconnectHandler = this.s.store;\n    options.topology = this;\n\n    return this.s.coreTopology.cursor(ns, cmd, options);\n  }\n\n  lastIsMaster() {\n    return this.s.coreTopology.lastIsMaster();\n  }\n\n  getServer(options) {\n    return this.s.coreTopology.getServer(options);\n  }\n\n  getConnection(options) {\n    return this.s.coreTopology.getConnection(options);\n  }\n\n  /**\n   * Unref all sockets\n   * @method\n   */\n  unref() {\n    return this.s.coreTopology.unref();\n  }\n\n  auth() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this.s.coreTopology.auth.apply(this.s.coreTopology, args);\n  }\n\n  logout() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this.s.coreTopology.logout.apply(this.s.coreTopology, args);\n  }\n\n  /**\n   * All raw connections\n   * @method\n   * @return {array}\n   */\n  connections() {\n    return this.s.coreTopology.connections();\n  }\n\n  close(forceClosed) {\n    // If we have sessions, we want to individually move them to the session pool,\n    // and then send a single endSessions call.\n    if (this.s.sessions.length) {\n      this.s.sessions.forEach(session => session.endSession());\n    }\n\n    if (this.s.sessionPool) {\n      this.s.sessionPool.endAllPooledSessions();\n    }\n\n    this.s.coreTopology.destroy({\n      force: typeof forceClosed === 'boolean' ? forceClosed : false\n    });\n\n    // We need to wash out all stored processes\n    if (forceClosed === true) {\n      this.s.storeOptions.force = forceClosed;\n      this.s.store.flush();\n    }\n  }\n}\n\n// Properties\nObject.defineProperty(TopologyBase.prototype, 'isMasterDoc', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.lastIsMaster();\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'bson', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.bson;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.parserType;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.logicalSessionTimeoutMinutes;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.type;\n  }\n});\n\nexports.Store = Store;\nexports.ServerCapabilities = ServerCapabilities;\nexports.TopologyBase = TopologyBase;\n","'use strict';\n\nconst ReadPreference = require('mongodb-core').ReadPreference,\n  parser = require('url'),\n  f = require('util').format,\n  Logger = require('mongodb-core').Logger,\n  dns = require('dns');\n\nmodule.exports = function(url, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  let result;\n  try {\n    result = parser.parse(url, true);\n  } catch (e) {\n    return callback(new Error('URL malformed, cannot be parsed'));\n  }\n\n  if (result.protocol !== 'mongodb:' && result.protocol !== 'mongodb+srv:') {\n    return callback(new Error('Invalid schema, expected `mongodb` or `mongodb+srv`'));\n  }\n\n  if (result.protocol === 'mongodb:') {\n    return parseHandler(url, options, callback);\n  }\n\n  // Otherwise parse this as an SRV record\n  if (result.hostname.split('.').length < 3) {\n    return callback(new Error('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new Error('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new Error('Ports not accepted with `mongodb+srv` URIs'));\n  }\n\n  let srvAddress = `_mongodb._tcp.${result.host}`;\n  dns.resolveSrv(srvAddress, function(err, addresses) {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new Error('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(new Error('Server record does not share hostname with parent URI'));\n      }\n    }\n\n    let base = result.auth ? `mongodb://${result.auth}@` : `mongodb://`;\n    let connectionStrings = addresses.map(function(address, i) {\n      if (i === 0) return `${base}${address.name}:${address.port}`;\n      else return `${address.name}:${address.port}`;\n    });\n\n    let connectionString = connectionStrings.join(',') + '/';\n    let connectionStringOptions = [];\n\n    // Add the default database if needed\n    if (result.path) {\n      let defaultDb = result.path.slice(1);\n      if (defaultDb.indexOf('?') !== -1) {\n        defaultDb = defaultDb.slice(0, defaultDb.indexOf('?'));\n      }\n\n      connectionString += defaultDb;\n    }\n\n    // Default to SSL true\n    if (!options.ssl && !result.search) {\n      connectionStringOptions.push('ssl=true');\n    } else if (!options.ssl && result.search && !result.search.match('ssl')) {\n      connectionStringOptions.push('ssl=true');\n    }\n\n    // Keep original uri options\n    if (result.search) {\n      connectionStringOptions.push(result.search.replace('?', ''));\n    }\n\n    dns.resolveTxt(result.host, function(err, record) {\n      if (err && err.code !== 'ENODATA') return callback(err);\n      if (err && err.code === 'ENODATA') record = null;\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new Error('Multiple text records not allowed'));\n        }\n\n        record = record[0];\n        if (record.length > 1) record = record.join('');\n        else record = record[0];\n\n        if (!record.includes('authSource') && !record.includes('replicaSet')) {\n          return callback(new Error('Text record must only set `authSource` or `replicaSet`'));\n        }\n\n        connectionStringOptions.push(record);\n      }\n\n      // Add any options to the connection string\n      if (connectionStringOptions.length) {\n        connectionString += `?${connectionStringOptions.join('&')}`;\n      }\n\n      parseHandler(connectionString, options, callback);\n    });\n  });\n};\n\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  let regex = /^.*?\\./;\n  let srv = `.${srvAddress.replace(regex, '')}`;\n  let parent = `.${parentDomain.replace(regex, '')}`;\n  if (srv.endsWith(parent)) return true;\n  else return false;\n}\n\nfunction parseHandler(address, options, callback) {\n  let result, err;\n  try {\n    result = parseConnectionString(address, options);\n  } catch (e) {\n    err = e;\n  }\n\n  return err ? callback(err, null) : callback(null, result);\n}\n\nfunction parseConnectionString(url, options) {\n  // Variables\n  let connection_part = '';\n  let auth_part = '';\n  let query_string_part = '';\n  let dbName = 'admin';\n\n  // Url parser result\n  let result = parser.parse(url, true);\n  if ((result.hostname == null || result.hostname === '') && url.indexOf('.sock') === -1) {\n    throw new Error('No hostname or hostnames provided in connection string');\n  }\n\n  if (result.port === '0') {\n    throw new Error('Invalid port (zero) with hostname');\n  }\n\n  if (!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('Invalid port (larger than 65535) with hostname');\n  }\n\n  if (\n    result.path &&\n    result.path.length > 0 &&\n    result.path[0] !== '/' &&\n    url.indexOf('.sock') === -1\n  ) {\n    throw new Error('Missing delimiting slash between hosts and options');\n  }\n\n  if (result.query) {\n    for (let name in result.query) {\n      if (name.indexOf('::') !== -1) {\n        throw new Error('Double colon in host identifier');\n      }\n\n      if (result.query[name] === '') {\n        throw new Error('Query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if (result.auth) {\n    let parts = result.auth.split(':');\n    if (url.indexOf(result.auth) !== -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if (url.indexOf(result.auth) !== -1 && result.auth.indexOf('@') !== -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  let clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  let strings = clean.split(',');\n  let hosts = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    let hostString = strings[i];\n\n    if (hostString.indexOf('mongodb') !== -1) {\n      if (hostString.indexOf('@') !== -1) {\n        hosts.push(hostString.split('@').pop());\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if (hostString.indexOf('/') !== -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if (hostString.indexOf('/') === -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for (let i = 0; i < hosts.length; i++) {\n    let r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if (r.path && r.path.indexOf(':') !== -1) {\n      // Not connecting to a socket so check for an extra slash in the hostname.\n      // Using String#split as perf is better than match.\n      if (r.path.split('/').length > 1 && r.path.indexOf('::') === -1) {\n        throw new Error('Slash in host identifier');\n      } else {\n        throw new Error('Double colon in host identifier');\n      }\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if (url.indexOf('?') !== -1) {\n    query_string_part = url.substr(url.indexOf('?') + 1);\n    connection_part = url.substring('mongodb://'.length, url.indexOf('?'));\n  } else {\n    connection_part = url.substring('mongodb://'.length);\n  }\n\n  // Check if we have auth params\n  if (connection_part.indexOf('@') !== -1) {\n    auth_part = connection_part.split('@')[0];\n    connection_part = connection_part.split('@')[1];\n  }\n\n  // Check there is not more than one unescaped slash\n  if (connection_part.split('/').length > 2) {\n    throw new Error(\n      \"Unsupported host '\" +\n        connection_part.split('?')[0] +\n        \"', hosts must be URL encoded and contain at most one unencoded slash\"\n    );\n  }\n\n  // Check if the connection string has a db\n  if (connection_part.indexOf('.sock') !== -1) {\n    if (connection_part.indexOf('.sock/') !== -1) {\n      dbName = connection_part.split('.sock/')[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf('/') !== -1) {\n        if (dbName.split('/').length === 2 && dbName.split('/')[1].length === 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\n        '/',\n        connection_part.indexOf('.sock') + '.sock'.length\n      );\n    }\n  } else if (connection_part.indexOf('/') !== -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split('/').length > 2) {\n      if (connection_part.split('/')[2].length === 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split('/')[1];\n    connection_part = connection_part.split('/')[0];\n  }\n\n  // URI decode the host information\n  connection_part = decodeURIComponent(connection_part);\n\n  // Result object\n  let object = {};\n\n  // Pick apart the authentication part of the string\n  let authPart = auth_part || '';\n  let auth = authPart.split(':', 2);\n\n  // Decode the authentication URI components and verify integrity\n  let user = decodeURIComponent(auth[0]);\n  if (auth[0] !== encodeURIComponent(user)) {\n    throw new Error('Username contains an illegal unescaped character');\n  }\n  auth[0] = user;\n\n  if (auth[1]) {\n    let pass = decodeURIComponent(auth[1]);\n    if (auth[1] !== encodeURIComponent(pass)) {\n      throw new Error('Password contains an illegal unescaped character');\n    }\n    auth[1] = pass;\n  }\n\n  // Add auth to final object if we have 2 elements\n  if (auth.length === 2) object.auth = { user: auth[0], password: auth[1] };\n  // if user provided auth options, use that\n  if (options && options.auth != null) object.auth = options.auth;\n\n  // Variables used for temporary storage\n  let hostPart;\n  let urlOptions;\n  let servers;\n  let compression;\n  let serverOptions = { socketOptions: {} };\n  let dbOptions = { read_preference_tags: [] };\n  let replSetServersOptions = { socketOptions: {} };\n  let mongosOptions = { socketOptions: {} };\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if (url.match(/\\.sock/)) {\n    // Split out the socket part\n    let domainSocket = url.substring(\n      url.indexOf('mongodb://') + 'mongodb://'.length,\n      url.lastIndexOf('.sock') + '.sock'.length\n    );\n    // Clean out any auth stuff if any\n    if (domainSocket.indexOf('@') !== -1) domainSocket = domainSocket.split('@')[1];\n    domainSocket = decodeURIComponent(domainSocket);\n    servers = [{ domain_socket: domainSocket }];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    let deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart\n      .split(',')\n      .map(function(h) {\n        let _host, _port, ipv6match;\n        //check if it matches [IPv6]:port, where the port number is optional\n        if ((ipv6match = /\\[([^\\]]+)\\](?::(.+))?/.exec(h))) {\n          _host = ipv6match[1];\n          _port = parseInt(ipv6match[2], 10) || 27017;\n        } else {\n          //otherwise assume it's IPv4, or plain hostname\n          let hostPort = h.split(':', 2);\n          _host = hostPort[0] || 'localhost';\n          _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n          // Check for localhost?safe=true style case\n          if (_host.indexOf('?') !== -1) _host = _host.split(/\\?/)[0];\n        }\n\n        // No entry returned for duplicate servr\n        if (deduplicatedServers[_host + '_' + _port]) return null;\n        deduplicatedServers[_host + '_' + _port] = 1;\n\n        // Return the mapped object\n        return { host: _host, port: _port };\n      })\n      .filter(function(x) {\n        return x != null;\n      });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if (!opt) return;\n    var splitOpt = opt.split('='),\n      name = splitOpt[0],\n      value = splitOpt[1];\n\n    // Options implementations\n    switch (name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = value === 'true';\n        dbOptions.slaveOk = value === 'true';\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'appname':\n        object.appname = decodeURIComponent(value);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = value === 'true';\n        break;\n      case 'ssl':\n        if (value === 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = value === 'true';\n        replSetServersOptions.ssl = value === 'true';\n        mongosOptions.ssl = value === 'true';\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = value === 'true';\n        replSetServersOptions.sslValidate = value === 'true';\n        mongosOptions.sslValidate = value === 'true';\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = value === 'true';\n        break;\n      case 'fsync':\n        dbOptions.fsync = value === 'true';\n        break;\n      case 'journal':\n        dbOptions.j = value === 'true';\n        break;\n      case 'safe':\n        dbOptions.safe = value === 'true';\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = value === 'true';\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = { level: value };\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if (isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if (value === 'GSSAPI') {\n          // If no password provided decode only the principal\n          if (object.auth == null) {\n            let urlDecodeAuthPart = decodeURIComponent(authPart);\n            if (urlDecodeAuthPart.indexOf('@') === -1)\n              throw new Error('GSSAPI requires a provided principal');\n            object.auth = { user: urlDecodeAuthPart, password: null };\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if (value === 'MONGODB-X509') {\n          object.auth = { user: decodeURIComponent(authPart) };\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if (\n          value !== 'GSSAPI' &&\n          value !== 'MONGODB-X509' &&\n          value !== 'MONGODB-CR' &&\n          value !== 'DEFAULT' &&\n          value !== 'SCRAM-SHA-1' &&\n          value !== 'SCRAM-SHA-256' &&\n          value !== 'PLAIN'\n        )\n          throw new Error(\n            'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism'\n          );\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        {\n          // Split up into key, value pairs\n          let values = value.split(',');\n          let o = {};\n          // For each value split into key, value\n          values.forEach(function(x) {\n            let v = x.split(':');\n            o[v[0]] = v[1];\n          });\n\n          // Set all authMechanismProperties\n          dbOptions.authMechanismProperties = o;\n          // Set the service name value\n          if (typeof o.SERVICE_NAME === 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n          if (typeof o.SERVICE_REALM === 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n          if (typeof o.CANONICALIZE_HOST_NAME === 'string')\n            dbOptions.gssapiCanonicalizeHostName =\n              o.CANONICALIZE_HOST_NAME === 'true' ? true : false;\n        }\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if (!ReadPreference.isValid(value))\n          throw new Error(\n            'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest'\n          );\n        dbOptions.readPreference = value;\n        break;\n      case 'maxStalenessSeconds':\n        dbOptions.maxStalenessSeconds = parseInt(value, 10);\n        break;\n      case 'readPreferenceTags':\n        {\n          // Decode the value\n          value = decodeURIComponent(value);\n          // Contains the tag object\n          let tagObject = {};\n          if (value == null || value === '') {\n            dbOptions.read_preference_tags.push(tagObject);\n            break;\n          }\n\n          // Split up the tags\n          let tags = value.split(/,/);\n          for (let i = 0; i < tags.length; i++) {\n            let parts = tags[i].trim().split(/:/);\n            tagObject[parts[0]] = parts[1];\n          }\n\n          // Set the preferences tags\n          dbOptions.read_preference_tags.push(tagObject);\n        }\n        break;\n      case 'compressors':\n        {\n          compression = serverOptions.compression || {};\n          let compressors = value.split(',');\n          if (\n            !compressors.every(function(compressor) {\n              return compressor === 'snappy' || compressor === 'zlib';\n            })\n          ) {\n            throw new Error('Compressors must be at least one of snappy or zlib');\n          }\n\n          compression.compressors = compressors;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'zlibCompressionLevel':\n        {\n          compression = serverOptions.compression || {};\n          let zlibCompressionLevel = parseInt(value, 10);\n          if (zlibCompressionLevel < -1 || zlibCompressionLevel > 9) {\n            throw new Error('zlibCompressionLevel must be an integer between -1 and 9');\n          }\n\n          compression.zlibCompressionLevel = zlibCompressionLevel;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'retryWrites':\n        dbOptions.retryWrites = value === 'true';\n        break;\n      case 'minSize':\n        dbOptions.minSize = parseInt(value, 10);\n        break;\n      default:\n        {\n          let logger = Logger('URL Parser');\n          logger.warn(`${name} is not supported as a connection string option`);\n        }\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if (dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if (\n    (dbOptions.w === -1 || dbOptions.w === 0) &&\n    (dbOptions.journal === true || dbOptions.fsync === true || dbOptions.safe === true)\n  )\n    throw new Error('w set to -1 or 0 cannot be combined with safe/w/journal/fsync');\n\n  // If no read preference set it to primary\n  if (!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // make sure that user-provided options are applied with priority\n  dbOptions = Object.assign(dbOptions, options);\n\n  // Add servers to result\n  object.servers = servers;\n\n  // Returned parsed object\n  return object;\n}\n","'use strict';\n\nconst MongoError = require('mongodb-core').MongoError;\nconst ReadPreference = require('mongodb-core').ReadPreference;\n\nvar shallowClone = function(obj) {\n  var copy = {};\n  for (var name in obj) copy[name] = obj[name];\n  return copy;\n};\n\n// Figure out the read preference\nvar translateReadPreference = function(options) {\n  var r = null;\n  if (options.readPreference) {\n    r = options.readPreference;\n  } else {\n    return options;\n  }\n\n  if (typeof r === 'string') {\n    options.readPreference = new ReadPreference(r);\n  } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n    const mode = r.mode || r.preference;\n    if (mode && typeof mode === 'string') {\n      options.readPreference = new ReadPreference(mode, r.tags, {\n        maxStalenessSeconds: r.maxStalenessSeconds\n      });\n    }\n  } else if (!(r instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + r);\n  }\n\n  return options;\n};\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\nvar formatSortValue = (exports.formatSortValue = function(sortDirection) {\n  var value = ('' + sortDirection).toLowerCase();\n\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new Error(\n        'Illegal sort clause, must be of the form ' +\n          \"[['field1', '(ascending|descending)'], \" +\n          \"['field2', '(ascending|descending)']]\"\n      );\n  }\n});\n\nvar formattedOrderClause = (exports.formattedOrderClause = function(sortValue) {\n  var orderBy = {};\n  if (sortValue == null) return null;\n  if (Array.isArray(sortValue)) {\n    if (sortValue.length === 0) {\n      return null;\n    }\n\n    for (var i = 0; i < sortValue.length; i++) {\n      if (sortValue[i].constructor === String) {\n        orderBy[sortValue[i]] = 1;\n      } else {\n        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);\n      }\n    }\n  } else if (sortValue != null && typeof sortValue === 'object') {\n    orderBy = sortValue;\n  } else if (typeof sortValue === 'string') {\n    orderBy[sortValue] = 1;\n  } else {\n    throw new Error(\n      'Illegal sort clause, must be of the form ' +\n        \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n    );\n  }\n\n  return orderBy;\n});\n\nvar checkCollectionName = function checkCollectionName(collectionName) {\n  if ('string' !== typeof collectionName) {\n    throw new MongoError('collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoError('collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    throw new MongoError(\"collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    throw new MongoError(\"collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the colletion name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    throw new MongoError('collection names cannot contain a null character');\n  }\n};\n\nvar handleCallback = function(callback, err, value1, value2) {\n  try {\n    if (callback == null) return;\n\n    if (callback) {\n      return value2 ? callback(err, value1, value2) : callback(err, value1);\n    }\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Wrap a Mongo error document in an Error instance\n * @ignore\n * @api private\n */\nvar toError = function(error) {\n  if (error instanceof Error) return error;\n\n  var msg = error.err || error.errmsg || error.errMessage || error;\n  var e = MongoError.create({ message: msg, driver: true });\n\n  // Get all object keys\n  var keys = typeof error === 'object' ? Object.keys(error) : [];\n\n  for (var i = 0; i < keys.length; i++) {\n    try {\n      e[keys[i]] = error[keys[i]];\n    } catch (err) {\n      // continue\n    }\n  }\n\n  return e;\n};\n\n/**\n * @ignore\n */\nvar normalizeHintField = function normalizeHintField(hint) {\n  var finalHint = null;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(function(param) {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {};\n    for (var name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n};\n\n/**\n * Create index name based on field spec\n *\n * @ignore\n * @api private\n */\nvar parseIndexOptions = function(fieldOrSpec) {\n  var fieldHash = {};\n  var indexes = [];\n  var keys;\n\n  // Get all the fields accordingly\n  if ('string' === typeof fieldOrSpec) {\n    // 'type'\n    indexes.push(fieldOrSpec + '_' + 1);\n    fieldHash[fieldOrSpec] = 1;\n  } else if (Array.isArray(fieldOrSpec)) {\n    fieldOrSpec.forEach(function(f) {\n      if ('string' === typeof f) {\n        // [{location:'2d'}, 'type']\n        indexes.push(f + '_' + 1);\n        fieldHash[f] = 1;\n      } else if (Array.isArray(f)) {\n        // [['location', '2d'],['type', 1]]\n        indexes.push(f[0] + '_' + (f[1] || 1));\n        fieldHash[f[0]] = f[1] || 1;\n      } else if (isObject(f)) {\n        // [{location:'2d'}, {type:1}]\n        keys = Object.keys(f);\n        keys.forEach(function(k) {\n          indexes.push(k + '_' + f[k]);\n          fieldHash[k] = f[k];\n        });\n      } else {\n        // undefined (ignore)\n      }\n    });\n  } else if (isObject(fieldOrSpec)) {\n    // {location:'2d', type:1}\n    keys = Object.keys(fieldOrSpec);\n    keys.forEach(function(key) {\n      indexes.push(key + '_' + fieldOrSpec[key]);\n      fieldHash[key] = fieldOrSpec[key];\n    });\n  }\n\n  return {\n    name: indexes.join('_'),\n    keys: keys,\n    fieldHash: fieldHash\n  };\n};\n\nvar isObject = (exports.isObject = function(arg) {\n  return '[object Object]' === Object.prototype.toString.call(arg);\n});\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n};\n\nvar decorateCommand = function(command, options, exclude) {\n  for (var name in options) {\n    if (exclude[name] == null) command[name] = options[name];\n  }\n\n  return command;\n};\n\nvar mergeOptions = function(target, source) {\n  for (var name in source) {\n    target[name] = source[name];\n  }\n\n  return target;\n};\n\n// Merge options with translation\nvar translateOptions = function(target, source) {\n  var translations = {\n    // SSL translation options\n    sslCA: 'ca',\n    sslCRL: 'crl',\n    sslValidate: 'rejectUnauthorized',\n    sslKey: 'key',\n    sslCert: 'cert',\n    sslPass: 'passphrase',\n    // SocketTimeout translation options\n    socketTimeoutMS: 'socketTimeout',\n    connectTimeoutMS: 'connectionTimeout',\n    // Replicaset options\n    replicaSet: 'setName',\n    rs_name: 'setName',\n    secondaryAcceptableLatencyMS: 'acceptableLatency',\n    connectWithNoPrimary: 'secondaryOnlyConnectionAllowed',\n    // Mongos options\n    acceptableLatencyMS: 'localThresholdMS'\n  };\n\n  for (var name in source) {\n    if (translations[name]) {\n      target[translations[name]] = source[name];\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n};\n\nvar filterOptions = function(options, names) {\n  var filterOptions = {};\n\n  for (var name in options) {\n    if (names.indexOf(name) !== -1) filterOptions[name] = options[name];\n  }\n\n  // Filtered options\n  return filterOptions;\n};\n\n// Write concern keys\nvar writeConcernKeys = ['w', 'j', 'wtimeout', 'fsync'];\n\n// Merge the write concern options\nvar mergeOptionsAndWriteConcern = function(targetOptions, sourceOptions, keys, mergeWriteConcern) {\n  // Mix in any allowed options\n  for (var i = 0; i < keys.length; i++) {\n    if (!targetOptions[keys[i]] && sourceOptions[keys[i]] !== undefined) {\n      targetOptions[keys[i]] = sourceOptions[keys[i]];\n    }\n  }\n\n  // No merging of write concern\n  if (!mergeWriteConcern) return targetOptions;\n\n  // Found no write Concern options\n  var found = false;\n  for (i = 0; i < writeConcernKeys.length; i++) {\n    if (targetOptions[writeConcernKeys[i]]) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    for (i = 0; i < writeConcernKeys.length; i++) {\n      if (sourceOptions[writeConcernKeys[i]]) {\n        targetOptions[writeConcernKeys[i]] = sourceOptions[writeConcernKeys[i]];\n      }\n    }\n  }\n\n  return targetOptions;\n};\n\n/**\n * Executes the given operation with provided arguments.\n *\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param {object} topology The topology to execute this operation on\n * @param {function} operation The operation to execute\n * @param {array} args Arguments to apply the provided operation\n * @param {object} [options] Options that modify the behavior of the method\n * @param {function]} [options.resultMutator] Allows for the result of the operation to be changed for custom return types\n */\nconst executeOperation = (topology, operation, args, options) => {\n  if (topology == null) {\n    throw new TypeError('This method requires a valid topology instance');\n  }\n\n  if (!Array.isArray(args)) {\n    throw new TypeError('This method requires an array of arguments to apply');\n  }\n\n  options = options || {};\n  const Promise = topology.s.promiseLibrary;\n  let resultMutator = options.resultMutator;\n  let callback = args[args.length - 1];\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session, opOptions, owner;\n  if (!options.skipSessions && topology.hasSessionSupport()) {\n    opOptions = args[args.length - 2];\n    if (opOptions == null || opOptions.session == null) {\n      owner = Symbol();\n      session = topology.startSession({ owner });\n      const optionsIndex = args.length - 2;\n      args[optionsIndex] = Object.assign({}, args[optionsIndex], { session: session });\n    } else if (opOptions.session && opOptions.session.hasEnded) {\n      throw new MongoError('Use of expired sessions is not permitted');\n    }\n  }\n\n  const makeExecuteCallback = (resolve, reject) =>\n    function executeCallback(err, result) {\n      if (session && session.owner === owner && !options.returnsCursor) {\n        session.endSession(() => {\n          delete opOptions.session;\n          if (err) return reject(err);\n          if (resultMutator) return resolve(resultMutator(result));\n          resolve(result);\n        });\n      } else {\n        if (err) return reject(err);\n        if (resultMutator) return resolve(resultMutator(result));\n        resolve(result);\n      }\n    };\n\n  // Execute using callback\n  if (typeof callback === 'function') {\n    callback = args.pop();\n    const handler = makeExecuteCallback(\n      result => callback(null, result),\n      err => callback(err, null)\n    );\n    args.push(handler);\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n      throw e;\n    }\n  }\n\n  // Return a Promise\n  if (args[args.length - 1] != null) {\n    throw new TypeError('final argument to `executeOperation` must be a callback');\n  }\n\n  return new Promise(function(resolve, reject) {\n    const handler = makeExecuteCallback(resolve, reject);\n    args[args.length - 1] = handler;\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n    }\n  });\n};\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n *\n * @param {Object} target the target command we will be applying the write concern to\n * @param {Object} sources sources where we can inherit default write concerns from\n * @param {Object} [options] optional settings passed into a command for write concern overrides\n * @returns {Object} the (now) decorated target\n */\nfunction applyWriteConcern(target, sources, options) {\n  options = options || {};\n  const db = sources.db;\n  const coll = sources.collection;\n\n  if (options.session && options.session.inTransaction()) {\n    // writeConcern is not allowed within a multi-statement transaction\n    if (target.writeConcern) {\n      delete target.writeConcern;\n    }\n\n    return target;\n  }\n\n  // NOTE: there is probably a much better place for this\n  if (db && db.s.options.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  if (options.w != null || options.j != null || options.fsync != null) {\n    const writeConcern = {};\n    if (options.w != null) writeConcern.w = options.w;\n    if (options.wtimeout != null) writeConcern.wtimeout = options.wtimeout;\n    if (options.j != null) writeConcern.j = options.j;\n    if (options.fsync != null) writeConcern.fsync = options.fsync;\n    return Object.assign(target, { writeConcern });\n  }\n\n  if (\n    coll &&\n    (coll.writeConcern.w != null || coll.writeConcern.j != null || coll.writeConcern.fsync != null)\n  ) {\n    return Object.assign(target, { writeConcern: Object.assign({}, coll.writeConcern) });\n  }\n\n  if (\n    db &&\n    (db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null)\n  ) {\n    return Object.assign(target, { writeConcern: Object.assign({}, db.writeConcern) });\n  }\n\n  return target;\n}\n\n/**\n * Checks if a given value is a Promise\n *\n * @param {*} maybePromise\n * @return true if the provided value is a Promise\n */\nfunction isPromiseLike(maybePromise) {\n  return maybePromise && typeof maybePromise.then === 'function';\n}\n\nexports.filterOptions = filterOptions;\nexports.mergeOptions = mergeOptions;\nexports.translateOptions = translateOptions;\nexports.shallowClone = shallowClone;\nexports.getSingleProperty = getSingleProperty;\nexports.checkCollectionName = checkCollectionName;\nexports.toError = toError;\nexports.formattedOrderClause = formattedOrderClause;\nexports.parseIndexOptions = parseIndexOptions;\nexports.normalizeHintField = normalizeHintField;\nexports.handleCallback = handleCallback;\nexports.decorateCommand = decorateCommand;\nexports.isObject = isObject;\nexports.debugOptions = debugOptions;\nexports.MAX_JS_INT = 0x20000000000000;\nexports.mergeOptionsAndWriteConcern = mergeOptionsAndWriteConcern;\nexports.translateReadPreference = translateReadPreference;\nexports.executeOperation = executeOperation;\nexports.applyWriteConcern = applyWriteConcern;\nexports.isPromiseLike = isPromiseLike;\n","function webpackEmptyContext(req) {\n\tvar e = new Error('Cannot find module \"' + req + '\".');\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/require_optional sync recursive\";","var path = require('path'),\n  fs = require('fs'),\n  f = require('util').format,\n  resolveFrom = require('resolve-from'),\n  semver = require('semver');\n\nvar exists = fs.existsSync || path.existsSync;\n\n// Find the location of a package.json file near or above the given location\nvar find_package_json = function(location) {\n  var found = false;\n\n  while(!found) {\n    if (exists(location + '/package.json')) {\n      found = location;\n    } else if (location !== '/') {\n      location = path.dirname(location);\n    } else {\n      return false;\n    }\n  }\n\n  return location;\n}\n\n// Find the package.json object of the module closest up the module call tree that contains name in that module's peerOptionalDependencies\nvar find_package_json_with_name = function(name) {\n  // Walk up the module call tree until we find a module containing name in its peerOptionalDependencies\n  var currentModule = module;\n  var found = false;\n  while (currentModule) {\n    // Check currentModule has a package.json\n    location = currentModule.filename;\n    var location = find_package_json(location)\n    if (!location) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n\n    // Read the package.json file\n    var object = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n    // Is the name defined by interal file references\n    var parts = name.split(/\\//);\n\n    // Check whether this package.json contains peerOptionalDependencies containing the name we're searching for\n    if (!object.peerOptionalDependencies || (object.peerOptionalDependencies && !object.peerOptionalDependencies[parts[0]])) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n    found = true;\n    break;\n  }\n\n  // Check whether name has been found in currentModule's peerOptionalDependencies\n  if (!found) {\n    throw new Error(f('no optional dependency [%s] defined in peerOptionalDependencies in any package.json', parts[0]));\n  }\n\n  return {\n    object: object,\n    parts: parts\n  }\n}\n\nvar require_optional = function(name, options) {\n  options = options || {};\n  options.strict = typeof options.strict == 'boolean' ? options.strict : true;\n\n  var res = find_package_json_with_name(name)\n  var object = res.object;\n  var parts = res.parts;\n\n  // Unpack the expected version\n  var expectedVersions = object.peerOptionalDependencies[parts[0]];\n  // The resolved package\n  var moduleEntry = undefined;\n  // Module file\n  var moduleEntryFile = name;\n\n  try {\n    // Validate if it's possible to read the module\n    moduleEntry = require(moduleEntryFile);\n  } catch(err) {\n    // Attempt to resolve in top level package\n    try {\n      // Get the module entry file\n      moduleEntryFile = resolveFrom(process.cwd(), name);\n      if(moduleEntryFile == null) return undefined;\n      // Attempt to resolve the module\n      moduleEntry = require(moduleEntryFile);\n    } catch(err) {\n      if(err.code === 'MODULE_NOT_FOUND') return undefined;\n    }\n  }\n\n  // Resolve the location of the module's package.json file\n  var location = find_package_json(require.resolve(moduleEntryFile));\n  if(!location) {\n    throw new Error('package.json can not be located');\n  }\n\n  // Read the module file\n  var dependentOnModule = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n  // Get the version\n  var version = dependentOnModule.version;\n  // Validate if the found module satisfies the version id\n  if(semver.satisfies(version, expectedVersions) == false\n    && options.strict) {\n      var error = new Error(f('optional dependency [%s] found but version [%s] did not satisfy constraint [%s]', parts[0], version, expectedVersions));\n      error.code = 'OPTIONAL_MODULE_NOT_FOUND';\n      throw error;\n  }\n\n  // Satifies the module requirement\n  return moduleEntry;\n}\n\nrequire_optional.exists = function(name) {\n  try {\n    var m = require_optional(name);\n    if(m === undefined) return false;\n    return true;\n  } catch(err) {\n    return false;\n  }\n}\n\nmodule.exports = require_optional;\n","'use strict';\nvar path = require('path');\nvar Module = require('module');\n\nmodule.exports = function (fromDir, moduleId) {\n\tif (typeof fromDir !== 'string' || typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected `fromDir` and `moduleId` to be a string');\n\t}\n\n\tfromDir = path.resolve(fromDir);\n\n\tvar fromFile = path.join(fromDir, 'noop.js');\n\n\ttry {\n\t\treturn Module._resolveFilename(moduleId, {\n\t\t\tid: fromFile,\n\t\t\tfilename: fromFile,\n\t\t\tpaths: Module._nodeModulePaths(fromDir)\n\t\t});\n\t} catch (err) {\n\t\treturn null;\n\t}\n};\n","'use strict'\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/code-points')\n\nmodule.exports = saslprep\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n * @type {Set}\n */\nconst mapping2space = non_ASCII_space_characters\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n * @type {Set}\n */\nconst mapping2nothing = commonly_mapped_to_nothing\n\n// utils\nconst getCodePoint = character => character.codePointAt(0)\nconst first = x => x[0]\nconst last = x => x[x.length - 1]\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {object} opts\n * @param {boolean} opts.allowUnassigned\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.')\n  }\n\n  if (input.length === 0) {\n    return ''\n  }\n\n  // 1. Map\n  const mapped_input = input\n    .split('')\n    .map(getCodePoint)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.has(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.has(character))\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint(...mapped_input).normalize('NFKC')\n\n  const normalized_map = normalized_input.split('').map(getCodePoint)\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.has(character)\n  )\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    )\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.has(character)\n    )\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      )\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map\n    .some((character) => bidirectional_r_al.has(character))\n\n  const hasBidiL = normalized_map\n    .some((character) => bidirectional_l.has(character))\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n      ' see https://tools.ietf.org/html/rfc3454#section-6'\n    )\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.has(getCodePoint(first(normalized_input)))\n  const isLastBidiRAL = bidirectional_r_al.has(getCodePoint(last(normalized_input)))\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n      ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    )\n  }\n\n  return normalized_input\n}\n","'use strict'\n\nconst { range } = require('./util')\n\n/**\n * A.1 Unassigned code points in Unicode 3.2\n * @link https://tools.ietf.org/html/rfc3454#appendix-A.1\n */\nconst unassigned_code_points = new Set([\n  0x0221,\n  ...range(0x0234, 0x024F),\n  ...range(0x02AE, 0x02AF),\n  ...range(0x02EF, 0x02FF),\n  ...range(0x0350, 0x035F),\n  ...range(0x0370, 0x0373),\n  ...range(0x0376, 0x0379),\n  ...range(0x037B, 0x037D),\n  ...range(0x037F, 0x0383),\n  0x038B,\n  0x038D,\n  0x03A2,\n  0x03CF,\n  ...range(0x03F7, 0x03FF),\n  0x0487,\n  0x04CF,\n  ...range(0x04F6, 0x04F7),\n  ...range(0x04FA, 0x04FF),\n  ...range(0x0510, 0x0530),\n  ...range(0x0557, 0x0558),\n  0x0560,\n  0x0588,\n  ...range(0x058B, 0x0590),\n  0x05A2,\n  0x05BA,\n  ...range(0x05C5, 0x05CF),\n  ...range(0x05EB, 0x05EF),\n  ...range(0x05F5, 0x060B),\n  ...range(0x060D, 0x061A),\n  ...range(0x061C, 0x061E),\n  0x0620,\n  ...range(0x063B, 0x063F),\n  ...range(0x0656, 0x065F),\n  ...range(0x06EE, 0x06EF),\n  0x06FF,\n  0x070E,\n  ...range(0x072D, 0x072F),\n  ...range(0x074B, 0x077F),\n  ...range(0x07B2, 0x0900),\n  0x0904,\n  ...range(0x093A, 0x093B),\n  ...range(0x094E, 0x094F),\n  ...range(0x0955, 0x0957),\n  ...range(0x0971, 0x0980),\n  0x0984,\n  ...range(0x098D, 0x098E),\n  ...range(0x0991, 0x0992),\n  0x09A9,\n  0x09B1,\n  ...range(0x09B3, 0x09B5),\n  ...range(0x09BA, 0x09BB),\n  0x09BD,\n  ...range(0x09C5, 0x09C6),\n  ...range(0x09C9, 0x09CA),\n  ...range(0x09CE, 0x09D6),\n  ...range(0x09D8, 0x09DB),\n  0x09DE,\n  ...range(0x09E4, 0x09E5),\n  ...range(0x09FB, 0x0A01),\n  ...range(0x0A03, 0x0A04),\n  ...range(0x0A0B, 0x0A0E),\n  ...range(0x0A11, 0x0A12),\n  0x0A29,\n  0x0A31,\n  0x0A34,\n  0x0A37,\n  ...range(0x0A3A, 0x0A3B),\n  0x0A3D,\n  ...range(0x0A43, 0x0A46),\n  ...range(0x0A49, 0x0A4A),\n  ...range(0x0A4E, 0x0A58),\n  0x0A5D,\n  ...range(0x0A5F, 0x0A65),\n  ...range(0x0A75, 0x0A80),\n  0x0A84,\n  0x0A8C,\n  0x0A8E,\n  0x0A92,\n  0x0AA9,\n  0x0AB1,\n  0x0AB4,\n  ...range(0x0ABA, 0x0ABB),\n  0x0AC6,\n  0x0ACA,\n  ...range(0x0ACE, 0x0ACF),\n  ...range(0x0AD1, 0x0ADF),\n  ...range(0x0AE1, 0x0AE5),\n  ...range(0x0AF0, 0x0B00),\n  0x0B04,\n  ...range(0x0B0D, 0x0B0E),\n  ...range(0x0B11, 0x0B12),\n  0x0B29,\n  0x0B31,\n  ...range(0x0B34, 0x0B35),\n  ...range(0x0B3A, 0x0B3B),\n  ...range(0x0B44, 0x0B46),\n  ...range(0x0B49, 0x0B4A),\n  ...range(0x0B4E, 0x0B55),\n  ...range(0x0B58, 0x0B5B),\n  0x0B5E,\n  ...range(0x0B62, 0x0B65),\n  ...range(0x0B71, 0x0B81),\n  0x0B84,\n  ...range(0x0B8B, 0x0B8D),\n  0x0B91,\n  ...range(0x0B96, 0x0B98),\n  0x0B9B,\n  0x0B9D,\n  ...range(0x0BA0, 0x0BA2),\n  ...range(0x0BA5, 0x0BA7),\n  ...range(0x0BAB, 0x0BAD),\n  0x0BB6,\n  ...range(0x0BBA, 0x0BBD),\n  ...range(0x0BC3, 0x0BC5),\n  0x0BC9,\n  ...range(0x0BCE, 0x0BD6),\n  ...range(0x0BD8, 0x0BE6),\n  ...range(0x0BF3, 0x0C00),\n  0x0C04,\n  0x0C0D,\n  0x0C11,\n  0x0C29,\n  0x0C34,\n  ...range(0x0C3A, 0x0C3D),\n  0x0C45,\n  0x0C49,\n  ...range(0x0C4E, 0x0C54),\n  ...range(0x0C57, 0x0C5F),\n  ...range(0x0C62, 0x0C65),\n  ...range(0x0C70, 0x0C81),\n  0x0C84,\n  0x0C8D,\n  0x0C91,\n  0x0CA9,\n  0x0CB4,\n  ...range(0x0CBA, 0x0CBD),\n  0x0CC5,\n  0x0CC9,\n  ...range(0x0CCE, 0x0CD4),\n  ...range(0x0CD7, 0x0CDD),\n  0x0CDF,\n  ...range(0x0CE2, 0x0CE5),\n  ...range(0x0CF0, 0x0D01),\n  0x0D04,\n  0x0D0D,\n  0x0D11,\n  0x0D29,\n  ...range(0x0D3A, 0x0D3D),\n  ...range(0x0D44, 0x0D45),\n  0x0D49,\n  ...range(0x0D4E, 0x0D56),\n  ...range(0x0D58, 0x0D5F),\n  ...range(0x0D62, 0x0D65),\n  ...range(0x0D70, 0x0D81),\n  0x0D84,\n  ...range(0x0D97, 0x0D99),\n  0x0DB2,\n  0x0DBC,\n  ...range(0x0DBE, 0x0DBF),\n  ...range(0x0DC7, 0x0DC9),\n  ...range(0x0DCB, 0x0DCE),\n  0x0DD5,\n  0x0DD7,\n  ...range(0x0DE0, 0x0DF1),\n  ...range(0x0DF5, 0x0E00),\n  ...range(0x0E3B, 0x0E3E),\n  ...range(0x0E5C, 0x0E80),\n  0x0E83,\n  ...range(0x0E85, 0x0E86),\n  0x0E89,\n  ...range(0x0E8B, 0x0E8C),\n  ...range(0x0E8E, 0x0E93),\n  0x0E98,\n  0x0EA0,\n  0x0EA4,\n  0x0EA6,\n  ...range(0x0EA8, 0x0EA9),\n  0x0EAC,\n  0x0EBA,\n  ...range(0x0EBE, 0x0EBF),\n  0x0EC5,\n  0x0EC7,\n  ...range(0x0ECE, 0x0ECF),\n  ...range(0x0EDA, 0x0EDB),\n  ...range(0x0EDE, 0x0EFF),\n  0x0F48,\n  ...range(0x0F6B, 0x0F70),\n  ...range(0x0F8C, 0x0F8F),\n  0x0F98,\n  0x0FBD,\n  ...range(0x0FCD, 0x0FCE),\n  ...range(0x0FD0, 0x0FFF),\n  0x1022,\n  0x1028,\n  0x102B,\n  ...range(0x1033, 0x1035),\n  ...range(0x103A, 0x103F),\n  ...range(0x105A, 0x109F),\n  ...range(0x10C6, 0x10CF),\n  ...range(0x10F9, 0x10FA),\n  ...range(0x10FC, 0x10FF),\n  ...range(0x115A, 0x115E),\n  ...range(0x11A3, 0x11A7),\n  ...range(0x11FA, 0x11FF),\n  0x1207,\n  0x1247,\n  0x1249,\n  ...range(0x124E, 0x124F),\n  0x1257,\n  0x1259,\n  ...range(0x125E, 0x125F),\n  0x1287,\n  0x1289,\n  ...range(0x128E, 0x128F),\n  0x12AF,\n  0x12B1,\n  ...range(0x12B6, 0x12B7),\n  0x12BF,\n  0x12C1,\n  ...range(0x12C6, 0x12C7),\n  0x12CF,\n  0x12D7,\n  0x12EF,\n  0x130F,\n  0x1311,\n  ...range(0x1316, 0x1317),\n  0x131F,\n  0x1347,\n  ...range(0x135B, 0x1360),\n  ...range(0x137D, 0x139F),\n  ...range(0x13F5, 0x1400),\n  ...range(0x1677, 0x167F),\n  ...range(0x169D, 0x169F),\n  ...range(0x16F1, 0x16FF),\n  0x170D,\n  ...range(0x1715, 0x171F),\n  ...range(0x1737, 0x173F),\n  ...range(0x1754, 0x175F),\n  0x176D,\n  0x1771,\n  ...range(0x1774, 0x177F),\n  ...range(0x17DD, 0x17DF),\n  ...range(0x17EA, 0x17FF),\n  0x180F,\n  ...range(0x181A, 0x181F),\n  ...range(0x1878, 0x187F),\n  ...range(0x18AA, 0x1DFF),\n  ...range(0x1E9C, 0x1E9F),\n  ...range(0x1EFA, 0x1EFF),\n  ...range(0x1F16, 0x1F17),\n  ...range(0x1F1E, 0x1F1F),\n  ...range(0x1F46, 0x1F47),\n  ...range(0x1F4E, 0x1F4F),\n  0x1F58,\n  0x1F5A,\n  0x1F5C,\n  0x1F5E,\n  ...range(0x1F7E, 0x1F7F),\n  0x1FB5,\n  0x1FC5,\n  ...range(0x1FD4, 0x1FD5),\n  0x1FDC,\n  ...range(0x1FF0, 0x1FF1),\n  0x1FF5,\n  0x1FFF,\n  ...range(0x2053, 0x2056),\n  ...range(0x2058, 0x205E),\n  ...range(0x2064, 0x2069),\n  ...range(0x2072, 0x2073),\n  ...range(0x208F, 0x209F),\n  ...range(0x20B2, 0x20CF),\n  ...range(0x20EB, 0x20FF),\n  ...range(0x213B, 0x213C),\n  ...range(0x214C, 0x2152),\n  ...range(0x2184, 0x218F),\n  ...range(0x23CF, 0x23FF),\n  ...range(0x2427, 0x243F),\n  ...range(0x244B, 0x245F),\n  0x24FF,\n  ...range(0x2614, 0x2615),\n  0x2618,\n  ...range(0x267E, 0x267F),\n  ...range(0x268A, 0x2700),\n  0x2705,\n  ...range(0x270A, 0x270B),\n  0x2728,\n  0x274C,\n  0x274E,\n  ...range(0x2753, 0x2755),\n  0x2757,\n  ...range(0x275F, 0x2760),\n  ...range(0x2795, 0x2797),\n  0x27B0,\n  ...range(0x27BF, 0x27CF),\n  ...range(0x27EC, 0x27EF),\n  ...range(0x2B00, 0x2E7F),\n  0x2E9A,\n  ...range(0x2EF4, 0x2EFF),\n  ...range(0x2FD6, 0x2FEF),\n  ...range(0x2FFC, 0x2FFF),\n  0x3040,\n  ...range(0x3097, 0x3098),\n  ...range(0x3100, 0x3104),\n  ...range(0x312D, 0x3130),\n  0x318F,\n  ...range(0x31B8, 0x31EF),\n  ...range(0x321D, 0x321F),\n  ...range(0x3244, 0x3250),\n  ...range(0x327C, 0x327E),\n  ...range(0x32CC, 0x32CF),\n  0x32FF,\n  ...range(0x3377, 0x337A),\n  ...range(0x33DE, 0x33DF),\n  0x33FF,\n  ...range(0x4DB6, 0x4DFF),\n  ...range(0x9FA6, 0x9FFF),\n  ...range(0xA48D, 0xA48F),\n  ...range(0xA4C7, 0xABFF),\n  ...range(0xD7A4, 0xD7FF),\n  ...range(0xFA2E, 0xFA2F),\n  ...range(0xFA6B, 0xFAFF),\n  ...range(0xFB07, 0xFB12),\n  ...range(0xFB18, 0xFB1C),\n  0xFB37,\n  0xFB3D,\n  0xFB3F,\n  0xFB42,\n  0xFB45,\n  ...range(0xFBB2, 0xFBD2),\n  ...range(0xFD40, 0xFD4F),\n  ...range(0xFD90, 0xFD91),\n  ...range(0xFDC8, 0xFDCF),\n  ...range(0xFDFD, 0xFDFF),\n  ...range(0xFE10, 0xFE1F),\n  ...range(0xFE24, 0xFE2F),\n  ...range(0xFE47, 0xFE48),\n  0xFE53,\n  0xFE67,\n  ...range(0xFE6C, 0xFE6F),\n  0xFE75,\n  ...range(0xFEFD, 0xFEFE),\n  0xFF00,\n  ...range(0xFFBF, 0xFFC1),\n  ...range(0xFFC8, 0xFFC9),\n  ...range(0xFFD0, 0xFFD1),\n  ...range(0xFFD8, 0xFFD9),\n  ...range(0xFFDD, 0xFFDF),\n  0xFFE7,\n  ...range(0xFFEF, 0xFFF8),\n  ...range(0x10000, 0x102FF),\n  0x1031F,\n  ...range(0x10324, 0x1032F),\n  ...range(0x1034B, 0x103FF),\n  ...range(0x10426, 0x10427),\n  ...range(0x1044E, 0x1CFFF),\n  ...range(0x1D0F6, 0x1D0FF),\n  ...range(0x1D127, 0x1D129),\n  ...range(0x1D1DE, 0x1D3FF),\n  0x1D455,\n  0x1D49D,\n  ...range(0x1D4A0, 0x1D4A1),\n  ...range(0x1D4A3, 0x1D4A4),\n  ...range(0x1D4A7, 0x1D4A8),\n  0x1D4AD,\n  0x1D4BA,\n  0x1D4BC,\n  0x1D4C1,\n  0x1D4C4,\n  0x1D506,\n  ...range(0x1D50B, 0x1D50C),\n  0x1D515,\n  0x1D51D,\n  0x1D53A,\n  0x1D53F,\n  0x1D545,\n  ...range(0x1D547, 0x1D549),\n  0x1D551,\n  ...range(0x1D6A4, 0x1D6A7),\n  ...range(0x1D7CA, 0x1D7CD),\n  ...range(0x1D800, 0x1FFFD),\n  ...range(0x2A6D7, 0x2F7FF),\n  ...range(0x2FA1E, 0x2FFFD),\n  ...range(0x30000, 0x3FFFD),\n  ...range(0x40000, 0x4FFFD),\n  ...range(0x50000, 0x5FFFD),\n  ...range(0x60000, 0x6FFFD),\n  ...range(0x70000, 0x7FFFD),\n  ...range(0x80000, 0x8FFFD),\n  ...range(0x90000, 0x9FFFD),\n  ...range(0xA0000, 0xAFFFD),\n  ...range(0xB0000, 0xBFFFD),\n  ...range(0xC0000, 0xCFFFD),\n  ...range(0xD0000, 0xDFFFD),\n  0xE0000,\n  ...range(0xE0002, 0xE001F),\n  ...range(0xE0080, 0xEFFFD),\n])\n\n/**\n * B.1 Commonly mapped to nothing\n * @link https://tools.ietf.org/html/rfc3454#appendix-B.1\n */\nconst commonly_mapped_to_nothing = new Set([\n  0x00AD,\n  0x034F,\n  0x1806,\n  0x180B,\n  0x180C,\n  0x180D,\n  0x200B,\n  0x200C,\n  0x200D,\n  0x2060,\n  0xFE00,\n  0xFE01,\n  0xFE02,\n  0xFE03,\n  0xFE04,\n  0xFE05,\n  0xFE06,\n  0xFE07,\n  0xFE08,\n  0xFE09,\n  0xFE0A,\n  0xFE0B,\n  0xFE0C,\n  0xFE0D,\n  0xFE0E,\n  0xFE0F,\n  0xFEFF,\n])\n\n/**\n * C.1.2 Non-ASCII space characters\n * @link https://tools.ietf.org/html/rfc3454#appendix-C.1.2\n */\nconst non_ASCII_space_characters = new Set([\n  0x00a0 /* NO-BREAK SPACE */,\n  0x1680 /* OGHAM SPACE MARK */,\n  0x2000 /* EN QUAD */,\n  0x2001 /* EM QUAD */,\n  0x2002 /* EN SPACE */,\n  0x2003 /* EM SPACE */,\n  0x2004 /* THREE-PER-EM SPACE */,\n  0x2005 /* FOUR-PER-EM SPACE */,\n  0x2006 /* SIX-PER-EM SPACE */,\n  0x2007 /* FIGURE SPACE */,\n  0x2008 /* PUNCTUATION SPACE */,\n  0x2009 /* THIN SPACE */,\n  0x200a /* HAIR SPACE */,\n  0x200b /* ZERO WIDTH SPACE */,\n  0x202f /* NARROW NO-BREAK SPACE */,\n  0x205f /* MEDIUM MATHEMATICAL SPACE */,\n  0x3000 /* IDEOGRAPHIC SPACE */,\n])\n\n/**\n * 2.3.  Prohibited Output\n * @type {Set}\n */\nconst prohibited_characters = new Set([\n  ...non_ASCII_space_characters,\n\n  /**\n   * C.2.1 ASCII control characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1\n   */\n  ...range(0, 0x001f) /* [CONTROL CHARACTERS] */,\n  0x007f /* DELETE */,\n\n  /**\n   * C.2.2 Non-ASCII control characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2\n   */\n  ...range(0x0080, 0x009F), /* [CONTROL CHARACTERS] */\n  0x06DD, /* ARABIC END OF AYAH */\n  0x070F, /* SYRIAC ABBREVIATION MARK */\n  0x180E, /* MONGOLIAN VOWEL SEPARATOR */\n  0x200C, /* ZERO WIDTH NON-JOINER */\n  0x200D, /* ZERO WIDTH JOINER */\n  0x2028, /* LINE SEPARATOR */\n  0x2029, /* PARAGRAPH SEPARATOR */\n  0x2060, /* WORD JOINER */\n  0x2061, /* FUNCTION APPLICATION */\n  0x2062, /* INVISIBLE TIMES */\n  0x2063, /* INVISIBLE SEPARATOR */\n  ...range(0x206A, 0x206F), /* [CONTROL CHARACTERS] */\n  0xFEFF, /* ZERO WIDTH NO-BREAK SPACE */\n  ...range(0xFFF9, 0xFFFC), /* [CONTROL CHARACTERS] */\n  ...range(0x1D173, 0x1D17A), /* [MUSICAL CONTROL CHARACTERS] */\n\n  /**\n   * C.3 Private use\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.3\n   */\n  ...range(0xE000, 0xF8FF), /* [PRIVATE USE, PLANE 0] */\n  ...range(0xF0000, 0xFFFFD), /* [PRIVATE USE, PLANE 15] */\n  ...range(0x100000, 0x10FFFD), /* [PRIVATE USE, PLANE 16] */\n\n  /**\n   * C.4 Non-character code points\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.4\n   */\n  ...range(0xFDD0, 0xFDEF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xFFFE, 0xFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x1FFFE, 0x1FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x2FFFE, 0x2FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x3FFFE, 0x3FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x4FFFE, 0x4FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x5FFFE, 0x5FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x6FFFE, 0x6FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x7FFFE, 0x7FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x8FFFE, 0x8FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x9FFFE, 0x9FFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xAFFFE, 0xAFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xBFFFE, 0xBFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xCFFFE, 0xCFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xDFFFE, 0xDFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0xEFFFE, 0xEFFFF), /* [NONCHARACTER CODE POINTS] */\n  ...range(0x10FFFE, 0x10FFFF), /* [NONCHARACTER CODE POINTS] */\n\n  /**\n   * C.5 Surrogate codes\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.5\n   */\n  ...range(0xD800, 0xDFFF),\n\n  /**\n   * C.6 Inappropriate for plain text\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.6\n   */\n  0xFFF9, /* INTERLINEAR ANNOTATION ANCHOR */\n  0xFFFA, /* INTERLINEAR ANNOTATION SEPARATOR */\n  0xFFFB, /* INTERLINEAR ANNOTATION TERMINATOR */\n  0xFFFC, /* OBJECT REPLACEMENT CHARACTER */\n  0xFFFD, /* REPLACEMENT CHARACTER */\n\n  /**\n   * C.7 Inappropriate for canonical representation\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.7\n   */\n  ...range(0x2FF0, 0x2FFB), /* [IDEOGRAPHIC DESCRIPTION CHARACTERS] */\n\n  /**\n   * C.8 Change display properties or are deprecated\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.8\n   */\n  0x0340, /* COMBINING GRAVE TONE MARK */\n  0x0341, /* COMBINING ACUTE TONE MARK */\n  0x200E, /* LEFT-TO-RIGHT MARK */\n  0x200F, /* RIGHT-TO-LEFT MARK */\n  0x202A, /* LEFT-TO-RIGHT EMBEDDING */\n  0x202B, /* RIGHT-TO-LEFT EMBEDDING */\n  0x202C, /* POP DIRECTIONAL FORMATTING */\n  0x202D, /* LEFT-TO-RIGHT OVERRIDE */\n  0x202E, /* RIGHT-TO-LEFT OVERRIDE */\n  0x206A, /* INHIBIT SYMMETRIC SWAPPING */\n  0x206B, /* ACTIVATE SYMMETRIC SWAPPING */\n  0x206C, /* INHIBIT ARABIC FORM SHAPING */\n  0x206D, /* ACTIVATE ARABIC FORM SHAPING */\n  0x206E, /* NATIONAL DIGIT SHAPES */\n  0x206F, /* NOMINAL DIGIT SHAPES */\n\n  /**\n   * C.9 Tagging characters\n   * @link https://tools.ietf.org/html/rfc3454#appendix-C.9\n   */\n  0xE0001, /* LANGUAGE TAG */\n  ...range(0xE0020, 0xE007F) /* [TAGGING CHARACTERS] */\n])\n\n/**\n * D.1 Characters with bidirectional property \"R\" or \"AL\"\n * @link https://tools.ietf.org/html/rfc3454#appendix-D.1\n */\nconst bidirectional_r_al = new Set([\n  0x05BE,\n  0x05C0,\n  0x05C3,\n  ...range(0x05D0, 0x05EA),\n  ...range(0x05F0, 0x05F4),\n  0x061B,\n  0x061F,\n  ...range(0x0621, 0x063A),\n  ...range(0x0640, 0x064A),\n  ...range(0x066D, 0x066F),\n  ...range(0x0671, 0x06D5),\n  0x06DD,\n  ...range(0x06E5, 0x06E6),\n  ...range(0x06FA, 0x06FE),\n  ...range(0x0700, 0x070D),\n  0x0710,\n  ...range(0x0712, 0x072C),\n  ...range(0x0780, 0x07A5),\n  0x07B1,\n  0x200F,\n  0xFB1D,\n  ...range(0xFB1F, 0xFB28),\n  ...range(0xFB2A, 0xFB36),\n  ...range(0xFB38, 0xFB3C),\n  0xFB3E,\n  ...range(0xFB40, 0xFB41),\n  ...range(0xFB43, 0xFB44),\n  ...range(0xFB46, 0xFBB1),\n  ...range(0xFBD3, 0xFD3D),\n  ...range(0xFD50, 0xFD8F),\n  ...range(0xFD92, 0xFDC7),\n  ...range(0xFDF0, 0xFDFC),\n  ...range(0xFE70, 0xFE74),\n  ...range(0xFE76, 0xFEFC),\n])\n\n/**\n * D.2 Characters with bidirectional property \"L\"\n * @link https://tools.ietf.org/html/rfc3454#appendix-D.2\n */\nconst bidirectional_l = new Set([\n  ...range(0x0041, 0x005A),\n  ...range(0x0061, 0x007A),\n  0x00AA,\n  0x00B5,\n  0x00BA,\n  ...range(0x00C0, 0x00D6),\n  ...range(0x00D8, 0x00F6),\n  ...range(0x00F8, 0x0220),\n  ...range(0x0222, 0x0233),\n  ...range(0x0250, 0x02AD),\n  ...range(0x02B0, 0x02B8),\n  ...range(0x02BB, 0x02C1),\n  ...range(0x02D0, 0x02D1),\n  ...range(0x02E0, 0x02E4),\n  0x02EE,\n  0x037A,\n  0x0386,\n  ...range(0x0388, 0x038A),\n  0x038C,\n  ...range(0x038E, 0x03A1),\n  ...range(0x03A3, 0x03CE),\n  ...range(0x03D0, 0x03F5),\n  ...range(0x0400, 0x0482),\n  ...range(0x048A, 0x04CE),\n  ...range(0x04D0, 0x04F5),\n  ...range(0x04F8, 0x04F9),\n  ...range(0x0500, 0x050F),\n  ...range(0x0531, 0x0556),\n  ...range(0x0559, 0x055F),\n  ...range(0x0561, 0x0587),\n  0x0589,\n  0x0903,\n  ...range(0x0905, 0x0939),\n  ...range(0x093D, 0x0940),\n  ...range(0x0949, 0x094C),\n  0x0950,\n  ...range(0x0958, 0x0961),\n  ...range(0x0964, 0x0970),\n  ...range(0x0982, 0x0983),\n  ...range(0x0985, 0x098C),\n  ...range(0x098F, 0x0990),\n  ...range(0x0993, 0x09A8),\n  ...range(0x09AA, 0x09B0),\n  0x09B2,\n  ...range(0x09B6, 0x09B9),\n  ...range(0x09BE, 0x09C0),\n  ...range(0x09C7, 0x09C8),\n  ...range(0x09CB, 0x09CC),\n  0x09D7,\n  ...range(0x09DC, 0x09DD),\n  ...range(0x09DF, 0x09E1),\n  ...range(0x09E6, 0x09F1),\n  ...range(0x09F4, 0x09FA),\n  ...range(0x0A05, 0x0A0A),\n  ...range(0x0A0F, 0x0A10),\n  ...range(0x0A13, 0x0A28),\n  ...range(0x0A2A, 0x0A30),\n  ...range(0x0A32, 0x0A33),\n  ...range(0x0A35, 0x0A36),\n  ...range(0x0A38, 0x0A39),\n  ...range(0x0A3E, 0x0A40),\n  ...range(0x0A59, 0x0A5C),\n  0x0A5E,\n  ...range(0x0A66, 0x0A6F),\n  ...range(0x0A72, 0x0A74),\n  0x0A83,\n  ...range(0x0A85, 0x0A8B),\n  0x0A8D,\n  ...range(0x0A8F, 0x0A91),\n  ...range(0x0A93, 0x0AA8),\n  ...range(0x0AAA, 0x0AB0),\n  ...range(0x0AB2, 0x0AB3),\n  ...range(0x0AB5, 0x0AB9),\n  ...range(0x0ABD, 0x0AC0),\n  0x0AC9,\n  ...range(0x0ACB, 0x0ACC),\n  0x0AD0,\n  0x0AE0,\n  ...range(0x0AE6, 0x0AEF),\n  ...range(0x0B02, 0x0B03),\n  ...range(0x0B05, 0x0B0C),\n  ...range(0x0B0F, 0x0B10),\n  ...range(0x0B13, 0x0B28),\n  ...range(0x0B2A, 0x0B30),\n  ...range(0x0B32, 0x0B33),\n  ...range(0x0B36, 0x0B39),\n  ...range(0x0B3D, 0x0B3E),\n  0x0B40,\n  ...range(0x0B47, 0x0B48),\n  ...range(0x0B4B, 0x0B4C),\n  0x0B57,\n  ...range(0x0B5C, 0x0B5D),\n  ...range(0x0B5F, 0x0B61),\n  ...range(0x0B66, 0x0B70),\n  0x0B83,\n  ...range(0x0B85, 0x0B8A),\n  ...range(0x0B8E, 0x0B90),\n  ...range(0x0B92, 0x0B95),\n  ...range(0x0B99, 0x0B9A),\n  0x0B9C,\n  ...range(0x0B9E, 0x0B9F),\n  ...range(0x0BA3, 0x0BA4),\n  ...range(0x0BA8, 0x0BAA),\n  ...range(0x0BAE, 0x0BB5),\n  ...range(0x0BB7, 0x0BB9),\n  ...range(0x0BBE, 0x0BBF),\n  ...range(0x0BC1, 0x0BC2),\n  ...range(0x0BC6, 0x0BC8),\n  ...range(0x0BCA, 0x0BCC),\n  0x0BD7,\n  ...range(0x0BE7, 0x0BF2),\n  ...range(0x0C01, 0x0C03),\n  ...range(0x0C05, 0x0C0C),\n  ...range(0x0C0E, 0x0C10),\n  ...range(0x0C12, 0x0C28),\n  ...range(0x0C2A, 0x0C33),\n  ...range(0x0C35, 0x0C39),\n  ...range(0x0C41, 0x0C44),\n  ...range(0x0C60, 0x0C61),\n  ...range(0x0C66, 0x0C6F),\n  ...range(0x0C82, 0x0C83),\n  ...range(0x0C85, 0x0C8C),\n  ...range(0x0C8E, 0x0C90),\n  ...range(0x0C92, 0x0CA8),\n  ...range(0x0CAA, 0x0CB3),\n  ...range(0x0CB5, 0x0CB9),\n  0x0CBE,\n  ...range(0x0CC0, 0x0CC4),\n  ...range(0x0CC7, 0x0CC8),\n  ...range(0x0CCA, 0x0CCB),\n  ...range(0x0CD5, 0x0CD6),\n  0x0CDE,\n  ...range(0x0CE0, 0x0CE1),\n  ...range(0x0CE6, 0x0CEF),\n  ...range(0x0D02, 0x0D03),\n  ...range(0x0D05, 0x0D0C),\n  ...range(0x0D0E, 0x0D10),\n  ...range(0x0D12, 0x0D28),\n  ...range(0x0D2A, 0x0D39),\n  ...range(0x0D3E, 0x0D40),\n  ...range(0x0D46, 0x0D48),\n  ...range(0x0D4A, 0x0D4C),\n  0x0D57,\n  ...range(0x0D60, 0x0D61),\n  ...range(0x0D66, 0x0D6F),\n  ...range(0x0D82, 0x0D83),\n  ...range(0x0D85, 0x0D96),\n  ...range(0x0D9A, 0x0DB1),\n  ...range(0x0DB3, 0x0DBB),\n  0x0DBD,\n  ...range(0x0DC0, 0x0DC6),\n  ...range(0x0DCF, 0x0DD1),\n  ...range(0x0DD8, 0x0DDF),\n  ...range(0x0DF2, 0x0DF4),\n  ...range(0x0E01, 0x0E30),\n  ...range(0x0E32, 0x0E33),\n  ...range(0x0E40, 0x0E46),\n  ...range(0x0E4F, 0x0E5B),\n  ...range(0x0E81, 0x0E82),\n  0x0E84,\n  ...range(0x0E87, 0x0E88),\n  0x0E8A,\n  0x0E8D,\n  ...range(0x0E94, 0x0E97),\n  ...range(0x0E99, 0x0E9F),\n  ...range(0x0EA1, 0x0EA3),\n  0x0EA5,\n  0x0EA7,\n  ...range(0x0EAA, 0x0EAB),\n  ...range(0x0EAD, 0x0EB0),\n  ...range(0x0EB2, 0x0EB3),\n  0x0EBD,\n  ...range(0x0EC0, 0x0EC4),\n  0x0EC6,\n  ...range(0x0ED0, 0x0ED9),\n  ...range(0x0EDC, 0x0EDD),\n  ...range(0x0F00, 0x0F17),\n  ...range(0x0F1A, 0x0F34),\n  0x0F36,\n  0x0F38,\n  ...range(0x0F3E, 0x0F47),\n  ...range(0x0F49, 0x0F6A),\n  0x0F7F,\n  0x0F85,\n  ...range(0x0F88, 0x0F8B),\n  ...range(0x0FBE, 0x0FC5),\n  ...range(0x0FC7, 0x0FCC),\n  0x0FCF,\n  ...range(0x1000, 0x1021),\n  ...range(0x1023, 0x1027),\n  ...range(0x1029, 0x102A),\n  0x102C,\n  0x1031,\n  0x1038,\n  ...range(0x1040, 0x1057),\n  ...range(0x10A0, 0x10C5),\n  ...range(0x10D0, 0x10F8),\n  0x10FB,\n  ...range(0x1100, 0x1159),\n  ...range(0x115F, 0x11A2),\n  ...range(0x11A8, 0x11F9),\n  ...range(0x1200, 0x1206),\n  ...range(0x1208, 0x1246),\n  0x1248,\n  ...range(0x124A, 0x124D),\n  ...range(0x1250, 0x1256),\n  0x1258,\n  ...range(0x125A, 0x125D),\n  ...range(0x1260, 0x1286),\n  0x1288,\n  ...range(0x128A, 0x128D),\n  ...range(0x1290, 0x12AE),\n  0x12B0,\n  ...range(0x12B2, 0x12B5),\n  ...range(0x12B8, 0x12BE),\n  0x12C0,\n  ...range(0x12C2, 0x12C5),\n  ...range(0x12C8, 0x12CE),\n  ...range(0x12D0, 0x12D6),\n  ...range(0x12D8, 0x12EE),\n  ...range(0x12F0, 0x130E),\n  0x1310,\n  ...range(0x1312, 0x1315),\n  ...range(0x1318, 0x131E),\n  ...range(0x1320, 0x1346),\n  ...range(0x1348, 0x135A),\n  ...range(0x1361, 0x137C),\n  ...range(0x13A0, 0x13F4),\n  ...range(0x1401, 0x1676),\n  ...range(0x1681, 0x169A),\n  ...range(0x16A0, 0x16F0),\n  ...range(0x1700, 0x170C),\n  ...range(0x170E, 0x1711),\n  ...range(0x1720, 0x1731),\n  ...range(0x1735, 0x1736),\n  ...range(0x1740, 0x1751),\n  ...range(0x1760, 0x176C),\n  ...range(0x176E, 0x1770),\n  ...range(0x1780, 0x17B6),\n  ...range(0x17BE, 0x17C5),\n  ...range(0x17C7, 0x17C8),\n  ...range(0x17D4, 0x17DA),\n  0x17DC,\n  ...range(0x17E0, 0x17E9),\n  ...range(0x1810, 0x1819),\n  ...range(0x1820, 0x1877),\n  ...range(0x1880, 0x18A8),\n  ...range(0x1E00, 0x1E9B),\n  ...range(0x1EA0, 0x1EF9),\n  ...range(0x1F00, 0x1F15),\n  ...range(0x1F18, 0x1F1D),\n  ...range(0x1F20, 0x1F45),\n  ...range(0x1F48, 0x1F4D),\n  ...range(0x1F50, 0x1F57),\n  0x1F59,\n  0x1F5B,\n  0x1F5D,\n  ...range(0x1F5F, 0x1F7D),\n  ...range(0x1F80, 0x1FB4),\n  ...range(0x1FB6, 0x1FBC),\n  0x1FBE,\n  ...range(0x1FC2, 0x1FC4),\n  ...range(0x1FC6, 0x1FCC),\n  ...range(0x1FD0, 0x1FD3),\n  ...range(0x1FD6, 0x1FDB),\n  ...range(0x1FE0, 0x1FEC),\n  ...range(0x1FF2, 0x1FF4),\n  ...range(0x1FF6, 0x1FFC),\n  0x200E,\n  0x2071,\n  0x207F,\n  0x2102,\n  0x2107,\n  ...range(0x210A, 0x2113),\n  0x2115,\n  ...range(0x2119, 0x211D),\n  0x2124,\n  0x2126,\n  0x2128,\n  ...range(0x212A, 0x212D),\n  ...range(0x212F, 0x2131),\n  ...range(0x2133, 0x2139),\n  ...range(0x213D, 0x213F),\n  ...range(0x2145, 0x2149),\n  ...range(0x2160, 0x2183),\n  ...range(0x2336, 0x237A),\n  0x2395,\n  ...range(0x249C, 0x24E9),\n  ...range(0x3005, 0x3007),\n  ...range(0x3021, 0x3029),\n  ...range(0x3031, 0x3035),\n  ...range(0x3038, 0x303C),\n  ...range(0x3041, 0x3096),\n  ...range(0x309D, 0x309F),\n  ...range(0x30A1, 0x30FA),\n  ...range(0x30FC, 0x30FF),\n  ...range(0x3105, 0x312C),\n  ...range(0x3131, 0x318E),\n  ...range(0x3190, 0x31B7),\n  ...range(0x31F0, 0x321C),\n  ...range(0x3220, 0x3243),\n  ...range(0x3260, 0x327B),\n  ...range(0x327F, 0x32B0),\n  ...range(0x32C0, 0x32CB),\n  ...range(0x32D0, 0x32FE),\n  ...range(0x3300, 0x3376),\n  ...range(0x337B, 0x33DD),\n  ...range(0x33E0, 0x33FE),\n  ...range(0x3400, 0x4DB5),\n  ...range(0x4E00, 0x9FA5),\n  ...range(0xA000, 0xA48C),\n  ...range(0xAC00, 0xD7A3),\n  ...range(0xD800, 0xFA2D),\n  ...range(0xFA30, 0xFA6A),\n  ...range(0xFB00, 0xFB06),\n  ...range(0xFB13, 0xFB17),\n  ...range(0xFF21, 0xFF3A),\n  ...range(0xFF41, 0xFF5A),\n  ...range(0xFF66, 0xFFBE),\n  ...range(0xFFC2, 0xFFC7),\n  ...range(0xFFCA, 0xFFCF),\n  ...range(0xFFD2, 0xFFD7),\n  ...range(0xFFDA, 0xFFDC),\n  ...range(0x10300, 0x1031E),\n  ...range(0x10320, 0x10323),\n  ...range(0x10330, 0x1034A),\n  ...range(0x10400, 0x10425),\n  ...range(0x10428, 0x1044D),\n  ...range(0x1D000, 0x1D0F5),\n  ...range(0x1D100, 0x1D126),\n  ...range(0x1D12A, 0x1D166),\n  ...range(0x1D16A, 0x1D172),\n  ...range(0x1D183, 0x1D184),\n  ...range(0x1D18C, 0x1D1A9),\n  ...range(0x1D1AE, 0x1D1DD),\n  ...range(0x1D400, 0x1D454),\n  ...range(0x1D456, 0x1D49C),\n  ...range(0x1D49E, 0x1D49F),\n  0x1D4A2,\n  ...range(0x1D4A5, 0x1D4A6),\n  ...range(0x1D4A9, 0x1D4AC),\n  ...range(0x1D4AE, 0x1D4B9),\n  0x1D4BB,\n  ...range(0x1D4BD, 0x1D4C0),\n  ...range(0x1D4C2, 0x1D4C3),\n  ...range(0x1D4C5, 0x1D505),\n  ...range(0x1D507, 0x1D50A),\n  ...range(0x1D50D, 0x1D514),\n  ...range(0x1D516, 0x1D51C),\n  ...range(0x1D51E, 0x1D539),\n  ...range(0x1D53B, 0x1D53E),\n  ...range(0x1D540, 0x1D544),\n  0x1D546,\n  ...range(0x1D54A, 0x1D550),\n  ...range(0x1D552, 0x1D6A3),\n  ...range(0x1D6A8, 0x1D7C9),\n  ...range(0x20000, 0x2A6D6),\n  ...range(0x2F800, 0x2FA1D),\n  ...range(0xF0000, 0xFFFFD),\n  ...range(0x100000, 0x10FFFD)\n])\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l\n}\n","'use strict'\n\nfunction range(from, to) {\n  // TODO: make this inlined.\n  const list = Array.apply(null, new Array(to - from + 1))\n\n  for(let i = 0; i < list.length; ++i) {\n    list[i] = from + i\n  }\n  return list\n}\n\nmodule.exports = {\n  range\n}\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/**\n * Copyright 2018 Initiate Thinking (https://www.initiatethinking.com)\n * Author: Nigel Daniels\n * MIT Licensed\n */\nimport MongoClient from 'mongodb';\n\nlet options = {\n\turl:\t\t\t'mongodb://localhost:27017/',\n\tconnect_opts:\t{useNewUrlParser: true},\n\tname:\t\t\t'reduxdb',\n\tcollection:\t\t'state'\n};\n\nconst MongoDBStore = {\n\n\tconfigure: (opts) => {\n\t\toptions.url = !opts.url ? options.url : opts.url;\n\t\toptions.connect_opts = !opts.connect_opts ? options.connect_opts : opts.connect_opts;\n\t\toptions.name = !opts.name ? options.name : opts.name;\n\t\toptions.collection = !opts.collection ? options.collection : opts.collection;\n\t},\n\n\n\tgetItem: (key) => {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tMongoClient.connect(options.url, options.connect_opts, function(err, client) {\n\t\t\t\t\tif (err) { throw err;}\n\n\t\t\t\t\tlet db = client.db(options.name);\n\t\t\t\t\tif (db === null) {throw new Error('No DB!');}\n\n\t\t\t\t\tdb.collection(options.collection, (err, collection) => {\n\t\t\t\t\t\tcollection.findOne({key}, {bypassDocumentValidation: true}, function(err, result) {\n\t\t\t\t\t\t\tif (err) {throw err;}\n\t\t\t\t\t\t\tdb.close();\n\t\t\t\t\t\t\tprocess.nextTick(() => resolve(result));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcatch (err)\n\t\t\t\t{reject(err);}\n\t\t\t});\n\t\t},\n\n\n\tsetItem: (key, value) => {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\ttry {\n\n\t\t\t\tMongoClient.connect(options.url, options.connect_opts, (err, client) => {\n\t  \t\t\t\tif (err) {throw err;}\n\n\t\t\t\t\tlet db = client.db(options.name);\n\t\t\t\t\tif (db === null) {throw new Error('No DB!');}\n\n\t\t\t\t\tdb.collection(options.collection, (err, collection) => {\n\t\t\t\t\t\tcollection.replaceOne({key}, {key, value}, {upsert: true}, function(err, result) {\n\t\t\t\t\t\t\tif (err) {throw err;}\n\t\t    \t\t\t\tclient.close();\n\t\t\t\t\t\t\tprocess.nextTick(() => resolve());\n\t\t  \t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcatch (err)\n\t\t\t\t{reject(err);}\n\t\t\t});\n\t\t},\n\n\n\tremoveItem: (key) => {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tMongoClient.connect(options.url, options.connect_opts, function(err, client) {\n\t\t\t\t\tif (err) { throw err;}\n\n\t\t\t\t\tlet db = client.db(options.name);\n\t\t\t\t\tif (db === null) {throw new Error('No DB!');}\n\n\t\t\t\t\tdb.collection(options.collection, (err, collection) => {\n\t\t\t\t\t\tcollection.findOneandDelete({key}, function(err, result) {\n\t\t\t\t\t\t\tif (err) {throw err;}\n\t\t\t\t\t\t\tclient.close();\n\t\t\t\t\t\t\tprocess.nextTick(() => resolve());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcatch (err)\n\t\t\t\t{reject(err);}\n\t\t\t});\n\t\t}\n\n\t};\n\nexport default MongoDBStore;\n","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");"],"sourceRoot":""}